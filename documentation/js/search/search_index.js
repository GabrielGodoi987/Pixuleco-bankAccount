var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/Account.html",[0,0.145,1,1.656]],["body/classes/Account.html",[0,0.162,1,2.435,2,1.086,3,0.226,4,0.2,5,0.2,6,1.169,7,3.49,8,2.586,9,3.71,10,0.336,11,1.583,12,2.722,13,3.288,14,3.529,15,1.77,16,0.702,17,5.994,18,2.18,19,2.891,20,0.02,21,1.755,22,0.847,23,4.074,24,1.554,25,4.074,26,4.074,27,4.074,28,3.81,29,4.074,30,4.074,31,2.722,32,4.074,33,4.074,34,0.411,35,1.85,36,2.819,37,2.398,38,3.106,39,0.226,40,0.014,41,0.014]],["title/controllers/AccountController.html",[42,1.758,43,2.523]],["body/controllers/AccountController.html",[0,0.092,1,2.544,3,0.128,4,0.113,5,0.113,6,0.921,10,0.19,12,2.653,16,0.514,18,0.839,19,2.909,20,0.02,21,2.233,22,0.638,24,1.415,34,0.384,39,0.128,40,0.009,41,0.009,42,1.113,43,2.467,44,1.113,45,1.977,46,1.759,47,2.77,48,0.902,49,2.352,50,3.322,51,3.015,52,4.358,53,2.886,54,3.733,55,1.977,56,3.834,57,1.735,58,4.54,59,1.528,60,3.737,61,2.307,62,2.307,63,1.341,64,0.871,65,1.274,66,3.055,67,1.274,68,2.721,69,1.977,70,3.552,71,3.566,72,2.401,73,3.566,74,2.307,75,2.307,76,3.055,77,2.307,78,2.886,79,2.886,80,3.566,81,2.307,82,2.307,83,1.977,84,3.298,85,3.566,86,3.566,87,3.566,88,3.566,89,2.307,90,2.307,91,2.307,92,3.055,93,3.055,94,2.307,95,2.307,96,3.392,97,1.977,98,3.055,99,1.759,100,1.358,101,0.526,102,2.099,103,1.977,104,1.596,105,1.977,106,4.8,107,0.989,108,1.759,109,1.759,110,2.307,111,1.358,112,0.885,113,2.307,114,4.54,115,2.307,116,2.307,117,3.566,118,2.307,119,2.307,120,1.977,121,1.735,122,1.585,123,2.307,124,1.977,125,2.307,126,2.307,127,2.266,128,3.566,129,2.77,130,2.307,131,1.466,132,2.266,133,2.307,134,2.307,135,1.759,136,3.322,137,2.099,138,2.307,139,2.307,140,1.977,141,2.307,142,2.307,143,2.307,144,3.566,145,2.307,146,2.307,147,2.307,148,2.307,149,2.307,150,2.307,151,2.307,152,1.358,153,1.759,154,2.307,155,1.759,156,2.307,157,2.307,158,2.307,159,2.307,160,1.977,161,2.307,162,1.596,163,1.977,164,2.307,165,1.977,166,2.307,167,2.307,168,1.759,169,1.596,170,1.759,171,2.307]],["title/entities/AccountEntity.html",[35,1.656,172,2]],["body/entities/AccountEntity.html",[0,0.117,3,0.163,4,0.144,5,0.144,10,0.243,11,1.264,12,2.291,13,2.767,14,2.969,15,1.489,16,0.705,18,2.139,19,2.064,20,0.02,21,1.401,22,0.81,24,1.405,28,3.206,31,2.515,34,0.404,35,1.944,39,0.163,40,0.011,41,0.011,57,2.201,64,0.967,172,1.614,173,1.871,174,2.522,175,5.044,176,3.021,177,5.044,178,2.969,179,4.222,180,3.263,181,2.72,182,2.198,183,2.943,184,2.522,185,2.671,186,2.943,187,4.28,188,4.28,189,2.961,190,4.28,191,2.064,192,1.944,193,2.52,194,2.943,195,3.263,196,2.943,197,3.253,198,3.667,199,4.222,200,4.28,201,2.943,202,4.321,203,3.831,204,2.943,205,4.28,206,2.943,207,2.943,208,2.244,209,2.943,210,2.522,211,2.943,212,2.943,213,4.485,214,3.667,215,3.667,216,3.667,217,4.321,218,2.244,219,3.263,220,1.337,221,2.943,222,2.943,223,3.667,224,2.943,225,2.943,226,2.943,227,2.943]],["title/modules/AccountModule.html",[228,1.563,229,2.317]],["body/modules/AccountModule.html",[0,0.136,3,0.189,4,0.168,5,0.168,6,0.562,20,0.02,31,1.552,34,0.493,35,2.162,36,2.364,37,2.012,39,0.189,40,0.013,41,0.013,43,3.79,44,2.296,51,2.364,53,2.012,64,0.782,101,0.78,102,4.167,103,2.928,197,2.444,228,2.348,229,4.611,230,1.755,231,1.875,232,2.172,233,2.172,234,1.875,235,3.225,236,3.225,237,2.928,238,2.928,239,2.928,240,4.167,241,2.929,242,3.538,243,3.111,244,3.026,245,2.172,246,2.012,247,3.418,248,2.364,249,2.605,250,1.875,251,2.605,252,2.605,253,2.928,254,3.418,255,3.418,256,2.928,257,1.875,258,3.294,259,3.418,260,3.294,261,3.418,262,2.605,263,2.928,264,3.418,265,3.294]],["title/injectables/AccountRepository.html",[241,1.656,266,0.923]],["body/injectables/AccountRepository.html",[0,0.067,1,2.446,3,0.093,4,0.083,5,0.083,6,0.988,9,2.448,10,0.139,11,0.82,12,2.674,14,1.635,15,0.498,16,0.653,18,0.613,19,2.691,20,0.02,21,2.005,22,0.709,24,1.302,28,1.765,34,0.354,35,0.766,38,1.286,39,0.093,40,0.007,41,0.007,48,0.703,49,2.334,50,2.117,51,2.448,53,0.993,54,3.032,59,0.723,63,1.412,64,0.917,65,1.341,67,1.294,68,2.106,72,2.309,78,1.635,79,1.635,100,2.669,101,0.385,112,2.066,121,1.928,122,1.649,129,3.276,131,1.765,182,0.866,191,1.978,192,1.261,197,0.866,199,2.117,220,0.766,241,1.261,250,0.925,266,0.703,267,0.723,268,1.445,269,2.954,270,3.539,271,3.539,272,2.777,273,2.379,274,3.539,275,2.777,276,2.777,277,1.261,278,1.687,279,3.567,280,3.032,281,2.777,282,2.379,283,2.777,284,1.687,285,2.486,286,2.777,287,3.726,288,1.687,289,2.777,290,1.687,291,2.777,292,1.687,293,1.687,294,1.687,295,1.687,296,1.687,297,1.687,298,2.777,299,1.687,300,1.687,301,1.687,302,2.379,303,1.687,304,2.777,305,1.286,306,1.687,307,1.687,308,1.687,309,1.687,310,1.445,311,2.871,312,1.978,313,2.698,314,1.687,315,1.687,316,1.687,317,2.379,318,2.379,319,1.687,320,1.687,321,3.539,322,4.101,323,2.777,324,4.101,325,2.215,326,1.687,327,1.687,328,2.669,329,1.687,330,1.445,331,1.167,332,1.687,333,2.777,334,1.687,335,3.539,336,1.687,337,1.687,338,1.687,339,1.687,340,4.101,341,4.101,342,1.687,343,1.445,344,2.777,345,2.777,346,2.777,347,1.687,348,1.687,349,1.687,350,1.445,351,1.687,352,1.687,353,1.687,354,1.286,355,1.687,356,1.687,357,1.687,358,1.445,359,1.921,360,3.539,361,2.487,362,3.152,363,2.414,364,3.374,365,1.687,366,1.687,367,1.687,368,2.448,369,1.635,370,2.777,371,3.539,372,1.167,373,1.687,374,1.445,375,1.687,376,1.687,377,1.687]],["title/injectables/AccountService.html",[102,2.146,266,0.923]],["body/injectables/AccountService.html",[0,0.056,1,2.641,3,0.079,4,0.07,5,0.07,6,0.913,10,0.117,12,2.523,14,0.835,15,0.419,16,0.585,18,1.963,19,2.415,20,0.02,21,1.904,22,0.65,24,1.202,34,0.358,39,0.079,40,0.006,41,0.006,47,1.527,48,0.608,49,2.29,50,3.407,51,1.662,53,1.414,55,2.058,56,2.338,59,0.608,63,1.32,64,0.857,65,1.254,66,1.215,67,1.254,68,2.295,69,2.058,70,2.948,72,1.339,76,2.058,78,3.071,79,2.165,83,2.058,84,2.803,92,2.677,93,1.215,100,0.835,101,0.324,102,1.414,104,0.981,105,1.215,108,1.081,109,1.081,112,0.922,121,1.819,122,2.155,127,1.986,129,2.338,131,1.527,132,1.527,136,2.804,137,1.414,140,1.215,152,2.165,153,1.831,168,1.081,170,1.831,182,2.113,185,1.158,193,0.835,241,2.03,243,2.296,248,0.981,252,1.081,257,0.778,265,3.734,266,0.608,267,0.608,269,2.612,273,2.058,277,1.091,285,1.158,287,2.545,311,1.84,312,2.273,325,1.419,328,1.84,361,1.714,362,2.451,363,0.835,364,1.662,378,1.215,379,2.402,380,3.125,381,2.402,382,3.678,383,1.081,384,3.125,385,3.125,386,1.418,387,1.418,388,2.402,389,1.418,390,2.402,391,1.418,392,1.418,393,1.418,394,1.418,395,2.402,396,1.418,397,1.418,398,1.418,399,1.418,400,1.418,401,1.662,402,1.418,403,1.418,404,0.901,405,1.215,406,1.418,407,0.981,408,1.418,409,1.418,410,3.316,411,2.451,412,1.418,413,1.418,414,0.901,415,2.402,416,1.418,417,2.402,418,1.418,419,3.125,420,1.418,421,1.081,422,1.527,423,1.414,424,1.081,425,1.081,426,1.215,427,1.081,428,1.418,429,2.677,430,2.402,431,1.081,432,1.831,433,2.677,434,1.418,435,3.151,436,1.418,437,2.382,438,1.418,439,2.402,440,1.418,441,1.418,442,1.418,443,1.215,444,1.418,445,1.215,446,1.418,447,1.418,448,0.901,449,1.418,450,1.418,451,1.215,452,1.418,453,1.418,454,1.418,455,1.418,456,1.418,457,1.418,458,1.418,459,1.418,460,2.402,461,1.418,462,1.215,463,1.418,464,1.215,465,1.215,466,2.162,467,1.081,468,2.402,469,1.418,470,1.418,471,3.678,472,1.215,473,1.418,474,1.418,475,1.418,476,1.081,477,1.418,478,1.418,479,1.418,480,0.835,481,0.835,482,2.402,483,2.402,484,1.418,485,1.215,486,1.418,487,1.418,488,2.382,489,1.418,490,1.418,491,2.162,492,2.402,493,2.402,494,2.402,495,2.402,496,2.402,497,1.418,498,1.418,499,1.418,500,1.418,501,1.418,502,1.215,503,2.058,504,2.058,505,1.418,506,2.402,507,1.418,508,1.418,509,1.418,510,1.418,511,1.418,512,1.418,513,1.418,514,1.418,515,2.402,516,2.402,517,1.418,518,2.058,519,1.418,520,1.418,521,1.418,522,1.418,523,1.215,524,1.418,525,1.215,526,1.418,527,1.418,528,1.418,529,1.418,530,2.402,531,2.402,532,1.215,533,1.215,534,1.418,535,1.418,536,1.418]],["title/controllers/AppController.html",[42,1.758,537,2.523]],["body/controllers/AppController.html",[0,0.198,3,0.277,4,0.245,5,0.245,10,0.412,20,0.02,22,0.601,24,1.321,34,0.419,39,0.277,40,0.016,41,0.016,42,2.942,44,2.408,48,1.544,57,1.634,67,1.2,101,1.139,111,2.939,112,1.915,121,1.634,537,4.221,538,4.277,539,5.88,540,4.993,541,3.879,542,4.277,543,4.993]],["title/modules/AppModule.html",[228,1.563,544,2.523]],["body/modules/AppModule.html",[0,0.147,3,0.205,4,0.181,5,0.181,20,0.02,34,0.488,39,0.205,40,0.013,41,0.013,44,2.422,101,0.843,182,1.897,223,4.889,228,2.446,229,4.198,230,1.897,231,2.026,232,2.348,233,2.348,234,2.026,235,3.359,236,2.175,244,3.192,245,2.348,246,2.175,249,2.816,250,2.026,256,3.165,257,2.026,262,3.829,537,3.948,541,3.889,542,3.165,544,5.023,545,3.165,546,3.165,547,3.165,548,4.198,549,4.198,550,4.198,551,3.694,552,3.694,553,3.694,554,3.694,555,3.694,556,2.816,557,3.694,558,3.694,559,3.694,560,2.556,561,3.694,562,3.694,563,3.694,564,3.694,565,3.694,566,3.694,567,5.023,568,2.816,569,3.165,570,3.694]],["title/injectables/AppService.html",[266,0.923,541,2.146]],["body/injectables/AppService.html",[0,0.206,3,0.287,4,0.254,5,0.254,10,0.427,20,0.02,22,0.624,24,1.351,34,0.356,39,0.287,40,0.017,41,0.017,48,1.579,67,1.245,101,1.182,121,1.696,266,1.579,267,2.221,539,5.954,541,3.673,571,4.439,572,5.182,573,5.182,574,5.182]],["title/injectables/AuthApiKeyMiddleware.html",[266,0.923,575,2.78]],["body/injectables/AuthApiKeyMiddleware.html",[0,0.185,3,0.259,4,0.229,5,0.229,8,2.251,10,0.385,16,0.453,20,0.02,22,0.562,34,0.402,39,0.259,40,0.016,41,0.016,48,1.481,63,1.181,64,0.767,65,1.122,67,1.122,101,1.065,266,1.481,267,2.001,422,4.26,575,4.461,576,5.014,577,5.014,578,3.999,579,4.049,580,5.014,581,3.946,582,5.477,583,5.11,584,5.742,585,4.668,586,3.558,587,3.999,588,5.014,589,2.966]],["title/controllers/AuthController.html",[42,1.758,590,2.523]],["body/controllers/AuthController.html",[0,0.184,3,0.256,4,0.227,5,0.227,6,0.956,10,0.381,16,0.449,20,0.02,22,0.557,34,0.437,39,0.256,40,0.015,41,0.015,42,2.23,44,2.23,46,3.525,48,1.473,49,1.595,57,1.514,63,1.17,64,0.76,65,1.112,67,1.112,96,3.199,99,3.525,101,1.055,111,2.722,112,1.774,121,1.514,590,4.025,591,3.962,592,4.625,593,4.985,594,4.625,595,4.246,596,5.818,597,4.625,598,5.818,599,3.962,600,3.747,601,3.962,602,4.625,603,4.625,604,4.625,605,4.625]],["title/injectables/AuthMiddleware.html",[266,0.923,606,2.78]],["body/injectables/AuthMiddleware.html",[0,0.137,3,0.191,4,0.169,5,0.169,6,0.904,8,1.659,10,0.284,16,0.464,20,0.02,22,0.576,34,0.428,39,0.191,40,0.013,41,0.013,48,1.211,49,1.896,63,1.211,64,0.786,65,1.15,67,0.827,101,0.785,112,1.835,122,1.251,131,3.04,132,2.187,136,2.623,152,3.237,162,2.381,169,2.381,170,2.623,176,1.767,185,1.659,266,1.211,267,1.475,269,2.624,277,2.172,312,1.835,354,2.623,372,2.381,411,1.563,422,3.494,465,4.098,466,2.381,467,2.623,525,2.948,560,2.381,579,3.309,580,4.098,581,3.498,582,4.71,583,4.53,584,5.091,586,2.623,588,4.098,589,2.187,606,3.646,607,2.948,608,3.441,609,4.928,610,5.681,611,3.441,612,3.441,613,2.948,614,2.381,615,2.381,616,3.441,617,5.35,618,3.441,619,3.441,620,2.623,621,2.623,622,2.948,623,2.623,624,3.441,625,4.783,626,2.948,627,3.441,628,3.441,629,3.441,630,3.441,631,3.441,632,3.441,633,3.441,634,3.441,635,2.948,636,3.441,637,3.441,638,3.441,639,3.441,640,3.441,641,3.441,642,3.441,643,3.441,644,2.948,645,3.441,646,3.441,647,3.441,648,2.623,649,3.441]],["title/modules/AuthModule.html",[228,1.563,548,2.317]],["body/modules/AuthModule.html",[0,0.188,3,0.262,4,0.232,5,0.232,6,0.777,20,0.02,34,0.462,39,0.262,40,0.016,41,0.016,44,2.844,101,1.078,228,2.756,230,2.427,231,2.592,232,3.004,233,3.004,234,2.592,235,3.785,236,2.782,244,3.748,245,3.004,246,2.782,548,4.491,590,4.448,600,4.16,601,4.049,609,4.496,614,3.27,650,4.049,651,4.049,652,4.726,653,4.726]],["title/injectables/AuthService.html",[266,0.923,600,2.146]],["body/injectables/AuthService.html",[0,0.141,3,0.197,4,0.174,5,0.174,6,0.919,10,0.293,16,0.475,18,2.034,20,0.02,22,0.589,34,0.459,39,0.197,40,0.013,41,0.013,48,1.238,49,1.929,63,1.238,64,0.919,65,1.176,67,0.854,101,0.811,112,2.146,121,1.164,122,1.779,152,2.093,162,2.459,165,3.045,243,3.149,252,2.71,266,1.238,267,1.524,269,3.068,277,2.222,285,2.359,312,2.146,410,3.109,411,2.222,466,2.459,467,2.71,560,2.459,593,4.191,595,4.15,599,3.045,600,2.88,609,5.1,610,5.731,614,2.459,626,3.045,654,3.045,655,3.555,656,3.555,657,4.892,658,3.555,659,3.555,660,3.384,661,3.555,662,3.555,663,3.729,664,2.097,665,1.714,666,3.555,667,3.555,668,3.555,669,3.555,670,3.555,671,3.555,672,3.555,673,3.555,674,3.555,675,3.555,676,3.555,677,3.555,678,3.045,679,3.555,680,3.555,681,3.555]],["title/classes/CreateAccountDto.html",[0,0.145,56,2.317]],["body/classes/CreateAccountDto.html",[0,0.227,2,1.199,3,0.249,4,0.221,5,0.221,6,1.033,10,0.371,11,1.689,15,1.689,16,0.663,18,1.636,19,3.031,20,0.02,22,0.689,24,1.238,28,3.995,34,0.431,38,3.431,39,0.249,40,0.015,41,0.015,56,3.635,57,1.872,60,4.36,107,1.929,192,2.044,325,2.044,682,4.792,683,3.855,684,4.5,685,4.5,686,4.5,687,4.5,688,4.5,689,4.5,690,3.448,691,3.855,692,3.367,693,4.36,694,2.469,695,2.86,696,4.5]],["title/classes/CreateTableAccounts1752935606883.html",[0,0.145,697,2.78]],["body/classes/CreateTableAccounts1752935606883.html",[0,0.152,2,1.022,3,0.213,4,0.188,5,0.188,8,2.484,10,0.316,12,2.642,13,2.104,14,2.258,15,1.132,16,0.565,19,2.484,20,0.019,22,0.62,34,0.263,39,0.213,40,0.014,41,0.014,48,1.304,49,2.237,59,2.665,63,1.304,64,0.847,65,1.238,67,1.238,122,1.873,176,1.969,178,2.258,180,2.924,181,2.438,185,2.484,191,1.85,192,3.033,193,2.258,203,3.564,220,1.742,285,2.805,302,4.413,325,1.742,328,2.258,414,3.274,423,2.258,437,2.924,697,3.927,698,4.983,699,4.488,700,3.286,701,4.434,702,4.945,703,3.927,704,3.927,705,2.924,706,5.288,707,3.835,708,3.927,709,3.835,710,2.924,711,3.564,712,2.924,713,2.924,714,3.835,715,3.927,716,4.413,717,3.835,718,3.286,719,3.286,720,3.835,721,3.835,722,3.835,723,2.924]],["title/classes/CreateTableTransaction1752935614586.html",[0,0.145,724,2.78]],["body/classes/CreateTableTransaction1752935614586.html",[0,0.151,2,1.014,3,0.211,4,0.187,5,0.187,8,2.471,10,0.314,15,1.124,16,0.497,20,0.02,22,0.617,34,0.261,39,0.211,40,0.014,41,0.014,48,1.297,49,2.299,59,2.657,63,1.297,64,0.842,65,1.232,67,1.232,122,1.864,176,1.954,180,3.907,185,2.471,191,1.835,192,2.631,203,3.546,220,1.729,285,2.989,414,3.683,423,3.649,448,2.419,480,3.017,481,3.017,699,4.476,701,4.417,702,5.081,703,3.907,704,3.907,705,3.907,706,5.348,708,3.907,710,2.902,711,2.633,712,2.902,713,2.902,715,2.902,716,4.391,718,4.391,719,4.391,723,2.902,724,3.907,725,4.964,726,3.261,727,3.806,728,3.806,729,5.125,730,3.806,731,2.633,732,3.261,733,2.902,734,3.806,735,5.125,736,3.806]],["title/classes/CreateTableUsers1752935590369.html",[0,0.145,737,2.78]],["body/classes/CreateTableUsers1752935590369.html",[0,0.153,2,1.027,3,0.214,4,0.189,5,0.189,8,2.493,10,0.318,13,2.115,15,1.138,16,0.502,20,0.02,22,0.623,34,0.265,39,0.214,40,0.014,41,0.014,48,1.308,49,2.307,59,2.671,63,1.308,64,0.959,65,1.242,67,1.242,122,2.12,178,2.269,181,3.285,185,2.493,192,2.648,220,1.751,285,3.005,414,2.45,423,3.825,488,2.939,664,1.652,665,1.859,699,4.496,701,4.446,702,5.099,703,3.941,704,3.941,705,3.941,706,5.362,708,3.941,710,2.939,711,3.576,712,2.939,713,2.939,715,3.941,723,2.939,737,3.941,738,4.996,739,3.303,740,3.855,741,3.855,742,3.855,743,3.855,744,3.855,745,4.429,746,3.855,747,3.855,748,1.979,749,3.855,750,3.855,751,2.45,752,3.303]],["title/classes/CreateTransactionDto.html",[0,0.145,753,2.78]],["body/classes/CreateTransactionDto.html",[0,0.206,2,1.033,3,0.215,4,0.19,5,0.19,6,1.101,10,0.32,11,1.531,16,0.632,20,0.02,21,2.193,22,0.784,34,0.428,39,0.215,40,0.014,41,0.014,57,2.131,65,1.247,107,1.661,176,3.002,448,3.716,480,3.442,481,3.442,682,5.107,690,3.675,691,3.32,692,3.832,693,3.954,694,2.126,731,4.045,753,3.954,754,3.32,755,5.847,756,3.875,757,4.045,758,3.875,759,3.875,760,3.875,761,4.045,762,3.875,763,3.875,764,3.875,765,4.76,766,6.244,767,2.954,768,2.954,769,2.954,770,2.954,771,3.875,772,3.875]],["title/classes/CreateUserDto.html",[0,0.145,773,2.146]],["body/classes/CreateUserDto.html",[0,0.211,2,1.074,3,0.223,4,0.198,5,0.198,6,1.113,10,0.332,11,1.572,16,0.64,20,0.02,22,0.794,24,1.551,34,0.365,39,0.223,40,0.014,41,0.014,57,2.159,64,0.98,107,1.728,664,2.556,665,2.875,690,3.716,692,3.988,694,2.211,748,3.061,751,3.789,773,3.134,774,5.804,775,3.073,776,5.963,777,4.031,778,4.031,779,5.325,780,4.031,781,4.031,782,4.031,783,4.031,784,4.031,785,4.059,786,5.028,787,4.031,788,4.031]],["title/modules/DatabaseModule.html",[228,1.563,549,2.317]],["body/modules/DatabaseModule.html",[0,0.212,3,0.296,4,0.262,5,0.262,20,0.02,34,0.436,39,0.296,40,0.017,41,0.017,101,1.22,228,2.726,230,2.745,235,3.148,236,3.148,549,4.041,789,5.347,790,5.174,791,5.347]],["title/classes/DepositDto.html",[0,0.145,70,2.146]],["body/classes/DepositDto.html",[0,0.228,2,1.206,3,0.251,4,0.222,5,0.222,6,1.09,10,0.373,11,1.695,12,2.863,16,0.612,19,3.04,20,0.02,21,2.17,22,0.759,24,1.243,34,0.394,39,0.251,40,0.015,41,0.015,57,2.064,70,3.379,72,2.702,107,1.941,690,3.636,692,3.711,693,4.376,694,2.483,765,4.806,786,4.376,792,3.879,793,4.918,794,4.527,795,4.527,796,4.527,797,4.527]],["title/classes/DepositProcessor.html",[0,0.145,258,2.523]],["body/classes/DepositProcessor.html",[0,0.156,1,1.783,2,1.046,3,0.218,4,0.192,5,0.192,6,0.967,10,0.324,12,1.783,15,1.545,16,0.508,20,0.02,22,0.63,34,0.431,39,0.218,40,0.014,41,0.014,48,1.324,49,2.03,57,1.285,63,1.324,64,0.86,65,1.257,67,0.943,68,2.015,70,2.311,72,2.522,108,2.992,111,2.311,112,1.506,121,1.285,122,1.902,137,3.958,241,3.054,248,2.716,257,2.153,258,3.62,265,2.716,277,1.783,312,2.508,359,3.62,364,2.716,368,2.716,369,2.311,383,2.992,407,2.716,433,3.363,476,4.486,491,4.071,533,3.363,798,3.363,799,3.925,800,4.482,801,5.232,802,3.925,803,3.925,804,5.232,805,3.925,806,3.363,807,3.925,808,3.925]],["title/classes/InvestimentProcessor.html",[0,0.145,809,2.78]],["body/classes/InvestimentProcessor.html",[0,0.218,2,1.466,3,0.305,4,0.27,5,0.27,6,0.905,20,0.019,34,0.378,39,0.305,40,0.017,41,0.017,137,3.24,257,3.019,491,3.808,809,4.931,810,4.715,811,5.504]],["title/interfaces/PaginatedResponse.html",[404,2.317,812,2.317]],["body/interfaces/PaginatedResponse.html",[3,0.255,4,0.226,5,0.226,10,0.38,11,1.715,16,0.668,20,0.02,21,2.426,39,0.255,40,0.015,41,0.015,199,4.846,404,3.691,421,5.087,422,4.241,423,4.134,424,5.087,425,5.087,427,5.087,812,2.93,813,3.515,814,3.95]],["title/classes/ResponseUserDto.html",[0,0.145,815,2.523]],["body/classes/ResponseUserDto.html",[0,0.16,2,1.074,3,0.223,4,0.198,5,0.198,6,1.153,10,0.332,11,1.572,13,3.271,16,0.67,20,0.02,22,0.832,24,1.59,34,0.277,39,0.223,40,0.014,41,0.014,57,2.262,64,0.98,107,1.728,178,3.51,664,2.556,665,2.875,690,4.047,751,3.789,815,3.684,816,3.453,817,5.963,818,4.031,819,4.031,820,4.031,821,4.031,822,4.031,823,4.031,824,4.031]],["title/classes/SignInDto.html",[0,0.145,595,2.317]],["body/classes/SignInDto.html",[0,0.235,2,1.271,3,0.264,4,0.234,5,0.234,6,1.061,10,0.393,11,1.752,16,0.576,20,0.02,22,0.715,24,1.462,34,0.407,39,0.264,40,0.016,41,0.016,57,1.942,107,2.045,595,3.771,664,2.768,665,3.114,690,3.542,692,3.801,694,2.617,785,4.523,786,4.523,825,4.088,826,4.771,827,4.771,828,4.771,829,4.771]],["title/interfaces/SignedUser.html",[660,2.523,812,2.317]],["body/interfaces/SignedUser.html",[3,0.279,4,0.247,5,0.247,6,0.829,10,0.416,11,1.812,16,0.642,20,0.019,24,1.599,39,0.279,40,0.016,41,0.016,64,1.132,660,4.247,664,2.952,678,5.9,812,3.205,813,3.844,830,4.32,831,4.32]],["title/classes/TransactionDto.html",[0,0.145,84,2.146]],["body/classes/TransactionDto.html",[0,0.229,2,1.214,3,0.252,4,0.223,5,0.223,6,1.092,10,0.376,11,1.701,16,0.613,20,0.02,21,2.292,22,0.761,34,0.395,39,0.252,40,0.015,41,0.015,57,2.069,72,2.71,84,3.392,107,1.952,480,3.721,481,3.721,690,3.644,692,3.911,694,2.498,765,5.065,793,5.416,832,3.902,833,4.555,834,4.555,835,4.555]],["title/entities/TransactionEntity.html",[172,2,197,1.872]],["body/entities/TransactionEntity.html",[0,0.12,1,2.545,3,0.167,4,0.148,5,0.148,10,0.249,11,1.288,12,2.545,15,1.511,16,0.688,20,0.02,21,2.14,22,0.814,24,1.341,34,0.385,35,2.9,39,0.167,40,0.012,41,0.012,57,2.214,64,0.717,172,1.657,173,1.919,176,2.628,179,3.902,182,2.878,184,2.587,185,2.703,191,2.103,192,1.98,195,3.324,197,2.239,203,3.017,208,2.302,210,3.736,213,4.984,214,3.736,215,4.385,216,4.385,218,2.302,219,3.324,220,1.372,448,3.253,480,3.499,481,3.499,731,3.541,732,4.385,733,3.902,757,3.541,761,3.541,768,2.302,770,2.302,836,2.587,837,4.385,838,4.385,839,3.02,840,5.605,841,3.02,842,3.02,843,3.02,844,4.361,845,3.02,846,3.02,847,5.605,848,5.605,849,3.02,850,3.02,851,3.02,852,3.02,853,3.02,854,3.02,855,2.587,856,3.02,857,3.02,858,3.02,859,3.02,860,3.02]],["title/classes/TransactionProcessor.html",[0,0.145,260,2.523]],["body/classes/TransactionProcessor.html",[0,0.099,1,2.081,2,0.667,3,0.139,4,0.123,5,0.123,6,0.753,10,0.206,12,1.137,14,2.698,15,1.12,16,0.368,19,1.207,20,0.02,22,0.457,34,0.425,39,0.139,40,0.01,41,0.01,48,0.96,49,1.581,53,3.805,57,0.819,59,1.627,63,0.96,64,0.624,65,0.912,67,0.602,68,1.285,72,2.356,84,1.473,100,1.473,101,0.571,109,1.908,112,1.456,121,0.819,122,2.388,127,2.913,129,2.913,131,3.494,132,3.251,135,2.893,137,3.406,152,2.234,153,2.893,155,1.908,160,2.144,163,3.251,168,1.908,169,1.732,176,1.948,191,1.207,240,3.011,241,2.627,248,1.732,253,2.144,257,1.373,260,2.625,265,1.732,269,2.082,277,1.723,311,1.473,312,1.962,325,1.137,328,1.473,330,3.251,331,1.732,354,2.893,359,2.625,361,1.373,362,1.373,363,1.473,364,1.732,368,1.732,369,1.473,372,1.732,374,3.251,383,1.908,401,2.625,407,1.732,410,2.412,411,2.081,448,1.591,462,3.251,466,1.732,476,3.494,480,2.698,481,3.011,485,2.144,491,3.171,502,2.144,503,2.144,504,2.144,532,2.144,623,1.908,635,2.144,648,1.908,731,1.732,733,1.908,757,1.732,761,1.732,767,1.908,768,1.908,769,1.908,770,1.908,800,3.251,806,2.144,861,2.144,862,4.583,863,2.503,864,3.795,865,2.503,866,2.503,867,2.144,868,2.503,869,2.503,870,2.503,871,2.503,872,2.503,873,2.503,874,2.503,875,2.503,876,3.795,877,2.503,878,2.503,879,2.503,880,3.795,881,2.503,882,2.503,883,2.503,884,2.503,885,4.583,886,3.795,887,2.503,888,3.795,889,2.503,890,2.503,891,2.503,892,1.908,893,2.503,894,2.503,895,2.503,896,2.503,897,2.503,898,2.503,899,2.503,900,2.503,901,2.503,902,2.503,903,2.503,904,2.503,905,2.144,906,2.503,907,2.503,908,2.503,909,2.503,910,2.503,911,2.503,912,2.503,913,2.503,914,2.503,915,2.503,916,2.503,917,2.503,918,3.795,919,2.503,920,2.503,921,2.503,922,2.503,923,2.503,924,2.503,925,2.503,926,2.503,927,2.503,928,2.503,929,2.503]],["title/injectables/TransactionsRepository.html",[240,2.146,266,0.923]],["body/injectables/TransactionsRepository.html",[0,0.14,3,0.196,4,0.173,5,0.173,6,0.988,9,3.86,10,0.292,15,1.862,16,0.541,18,1.773,20,0.02,22,0.672,24,1.208,34,0.413,39,0.196,40,0.013,41,0.013,48,1.234,49,2.249,53,3.838,63,1.412,64,0.917,65,1.341,67,1.172,68,2.504,101,0.807,112,1.357,121,1.827,122,1.773,182,3.087,197,1.816,220,1.607,240,2.871,250,1.941,251,2.697,266,1.234,267,1.516,269,1.941,277,2.215,279,4.16,280,4.178,305,2.697,310,3.031,311,2.083,312,1.357,313,2.697,359,2.448,361,1.941,362,2.675,363,2.083,369,2.083,837,4.178,838,4.178,930,3.031,931,5.58,932,3.538,933,3.538,934,4.876,935,3.538,936,3.538,937,6.014,938,3.538,939,3.538,940,3.538,941,3.538,942,3.538,943,3.031,944,3.538,945,3.031,946,3.538,947,3.031,948,3.031]],["title/injectables/TransformDatePipe.html",[266,0.923,949,2.523]],["body/injectables/TransformDatePipe.html",[0,0.167,3,0.233,4,0.206,5,0.206,8,2.031,10,0.347,16,0.409,20,0.02,22,0.507,24,1.448,34,0.289,39,0.233,40,0.015,41,0.015,48,1.387,63,1.066,64,0.692,65,1.012,67,1.012,72,2.611,96,2.913,101,0.961,121,1.794,189,2.913,266,1.387,267,1.805,312,2.102,325,2.488,362,2.31,401,2.913,410,2.676,411,2.488,581,2.479,621,3.21,752,3.607,949,3.791,950,4.177,951,4.177,952,3.607,953,5.48,954,5.48,955,5.219,956,6.452,957,4.211,958,5.48,959,4.211,960,4.211,961,3.607,962,4.211,963,4.211,964,4.211,965,4.211,966,4.211,967,5.48,968,5.48,969,4.211,970,4.211,971,4.211,972,4.211,973,4.211,974,4.211]],["title/classes/UnauthorizedExceptionError.html",[0,0.145,975,2.523]],["body/classes/UnauthorizedExceptionError.html",[0,0.199,2,1.335,3,0.278,4,0.246,5,0.246,16,0.486,20,0.02,22,0.603,24,1.428,34,0.344,39,0.278,40,0.016,41,0.016,63,1.268,64,0.823,65,1.204,101,1.143,277,2.275,613,4.291,620,3.819,622,4.291,975,4.23,976,4.661,977,5.238,978,4.291,979,5.238,980,6.599,981,6.114,982,5.009,983,5.009,984,5.009]],["title/classes/UnauthorizedExceptionFilter.html",[0,0.145,985,2.78]],["body/classes/UnauthorizedExceptionFilter.html",[0,0.17,2,1.144,3,0.238,4,0.211,5,0.211,8,2.676,10,0.354,16,0.417,20,0.02,22,0.517,34,0.422,39,0.238,40,0.015,41,0.015,48,1.405,63,1.087,64,0.706,65,1.032,67,1.032,101,0.98,176,2.85,185,2.071,312,2.494,361,3.373,372,2.971,411,1.95,568,4.688,581,3.267,583,4.231,587,3.679,589,2.73,621,3.274,623,3.274,975,4.497,976,4.231,985,4.231,986,4.755,987,3.679,988,6.149,989,5.55,990,6.5,991,4.295,992,4.295,993,4.295,994,4.295,995,4.295,996,4.295,997,4.295,998,4.295,999,4.295,1000,4.295,1001,4.295,1002,4.295,1003,4.295,1004,4.295]],["title/classes/UpdateUserDto.html",[0,0.145,1005,2.317]],["body/classes/UpdateUserDto.html",[0,0.211,2,1.42,3,0.295,4,0.261,5,0.261,6,0.876,20,0.02,34,0.435,39,0.295,40,0.017,41,0.017,59,2.284,107,2.284,773,3.137,775,4.062,979,5.436,1005,4.033,1006,4.565,1007,6.346,1008,5.328,1009,4.062]],["title/classes/User.html",[0,0.145,18,1.326]],["body/classes/User.html",[0,0.151,2,1.017,3,0.211,4,0.187,5,0.187,6,1.166,8,2.476,10,0.315,11,1.516,13,3.182,15,1.713,16,0.681,18,1.867,20,0.02,22,0.845,24,1.593,31,2.635,34,0.352,35,2.635,36,2.64,37,2.246,39,0.211,40,0.014,41,0.014,47,3.687,64,0.954,127,2.425,132,3.263,135,2.909,178,3.415,523,5.316,648,4.731,664,2.487,665,2.798,748,2.979,751,3.687,1010,3.269,1011,3.816,1012,3.816,1013,3.816,1014,3.816,1015,3.816,1016,3.816,1017,3.816,1018,3.816,1019,3.816,1020,3.816,1021,3.816,1022,3.816]],["title/controllers/UserController.html",[42,1.758,1023,2.523]],["body/controllers/UserController.html",[0,0.107,3,0.15,4,0.133,5,0.133,6,0.979,10,0.223,15,1.759,16,0.552,18,2.067,20,0.02,21,1.95,22,0.685,24,1.466,34,0.409,39,0.15,40,0.011,41,0.011,42,1.305,44,1.305,46,2.062,48,1.018,57,1.861,58,4.869,59,2.059,60,3.067,63,1.439,64,0.934,65,1.366,67,1.366,78,2.827,79,3.131,96,3.323,97,2.318,98,2.318,99,3.067,100,1.593,101,0.617,104,1.872,106,5.104,107,1.16,111,1.593,112,1.038,114,4.869,120,2.318,121,1.861,243,2.316,369,3.131,411,1.827,429,3.447,432,4.541,695,2.557,773,3.632,949,2.783,950,2.062,951,2.062,1005,4.028,1009,3.067,1023,2.783,1024,2.318,1025,4.556,1026,3.067,1027,3.447,1028,2.705,1029,4.023,1030,2.705,1031,2.705,1032,4.803,1033,2.705,1034,4.541,1035,4.023,1036,4.023,1037,4.023,1038,4.023,1039,4.803,1040,4.023,1041,3.447,1042,4.023,1043,4.023,1044,2.705,1045,2.705,1046,2.318,1047,3.447,1048,2.705,1049,2.705,1050,2.318,1051,3.661,1052,2.705,1053,2.705,1054,2.318,1055,2.705,1056,2.705,1057,2.318,1058,2.318,1059,2.705,1060,2.705,1061,2.705,1062,2.705,1063,2.705,1064,2.705,1065,2.705,1066,2.705,1067,2.705,1068,2.705,1069,2.705,1070,2.705,1071,2.705,1072,2.705,1073,2.705,1074,2.705]],["title/entities/UserEntity.html",[31,1.656,172,2]],["body/entities/UserEntity.html",[0,0.133,3,0.186,4,0.164,5,0.164,10,0.276,11,1.386,13,2.973,15,1.6,16,0.702,20,0.02,22,0.822,24,1.566,31,2.132,34,0.322,35,2.667,39,0.186,40,0.012,41,0.012,47,3.444,57,2.234,64,1.016,172,1.837,173,2.129,178,3.19,179,4.714,181,3.732,182,3.015,185,3.091,195,3.578,198,2.869,208,3.578,213,4.886,217,4.021,218,2.553,219,4.131,220,1.521,664,2.323,665,2.613,748,3.175,751,3.444,855,2.869,1075,2.869,1076,4.694,1077,4.694,1078,3.349,1079,3.349,1080,6.716,1081,3.349,1082,3.349,1083,3.349,1084,3.349,1085,3.349,1086,3.349,1087,3.349,1088,3.349]],["title/modules/UserModule.html",[228,1.563,550,2.317]],["body/modules/UserModule.html",[0,0.156,3,0.218,4,0.192,5,0.192,6,0.645,20,0.02,31,1.783,34,0.484,35,2.376,36,2.716,37,2.311,39,0.218,40,0.014,41,0.014,44,2.523,101,0.896,197,2.686,228,2.522,230,2.015,231,2.153,232,2.495,233,2.495,234,2.153,235,3.464,236,3.464,241,3.054,242,3.972,243,3.491,244,3.325,245,2.495,246,2.311,249,2.992,250,2.153,251,2.992,262,2.992,263,3.363,550,4.602,1023,4.071,1057,3.363,1089,3.363,1090,3.925,1091,3.363,1092,3.925,1093,3.925,1094,3.363,1095,3.925]],["title/injectables/UserRepository.html",[242,2,266,0.923]],["body/injectables/UserRepository.html",[0,0.083,1,1.494,3,0.115,4,0.102,5,0.102,6,1.047,9,3.713,10,0.172,11,0.971,15,1.368,16,0.608,18,1.835,20,0.02,21,1.077,22,0.74,24,1.4,31,0.945,34,0.368,37,1.225,39,0.115,40,0.009,41,0.009,47,1.323,48,0.832,49,2.425,63,1.475,64,0.986,65,1.4,67,1.4,68,1.689,72,0.892,78,2.728,79,2.728,100,1.936,101,0.475,112,1.936,121,2.051,122,2.118,124,1.783,181,1.323,182,1.068,191,1.003,192,0.945,220,0.945,241,2.105,242,1.804,250,1.141,266,0.832,267,0.892,269,2.769,277,1.494,279,3.206,282,3.494,285,2.962,287,2.276,305,1.586,311,2.971,312,1.565,313,2.507,317,3.494,318,3.494,325,0.945,358,3.494,361,2.769,362,3.29,363,2.728,368,2.276,432,2.507,518,1.783,579,1.44,664,1.748,711,1.44,745,4.324,748,2.38,943,1.783,945,2.818,947,2.818,948,2.818,1026,2.507,1034,1.586,1047,1.783,1051,1.586,1096,1.783,1097,3.971,1098,3.289,1099,4.079,1100,2.818,1101,3.289,1102,3.289,1103,3.289,1104,2.081,1105,3.289,1106,3.289,1107,2.081,1108,3.289,1109,2.081,1110,2.081,1111,2.081,1112,2.818,1113,2.081,1114,3.289,1115,2.081,1116,3.289,1117,3.289,1118,2.081,1119,3.289,1120,2.081,1121,3.289,1122,2.081,1123,2.081,1124,1.783,1125,2.081,1126,2.081,1127,2.081,1128,2.081,1129,2.081,1130,3.289,1131,3.289,1132,2.081,1133,2.818,1134,2.081,1135,4.079,1136,2.081,1137,2.081,1138,2.081,1139,2.081,1140,3.289,1141,2.081,1142,2.081,1143,2.081]],["title/injectables/UserService.html",[243,1.758,266,0.923]],["body/injectables/UserService.html",[0,0.123,3,0.107,4,0.095,5,0.095,6,0.963,10,0.16,15,1.315,16,0.583,18,2.233,20,0.02,21,1.018,22,0.684,24,1.411,31,0.881,34,0.413,37,1.141,39,0.107,40,0.008,41,0.008,48,0.787,49,2.362,59,1.333,63,1.438,64,0.934,65,1.365,67,1.314,68,1.998,78,3.344,79,2.291,101,0.442,104,1.341,111,1.141,112,0.744,121,1.918,122,2.233,127,1.232,129,1.232,152,1.83,155,1.478,162,1.341,169,2.151,193,1.141,242,2.854,243,1.499,266,0.787,267,0.831,277,0.881,285,2.739,287,2.151,311,1.83,312,2.356,325,1.412,350,1.661,361,1.706,362,2.443,363,1.83,369,1.83,401,1.341,404,1.232,405,1.661,410,3.098,411,2.214,421,1.478,422,1.232,423,1.83,424,1.478,425,1.478,426,1.661,427,1.478,431,1.478,435,3.335,445,1.661,472,3.335,488,1.478,579,1.341,581,1.141,644,1.661,663,2.37,664,1.333,665,1.499,695,1.232,748,2.917,773,3.063,785,1.478,815,1.341,905,1.661,1005,3.724,1009,2.37,1025,3.335,1026,2.967,1027,2.664,1034,2.37,1046,2.664,1050,2.664,1051,2.37,1054,2.664,1058,1.661,1094,1.661,1097,3.335,1100,2.664,1112,2.664,1124,1.661,1144,1.661,1145,3.109,1146,1.939,1147,1.939,1148,3.109,1149,1.939,1150,1.939,1151,1.939,1152,1.939,1153,3.109,1154,1.939,1155,1.939,1156,1.939,1157,1.939,1158,1.939,1159,1.661,1160,1.939,1161,3.109,1162,1.939,1163,3.892,1164,3.109,1165,1.939,1166,3.109,1167,1.939,1168,1.939,1169,3.109,1170,1.939,1171,1.939,1172,1.939,1173,1.939,1174,1.939,1175,1.939,1176,3.109,1177,1.939,1178,1.939,1179,1.939,1180,3.109,1181,1.939,1182,1.939,1183,1.939,1184,1.939,1185,1.939,1186,1.939,1187,1.939,1188,1.939,1189,4.453,1190,5.203,1191,1.939,1192,3.109,1193,1.939,1194,1.939,1195,1.939,1196,1.939,1197,1.939,1198,1.661,1199,1.939,1200,1.939,1201,1.939,1202,1.939,1203,1.939,1204,1.939]],["title/classes/UtilsService.html",[0,0.145,615,2.523]],["body/classes/UtilsService.html",[0,0.131,2,0.881,3,0.183,4,0.162,5,0.162,10,0.273,15,1.373,16,0.619,20,0.02,21,1.522,22,0.703,24,1.523,34,0.227,39,0.183,40,0.012,41,0.012,48,1.177,63,1.478,64,0.96,65,1.403,67,1.403,121,2.191,193,3.622,312,2.24,325,2.112,443,5.002,581,3.437,586,2.52,589,2.1,615,3.217,617,3.984,664,1.993,748,2.388,961,2.832,1205,2.832,1206,7.037,1207,4.65,1208,3.545,1209,4.65,1210,4.65,1211,4.65,1212,3.305,1213,4.65,1214,3.305,1215,6.382,1216,4.65,1217,3.305,1218,4.65,1219,3.305,1220,4.65,1221,3.305,1222,3.305,1223,3.305,1224,3.305,1225,4.609,1226,3.305,1227,6.153,1228,3.305,1229,3.305,1230,3.305,1231,4.65,1232,3.305,1233,3.305,1234,3.305,1235,3.305,1236,3.305,1237,3.305,1238,3.305,1239,3.305,1240,3.305]],["title/coverage.html",[1241,3.795]],["body/coverage.html",[0,0.28,1,1.09,5,0.118,6,1.182,7,2.056,16,0.233,18,0.872,20,0.02,31,1.09,35,1.09,40,0.01,41,0.01,42,2.413,43,1.66,45,2.056,56,1.525,59,1.914,70,1.412,84,1.412,102,1.412,172,2.449,174,2.056,193,4.42,197,1.232,234,1.316,240,1.412,241,1.09,242,1.316,243,1.157,258,1.66,260,1.66,266,1.618,268,2.056,378,2.056,404,1.525,411,1.09,537,1.66,538,2.056,541,1.412,556,1.829,571,2.056,575,1.829,576,2.056,577,2.056,578,2.056,590,1.66,591,2.056,595,1.525,600,1.412,606,2.801,607,2.056,615,1.66,654,2.056,660,1.66,682,2.801,683,2.056,697,1.829,698,2.056,699,3.462,700,2.056,724,1.829,725,2.056,726,2.056,737,1.829,738,2.056,739,2.056,753,1.829,754,2.056,773,1.412,774,2.056,775,2.801,790,1.829,792,2.056,798,2.056,809,1.829,810,2.056,812,2.335,814,2.056,815,1.66,816,2.056,825,2.056,830,2.056,831,2.056,832,2.056,836,2.056,861,2.056,930,2.056,949,1.66,950,1.829,951,1.829,952,2.056,975,1.66,976,2.801,977,2.056,978,2.056,985,1.829,986,2.056,987,2.056,1005,1.525,1006,2.056,1010,2.056,1023,1.66,1024,2.056,1075,2.056,1096,2.056,1133,2.056,1144,2.056,1205,2.056,1208,1.829,1241,1.829,1242,2.056,1243,2.399,1244,5.923,1245,5.395,1246,3.675,1247,6.392,1248,5.004,1249,3.675,1250,2.399,1251,6.919,1252,2.399,1253,2.399,1254,2.399,1255,3.148,1256,4.287,1257,2.056,1258,2.056,1259,5.923,1260,3.148,1261,2.056,1262,2.056,1263,2.056,1264,2.056,1265,2.056,1266,2.399,1267,2.056,1268,3.148,1269,2.801,1270,2.056,1271,5.395,1272,2.056,1273,3.148,1274,2.056,1275,2.056,1276,2.801,1277,2.056,1278,2.056,1279,2.399]],["title/dependencies.html",[231,2.406,1280,2.608]],["body/dependencies.html",[0,0.233,20,0.02,40,0.016,41,0.016,101,1.068,107,2.007,220,2.126,231,2.568,250,2.568,257,2.568,407,3.239,560,3.239,589,2.976,614,3.239,663,3.569,694,2.568,955,4.011,1159,4.011,1281,4.682,1282,4.682,1283,4.682,1284,6.402,1285,4.682,1286,4.682,1287,5.864,1288,4.682,1289,4.682,1290,4.682,1291,4.682,1292,4.682,1293,4.682,1294,4.682,1295,4.682,1296,4.682,1297,4.682,1298,4.682,1299,4.682,1300,4.011,1301,4.682,1302,4.682,1303,4.682,1304,4.682,1305,4.682,1306,4.682]],["title/miscellaneous/enumerations.html",[1307,1.792,1308,3.757]],["body/miscellaneous/enumerations.html",[6,0.979,10,0.332,20,0.02,28,3.378,40,0.014,41,0.014,72,3.222,189,2.781,191,3.177,192,1.826,202,4.554,325,2.992,328,3.73,331,3.677,431,3.064,620,3.064,757,3.677,761,3.677,767,3.064,769,3.064,892,3.064,1307,2.366,1308,3.444,1309,4.02,1310,4.02,1311,4.02,1312,5.315,1313,4.02,1314,5.315,1315,5.315,1316,4.02,1317,4.02,1318,4.02,1319,4.02,1320,4.02,1321,4.02,1322,4.02,1323,4.02,1324,4.02,1325,4.02,1326,4.02,1327,4.02,1328,4.02,1329,4.02,1330,4.02,1331,4.02,1332,4.02,1333,4.02,1334,4.02,1335,4.02,1336,4.02,1337,4.02,1338,4.02,1339,4.02,1340,4.02,1341,4.02,1342,4.02,1343,3.064]],["title/miscellaneous/functions.html",[1307,1.792,1344,3.757]],["body/miscellaneous/functions.html",[10,0.405,16,0.586,20,0.019,21,1.977,40,0.016,41,0.016,63,1.529,64,0.993,65,1.452,67,1.18,234,3.588,285,2.368,1269,5.509,1270,4.208,1272,5.604,1273,4.208,1274,5.175,1275,5.175,1276,3.744,1277,5.604,1278,4.208,1307,2.891,1344,4.208,1345,4.911,1346,4.911,1347,6.04,1348,4.208,1349,4.911,1350,4.911,1351,6.04]],["title/index.html",[10,0.251,1352,3.044,1353,3.044]],["body/index.html",[4,0.149,20,0.019,40,0.012,41,0.012,137,2.578,246,3.654,279,2.102,343,2.603,414,1.931,437,4.732,451,2.603,464,4.815,695,1.931,1041,2.603,1198,2.603,1241,2.316,1242,3.752,1343,4.285,1354,3.038,1355,3.038,1356,5.136,1357,4.38,1358,3.038,1359,3.038,1360,3.038,1361,3.038,1362,4.38,1363,5.136,1364,3.038,1365,3.038,1366,5.621,1367,3.038,1368,5.621,1369,6.548,1370,3.038,1371,6.398,1372,3.038,1373,3.038,1374,3.038,1375,4.38,1376,3.038,1377,4.38,1378,3.038,1379,5.136,1380,3.038,1381,4.38,1382,3.038,1383,3.038,1384,3.038,1385,3.038,1386,3.038,1387,5.621,1388,6.548,1389,6.207,1390,4.38,1391,3.038,1392,3.038,1393,3.038,1394,3.038,1395,3.038,1396,4.38,1397,3.038,1398,4.38,1399,3.038,1400,4.38,1401,5.958,1402,5.621,1403,3.038,1404,4.38,1405,3.038,1406,3.038,1407,3.038,1408,3.038,1409,5.621,1410,3.038,1411,3.038,1412,3.038,1413,3.038,1414,3.038,1415,4.38,1416,3.038,1417,3.038,1418,3.038,1419,3.038,1420,3.038,1421,4.38,1422,3.038,1423,3.038,1424,3.038,1425,4.38,1426,3.038,1427,3.038,1428,4.38,1429,3.038,1430,3.038,1431,3.038,1432,3.038,1433,3.038,1434,3.038,1435,3.038,1436,3.038,1437,4.38,1438,3.038,1439,2.603,1440,3.038,1441,5.136,1442,3.038,1443,3.038,1444,3.038,1445,3.038,1446,3.038,1447,4.38,1448,3.038,1449,3.038,1450,3.038,1451,3.038,1452,3.038,1453,3.038,1454,3.038,1455,3.038,1456,3.752,1457,4.38,1458,3.038,1459,3.038,1460,3.038,1461,3.038,1462,3.038,1463,3.038,1464,3.038,1465,3.038,1466,3.038,1467,3.038,1468,2.603,1469,3.038,1470,3.038,1471,3.038,1472,3.038,1473,3.038,1474,3.038,1475,2.603]],["title/modules.html",[230,2.556]],["body/modules.html",[20,0.017,40,0.017,41,0.017,229,3.41,230,2.755,544,3.713,548,3.41,549,3.41,550,3.41,1343,5.36,1439,4.597,1476,7.031,1477,7.031,1478,7.18,1479,5.366]],["title/overview.html",[1480,4.265]],["body/overview.html",[2,1.019,20,0.02,40,0.014,41,0.014,44,1.845,102,4.015,173,2.431,189,2.647,191,1.845,228,1.64,229,4.658,230,1.964,231,2.099,232,2.431,233,2.431,234,2.099,235,2.252,236,2.252,237,3.278,238,3.278,239,3.278,240,4.015,241,2.821,242,3.803,243,3.343,244,3.268,245,2.431,246,2.252,267,1.64,328,2.252,331,2.647,541,3.42,544,4.989,545,3.278,546,3.278,547,3.278,548,4.119,549,3.692,550,4.55,600,3.42,650,3.278,651,3.278,813,2.916,892,2.916,1089,3.278,1091,3.278,1480,3.278,1481,3.826]],["title/properties.html",[11,1.295,1280,2.608]],["body/properties.html",[11,1.668,20,0.02,40,0.017,41,0.017,695,3.59,1456,4.839,1468,4.839,1475,4.839,1482,5.648,1483,5.648]],["title/miscellaneous/variables.html",[1307,1.792,1484,3.757]],["body/miscellaneous/variables.html",[10,0.316,16,0.565,20,0.02,21,1.256,24,1.259,40,0.014,41,0.014,49,1.323,72,2.925,121,1.256,122,1.395,173,2.438,192,3.099,312,1.471,411,2.642,556,4.434,568,2.924,569,3.286,665,1.85,748,1.969,790,3.927,867,3.286,1208,3.927,1225,3.286,1255,4.413,1256,5.943,1257,3.286,1258,4.413,1260,5.327,1261,3.286,1262,4.413,1263,4.413,1264,3.286,1265,4.413,1267,3.286,1268,3.286,1269,5.092,1276,2.924,1300,3.286,1307,2.258,1348,3.286,1484,3.286,1485,5.152,1486,3.835,1487,5.152,1488,3.835,1489,5.817,1490,3.835,1491,3.835,1492,3.835,1493,3.835,1494,3.835,1495,3.835,1496,3.835,1497,3.835,1498,3.835,1499,3.835,1500,3.835,1501,3.835,1502,3.835,1503,3.835,1504,6.68,1505,5.152,1506,3.835]]],"invertedIndex":[["",{"_index":20,"title":{},"body":{"classes/Account.html":{},"controllers/AccountController.html":{},"entities/AccountEntity.html":{},"modules/AccountModule.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthApiKeyMiddleware.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAccountDto.html":{},"classes/CreateTableAccounts1752935606883.html":{},"classes/CreateTableTransaction1752935614586.html":{},"classes/CreateTableUsers1752935590369.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/DepositDto.html":{},"classes/DepositProcessor.html":{},"classes/InvestimentProcessor.html":{},"interfaces/PaginatedResponse.html":{},"classes/ResponseUserDto.html":{},"classes/SignInDto.html":{},"interfaces/SignedUser.html":{},"classes/TransactionDto.html":{},"entities/TransactionEntity.html":{},"classes/TransactionProcessor.html":{},"injectables/TransactionsRepository.html":{},"injectables/TransformDatePipe.html":{},"classes/UnauthorizedExceptionError.html":{},"classes/UnauthorizedExceptionFilter.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"classes/UtilsService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":193,"title":{},"body":{"entities/AccountEntity.html":{},"injectables/AccountService.html":{},"classes/CreateTableAccounts1752935606883.html":{},"injectables/UserService.html":{},"classes/UtilsService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":1483,"title":{},"body":{"properties.html":{}}}],["0.14.2",{"_index":1295,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":1303,"title":{},"body":{"dependencies.html":{}}}],["0.3.25",{"_index":1306,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1294,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1251,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1254,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1246,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1252,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1244,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1247,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1248,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1266,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1245,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1253,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1249,"title":{},"body":{"coverage.html":{}}}],["00000000000",{"_index":1240,"title":{},"body":{"classes/UtilsService.html":{}}}],["1",{"_index":325,"title":{},"body":{"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"classes/CreateAccountDto.html":{},"classes/CreateTableAccounts1752935606883.html":{},"classes/TransactionProcessor.html":{},"injectables/TransformDatePipe.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"classes/UtilsService.html":{},"miscellaneous/enumerations.html":{}}}],["10",{"_index":189,"title":{},"body":{"entities/AccountEntity.html":{},"injectables/TransformDatePipe.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["100000",{"_index":722,"title":{},"body":{"classes/CreateTableAccounts1752935606883.html":{}}}],["11.0.0",{"_index":1287,"title":{},"body":{"dependencies.html":{}}}],["11.0.1",{"_index":1284,"title":{},"body":{"dependencies.html":{}}}],["11.0.3",{"_index":1283,"title":{},"body":{"dependencies.html":{}}}],["11.2.0",{"_index":1291,"title":{},"body":{"dependencies.html":{}}}],["14",{"_index":779,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["16",{"_index":1171,"title":{},"body":{"injectables/UserService.html":{}}}],["1})@isenum(accounttype)@isnotempty",{"_index":685,"title":{},"body":{"classes/CreateAccountDto.html":{}}}],["2",{"_index":191,"title":{},"body":{"entities/AccountEntity.html":{},"injectables/AccountRepository.html":{},"classes/CreateTableAccounts1752935606883.html":{},"classes/CreateTableTransaction1752935614586.html":{},"entities/TransactionEntity.html":{},"classes/TransactionProcessor.html":{},"injectables/UserRepository.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["20",{"_index":1481,"title":{},"body":{"overview.html":{}}}],["3",{"_index":328,"title":{},"body":{"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"classes/CreateTableAccounts1752935606883.html":{},"classes/TransactionProcessor.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["3.4.7",{"_index":1301,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":331,"title":{},"body":{"injectables/AccountRepository.html":{},"classes/TransactionProcessor.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["4.0.2",{"_index":1285,"title":{},"body":{"dependencies.html":{}}}],["4.16.5",{"_index":1293,"title":{},"body":{"dependencies.html":{}}}],["4.6.0",{"_index":1282,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":892,"title":{},"body":{"classes/TransactionProcessor.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["5.6.1",{"_index":1297,"title":{},"body":{"dependencies.html":{}}}],["5][0",{"_index":1230,"title":{},"body":{"classes/UtilsService.html":{}}}],["6",{"_index":1332,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["6.0.0",{"_index":1292,"title":{},"body":{"dependencies.html":{}}}],["6379",{"_index":570,"title":{},"body":{"modules/AppModule.html":{}}}],["7",{"_index":1334,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["7.8.1",{"_index":1305,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1336,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["8.16.3",{"_index":1299,"title":{},"body":{"dependencies.html":{}}}],["89ab][0",{"_index":1232,"title":{},"body":{"classes/UtilsService.html":{}}}],["9",{"_index":1338,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["9000000000",{"_index":536,"title":{},"body":{"injectables/AccountService.html":{}}}],["9a",{"_index":1227,"title":{},"body":{"classes/UtilsService.html":{}}}],["__dirname}/../entities/**/*.entity.{ts,js",{"_index":1496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["__dirname}/../migrations/**/*.{ts,js",{"_index":1498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ac",{"_index":1076,"title":{},"body":{"entities/UserEntity.html":{}}}],["ac.user",{"_index":1077,"title":{},"body":{"entities/UserEntity.html":{}}}],["acc",{"_index":341,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["acc.account_number",{"_index":322,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["acc.credit",{"_index":371,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["acc.status",{"_index":324,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["acc.type",{"_index":335,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["acc.user_id",{"_index":376,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["acc1",{"_index":482,"title":{},"body":{"injectables/AccountService.html":{}}}],["acc2",{"_index":483,"title":{},"body":{"injectables/AccountService.html":{}}}],["access_token",{"_index":680,"title":{},"body":{"injectables/AuthService.html":{}}}],["account",{"_index":1,"title":{"classes/Account.html":{}},"body":{"classes/Account.html":{},"controllers/AccountController.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"classes/DepositProcessor.html":{},"entities/TransactionEntity.html":{},"classes/TransactionProcessor.html":{},"injectables/UserRepository.html":{},"coverage.html":{}}}],["account'})@patch('/deposit/:user_cpf",{"_index":74,"title":{},"body":{"controllers/AccountController.html":{}}}],["account'})@patch(':user_id/account/:account_number",{"_index":94,"title":{},"body":{"controllers/AccountController.html":{}}}],["account.account_number",{"_index":533,"title":{},"body":{"injectables/AccountService.html":{},"classes/DepositProcessor.html":{}}}],["account.controller",{"_index":255,"title":{},"body":{"modules/AccountModule.html":{}}}],["account.dto",{"_index":105,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{}}}],["account.dto.ts",{"_index":683,"title":{},"body":{"classes/CreateAccountDto.html":{},"coverage.html":{}}}],["account.dto.ts:13",{"_index":686,"title":{},"body":{"classes/CreateAccountDto.html":{}}}],["account.dto.ts:8",{"_index":689,"title":{},"body":{"classes/CreateAccountDto.html":{}}}],["account.entity",{"_index":855,"title":{},"body":{"entities/TransactionEntity.html":{},"entities/UserEntity.html":{}}}],["account.incomingtransferences",{"_index":860,"title":{},"body":{"entities/TransactionEntity.html":{}}}],["account.incomingtransferences)@joincolumn({name",{"_index":842,"title":{},"body":{"entities/TransactionEntity.html":{}}}],["account.service",{"_index":103,"title":{},"body":{"controllers/AccountController.html":{},"modules/AccountModule.html":{}}}],["account.transferences",{"_index":859,"title":{},"body":{"entities/TransactionEntity.html":{}}}],["account.transferences)@joincolumn({name",{"_index":839,"title":{},"body":{"entities/TransactionEntity.html":{}}}],["account.user_id",{"_index":807,"title":{},"body":{"classes/DepositProcessor.html":{}}}],["account/repositories/account.repository",{"_index":1095,"title":{},"body":{"modules/UserModule.html":{}}}],["account_blocked",{"_index":1328,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["account_from",{"_index":868,"title":{},"body":{"classes/TransactionProcessor.html":{}}}],["account_number",{"_index":12,"title":{},"body":{"classes/Account.html":{},"controllers/AccountController.html":{},"entities/AccountEntity.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"classes/CreateTableAccounts1752935606883.html":{},"classes/DepositDto.html":{},"classes/DepositProcessor.html":{},"entities/TransactionEntity.html":{},"classes/TransactionProcessor.html":{}}}],["account_status",{"_index":334,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["account_type",{"_index":339,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["accountcontroller",{"_index":43,"title":{"controllers/AccountController.html":{}},"body":{"controllers/AccountController.html":{},"modules/AccountModule.html":{},"coverage.html":{}}}],["accountdatasource",{"_index":282,"title":{},"body":{"injectables/AccountRepository.html":{},"injectables/UserRepository.html":{}}}],["accountentity",{"_index":35,"title":{"entities/AccountEntity.html":{}},"body":{"classes/Account.html":{},"entities/AccountEntity.html":{},"modules/AccountModule.html":{},"injectables/AccountRepository.html":{},"entities/TransactionEntity.html":{},"classes/User.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["accountexists",{"_index":468,"title":{},"body":{"injectables/AccountService.html":{}}}],["accountfactory",{"_index":1272,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["accountfrom",{"_index":837,"title":{},"body":{"entities/TransactionEntity.html":{},"injectables/TransactionsRepository.html":{}}}],["accountid",{"_index":291,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["accountmodule",{"_index":229,"title":{"modules/AccountModule.html":{}},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["accountnumber",{"_index":364,"title":{},"body":{"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"classes/DepositProcessor.html":{},"classes/TransactionProcessor.html":{}}}],["accountrepository",{"_index":241,"title":{"injectables/AccountRepository.html":{}},"body":{"modules/AccountModule.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"classes/DepositProcessor.html":{},"classes/TransactionProcessor.html":{},"modules/UserModule.html":{},"injectables/UserRepository.html":{},"coverage.html":{},"overview.html":{}}}],["accounts",{"_index":47,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{},"classes/User.html":{},"entities/UserEntity.html":{},"injectables/UserRepository.html":{}}}],["accounts.ts",{"_index":700,"title":{},"body":{"classes/CreateTableAccounts1752935606883.html":{},"coverage.html":{}}}],["accounts.ts:21",{"_index":707,"title":{},"body":{"classes/CreateTableAccounts1752935606883.html":{}}}],["accounts.ts:4",{"_index":709,"title":{},"body":{"classes/CreateTableAccounts1752935606883.html":{}}}],["accountservice",{"_index":102,"title":{"injectables/AccountService.html":{}},"body":{"controllers/AccountController.html":{},"modules/AccountModule.html":{},"injectables/AccountService.html":{},"coverage.html":{},"overview.html":{}}}],["accountstatements",{"_index":417,"title":{},"body":{"injectables/AccountService.html":{}}}],["accountstatus",{"_index":202,"title":{},"body":{"entities/AccountEntity.html":{},"miscellaneous/enumerations.html":{}}}],["accountto",{"_index":838,"title":{},"body":{"entities/TransactionEntity.html":{},"injectables/TransactionsRepository.html":{}}}],["accounttype",{"_index":28,"title":{},"body":{"classes/Account.html":{},"entities/AccountEntity.html":{},"injectables/AccountRepository.html":{},"classes/CreateAccountDto.html":{},"miscellaneous/enumerations.html":{}}}],["acessar",{"_index":639,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["active",{"_index":1318,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["admin",{"_index":431,"title":{},"body":{"injectables/AccountService.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["admins",{"_index":1037,"title":{},"body":{"controllers/UserController.html":{}}}],["allowing",{"_index":1416,"title":{},"body":{"index.html":{}}}],["already",{"_index":445,"title":{},"body":{"injectables/AccountService.html":{},"injectables/UserService.html":{}}}],["alreadyhaveanaccount",{"_index":440,"title":{},"body":{"injectables/AccountService.html":{}}}],["alreadyhaveanaccount.accounts",{"_index":442,"title":{},"body":{"injectables/AccountService.html":{}}}],["alreadyhaveanaccount.id",{"_index":454,"title":{},"body":{"injectables/AccountService.html":{}}}],["amazing",{"_index":1462,"title":{},"body":{"index.html":{}}}],["amount",{"_index":448,"title":{},"body":{"injectables/AccountService.html":{},"classes/CreateTableTransaction1752935614586.html":{},"classes/CreateTransactionDto.html":{},"entities/TransactionEntity.html":{},"classes/TransactionProcessor.html":{}}}],["ao",{"_index":888,"title":{},"body":{"classes/TransactionProcessor.html":{}}}],["api",{"_index":577,"title":{},"body":{"injectables/AuthApiKeyMiddleware.html":{},"coverage.html":{}}}],["apikey",{"_index":678,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SignedUser.html":{}}}],["apioperation",{"_index":106,"title":{},"body":{"controllers/AccountController.html":{},"controllers/UserController.html":{}}}],["apioperation({summary",{"_index":58,"title":{},"body":{"controllers/AccountController.html":{},"controllers/UserController.html":{}}}],["apiproperty",{"_index":690,"title":{},"body":{"classes/CreateAccountDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/DepositDto.html":{},"classes/ResponseUserDto.html":{},"classes/SignInDto.html":{},"classes/TransactionDto.html":{}}}],["apiproperty()@isemail()@isnotempty",{"_index":826,"title":{},"body":{"classes/SignInDto.html":{}}}],["apiproperty()@isnotempty()@isemail",{"_index":781,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty()@isnotempty()@isenum(transactionstatus",{"_index":762,"title":{},"body":{"classes/CreateTransactionDto.html":{}}}],["apiproperty()@isnotempty()@isnumber",{"_index":793,"title":{},"body":{"classes/DepositDto.html":{},"classes/TransactionDto.html":{}}}],["apiproperty()@isnotempty()@isstring",{"_index":776,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty()@isnotempty()@isstring()@length(10",{"_index":778,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty()@isnumber()@isnotempty()@ispositive",{"_index":755,"title":{},"body":{"classes/CreateTransactionDto.html":{}}}],["apiproperty()@isoptional()@isenum(failurereason",{"_index":758,"title":{},"body":{"classes/CreateTransactionDto.html":{}}}],["apiproperty()@isoptional()@isstring",{"_index":795,"title":{},"body":{"classes/DepositDto.html":{}}}],["apiproperty()@isstring()@isnotempty",{"_index":828,"title":{},"body":{"classes/SignInDto.html":{}}}],["apiproperty({default",{"_index":684,"title":{},"body":{"classes/CreateAccountDto.html":{}}}],["apiproperty({description",{"_index":687,"title":{},"body":{"classes/CreateAccountDto.html":{}}}],["app.controller",{"_index":552,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":542,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":537,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":1389,"title":{},"body":{"index.html":{}}}],["applications",{"_index":1362,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":544,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":541,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["args",{"_index":1504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["argumentmetadata",{"_index":956,"title":{},"body":{"injectables/TransformDatePipe.html":{}}}],["argumentshost",{"_index":990,"title":{},"body":{"classes/UnauthorizedExceptionFilter.html":{}}}],["array.isarray(authheader",{"_index":1222,"title":{},"body":{"classes/UtilsService.html":{}}}],["assinatura",{"_index":625,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["async",{"_index":49,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/CreateTableAccounts1752935606883.html":{},"classes/CreateTableTransaction1752935614586.html":{},"classes/CreateTableUsers1752935590369.html":{},"classes/DepositProcessor.html":{},"classes/TransactionProcessor.html":{},"injectables/TransactionsRepository.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["ativa",{"_index":326,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["attempts",{"_index":494,"title":{},"body":{"injectables/AccountService.html":{}}}],["atualizar",{"_index":523,"title":{},"body":{"injectables/AccountService.html":{},"classes/User.html":{}}}],["atualização",{"_index":511,"title":{},"body":{"injectables/AccountService.html":{}}}],["auth",{"_index":592,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":653,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":601,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["authapikeymiddleware",{"_index":575,"title":{"injectables/AuthApiKeyMiddleware.html":{}},"body":{"injectables/AuthApiKeyMiddleware.html":{},"coverage.html":{}}}],["authcontroller",{"_index":590,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authdto",{"_index":598,"title":{},"body":{"controllers/AuthController.html":{}}}],["authheader",{"_index":1220,"title":{},"body":{"classes/UtilsService.html":{}}}],["authheader.split",{"_index":1223,"title":{},"body":{"classes/UtilsService.html":{}}}],["authmiddleware",{"_index":606,"title":{"injectables/AuthMiddleware.html":{}},"body":{"injectables/AuthMiddleware.html":{},"coverage.html":{}}}],["authmodule",{"_index":548,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1468,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":600,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":1479,"title":{},"body":{"modules.html":{}}}],["await",{"_index":122,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/CreateTableAccounts1752935606883.html":{},"classes/CreateTableTransaction1752935614586.html":{},"classes/CreateTableUsers1752935590369.html":{},"classes/DepositProcessor.html":{},"classes/TransactionProcessor.html":{},"injectables/TransactionsRepository.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["aws",{"_index":1404,"title":{},"body":{"index.html":{}}}],["backers",{"_index":1463,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":401,"title":{},"body":{"injectables/AccountService.html":{},"classes/TransactionProcessor.html":{},"injectables/TransformDatePipe.html":{},"injectables/UserService.html":{}}}],["badrequestexception('account",{"_index":434,"title":{},"body":{"injectables/AccountService.html":{}}}],["badrequestexception('bad",{"_index":960,"title":{},"body":{"injectables/TransformDatePipe.html":{}}}],["badrequestexception('sender",{"_index":919,"title":{},"body":{"classes/TransactionProcessor.html":{}}}],["badrequestexception('user",{"_index":1189,"title":{},"body":{"injectables/UserService.html":{}}}],["badrequestexception(`a",{"_index":412,"title":{},"body":{"injectables/AccountService.html":{}}}],["badrequestexception(`account",{"_index":530,"title":{},"body":{"injectables/AccountService.html":{}}}],["badrequestexception(`user",{"_index":1162,"title":{},"body":{"injectables/UserService.html":{}}}],["banco",{"_index":513,"title":{},"body":{"injectables/AccountService.html":{}}}],["base",{"_index":1186,"title":{},"body":{"injectables/UserService.html":{}}}],["based",{"_index":451,"title":{},"body":{"injectables/AccountService.html":{},"index.html":{}}}],["bcrypt",{"_index":663,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["bcrypt.comparesync(password",{"_index":673,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(password",{"_index":1170,"title":{},"body":{"injectables/UserService.html":{}}}],["bearer",{"_index":1224,"title":{},"body":{"classes/UtilsService.html":{}}}],["before",{"_index":1197,"title":{},"body":{"injectables/UserService.html":{}}}],["being",{"_index":1201,"title":{},"body":{"injectables/UserService.html":{}}}],["between",{"_index":86,"title":{},"body":{"controllers/AccountController.html":{}}}],["bigint",{"_index":180,"title":{},"body":{"entities/AccountEntity.html":{},"classes/CreateTableAccounts1752935606883.html":{},"classes/CreateTableTransaction1752935614586.html":{}}}],["birth_date",{"_index":751,"title":{},"body":{"classes/CreateTableUsers1752935590369.html":{},"classes/CreateUserDto.html":{},"classes/ResponseUserDto.html":{},"classes/User.html":{},"entities/UserEntity.html":{}}}],["birthdate",{"_index":1032,"title":{},"body":{"controllers/UserController.html":{}}}],["blocked",{"_index":447,"title":{},"body":{"injectables/AccountService.html":{}}}],["board",{"_index":1455,"title":{},"body":{"index.html":{}}}],["body",{"_index":96,"title":{},"body":{"controllers/AccountController.html":{},"controllers/AuthController.html":{},"injectables/TransformDatePipe.html":{},"controllers/UserController.html":{}}}],["body('birth_date",{"_index":1061,"title":{},"body":{"controllers/UserController.html":{}}}],["bom",{"_index":630,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["boolean",{"_index":1215,"title":{},"body":{"classes/UtilsService.html":{}}}],["bootstrap",{"_index":234,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":1478,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1476,"title":{},"body":{"modules.html":{}}}],["building",{"_index":1357,"title":{},"body":{"index.html":{}}}],["bull",{"_index":407,"title":{},"body":{"injectables/AccountService.html":{},"classes/DepositProcessor.html":{},"classes/TransactionProcessor.html":{},"dependencies.html":{}}}],["bullmodule",{"_index":256,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{}}}],["bullmodule.forroot",{"_index":566,"title":{},"body":{"modules/AppModule.html":{}}}],["bullmodule.registerqueue",{"_index":264,"title":{},"body":{"modules/AccountModule.html":{}}}],["busca",{"_index":666,"title":{},"body":{"injectables/AuthService.html":{}}}],["business",{"_index":223,"title":{},"body":{"entities/AccountEntity.html":{},"modules/AppModule.html":{}}}],["cada",{"_index":157,"title":{},"body":{"controllers/AccountController.html":{}}}],["cancelada",{"_index":332,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["canceled",{"_index":1321,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["case",{"_index":323,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["caso",{"_index":644,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/UserService.html":{}}}],["catch",{"_index":361,"title":{},"body":{"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"classes/TransactionProcessor.html":{},"injectables/TransactionsRepository.html":{},"classes/UnauthorizedExceptionFilter.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{}}}],["catch(exception",{"_index":989,"title":{},"body":{"classes/UnauthorizedExceptionFilter.html":{}}}],["catch(unauthorizedexceptionerror",{"_index":994,"title":{},"body":{"classes/UnauthorizedExceptionFilter.html":{}}}],["centralizar",{"_index":1183,"title":{},"body":{"injectables/UserService.html":{}}}],["channel",{"_index":1430,"title":{},"body":{"index.html":{}}}],["chave",{"_index":624,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["check",{"_index":437,"title":{},"body":{"injectables/AccountService.html":{},"classes/CreateTableAccounts1752935606883.html":{},"index.html":{}}}],["checking_account",{"_index":1323,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["chk_account_number",{"_index":721,"title":{},"body":{"classes/CreateTableAccounts1752935606883.html":{}}}],["class",{"_index":0,"title":{"classes/Account.html":{},"classes/CreateAccountDto.html":{},"classes/CreateTableAccounts1752935606883.html":{},"classes/CreateTableTransaction1752935614586.html":{},"classes/CreateTableUsers1752935590369.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/DepositDto.html":{},"classes/DepositProcessor.html":{},"classes/InvestimentProcessor.html":{},"classes/ResponseUserDto.html":{},"classes/SignInDto.html":{},"classes/TransactionDto.html":{},"classes/TransactionProcessor.html":{},"classes/UnauthorizedExceptionError.html":{},"classes/UnauthorizedExceptionFilter.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UtilsService.html":{}},"body":{"classes/Account.html":{},"controllers/AccountController.html":{},"entities/AccountEntity.html":{},"modules/AccountModule.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthApiKeyMiddleware.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAccountDto.html":{},"classes/CreateTableAccounts1752935606883.html":{},"classes/CreateTableTransaction1752935614586.html":{},"classes/CreateTableUsers1752935590369.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/DepositDto.html":{},"classes/DepositProcessor.html":{},"classes/InvestimentProcessor.html":{},"classes/ResponseUserDto.html":{},"classes/SignInDto.html":{},"classes/TransactionDto.html":{},"entities/TransactionEntity.html":{},"classes/TransactionProcessor.html":{},"injectables/TransactionsRepository.html":{},"injectables/TransformDatePipe.html":{},"classes/UnauthorizedExceptionError.html":{},"classes/UnauthorizedExceptionFilter.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"classes/UtilsService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/Account.html":{},"classes/CreateAccountDto.html":{},"classes/CreateTableAccounts1752935606883.html":{},"classes/CreateTableTransaction1752935614586.html":{},"classes/CreateTableUsers1752935590369.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/DepositDto.html":{},"classes/DepositProcessor.html":{},"classes/InvestimentProcessor.html":{},"classes/ResponseUserDto.html":{},"classes/SignInDto.html":{},"classes/TransactionDto.html":{},"classes/TransactionProcessor.html":{},"classes/UnauthorizedExceptionError.html":{},"classes/UnauthorizedExceptionFilter.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UtilsService.html":{},"overview.html":{}}}],["clicks",{"_index":1415,"title":{},"body":{"index.html":{}}}],["cloud",{"_index":1399,"title":{},"body":{"index.html":{}}}],["cluster_accountmodule",{"_index":237,"title":{},"body":{"modules/AccountModule.html":{},"overview.html":{}}}],["cluster_accountmodule_exports",{"_index":238,"title":{},"body":{"modules/AccountModule.html":{},"overview.html":{}}}],["cluster_accountmodule_providers",{"_index":239,"title":{},"body":{"modules/AccountModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":545,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":546,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":547,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":650,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":651,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":1089,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":1091,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":1090,"title":{},"body":{"modules/UserModule.html":{}}}],["column",{"_index":213,"title":{},"body":{"entities/AccountEntity.html":{},"entities/TransactionEntity.html":{},"entities/UserEntity.html":{}}}],["column({type",{"_index":179,"title":{},"body":{"entities/AccountEntity.html":{},"entities/TransactionEntity.html":{},"entities/UserEntity.html":{}}}],["com",{"_index":1180,"title":{},"body":{"injectables/UserService.html":{}}}],["come",{"_index":1422,"title":{},"body":{"index.html":{}}}],["como",{"_index":1185,"title":{},"body":{"injectables/UserService.html":{}}}],["completed",{"_index":1341,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["comprovante",{"_index":897,"title":{},"body":{"classes/TransactionProcessor.html":{}}}],["concurrency",{"_index":474,"title":{},"body":{"injectables/AccountService.html":{}}}],["configmodule",{"_index":559,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":561,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":610,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{}}}],["confirmation",{"_index":472,"title":{},"body":{"injectables/AccountService.html":{},"injectables/UserService.html":{}}}],["confirmations",{"_index":461,"title":{},"body":{"injectables/AccountService.html":{}}}],["conflictexception",{"_index":402,"title":{},"body":{"injectables/AccountService.html":{}}}],["conflictexception('user",{"_index":444,"title":{},"body":{"injectables/AccountService.html":{}}}],["connection/datasource.provider",{"_index":791,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["console.error(error",{"_index":363,"title":{},"body":{"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"classes/TransactionProcessor.html":{},"injectables/TransactionsRepository.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{}}}],["console.log('month",{"_index":965,"title":{},"body":{"injectables/TransformDatePipe.html":{}}}],["console.log(date",{"_index":964,"title":{},"body":{"injectables/TransformDatePipe.html":{}}}],["console.log(error",{"_index":470,"title":{},"body":{"injectables/AccountService.html":{}}}],["console.log(new",{"_index":966,"title":{},"body":{"injectables/TransformDatePipe.html":{}}}],["console.log(update",{"_index":808,"title":{},"body":{"classes/DepositProcessor.html":{}}}],["console.log(user_cpf",{"_index":436,"title":{},"body":{"injectables/AccountService.html":{}}}],["const",{"_index":312,"title":{},"body":{"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/DepositProcessor.html":{},"classes/TransactionProcessor.html":{},"injectables/TransactionsRepository.html":{},"injectables/TransformDatePipe.html":{},"classes/UnauthorizedExceptionFilter.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"classes/UtilsService.html":{},"miscellaneous/variables.html":{}}}],["constraint",{"_index":716,"title":{},"body":{"classes/CreateTableAccounts1752935606883.html":{},"classes/CreateTableTransaction1752935614586.html":{}}}],["constructor",{"_index":277,"title":{},"body":{"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/DepositProcessor.html":{},"classes/TransactionProcessor.html":{},"injectables/TransactionsRepository.html":{},"classes/UnauthorizedExceptionError.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{}}}],["constructor(accountdatasource",{"_index":278,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["constructor(accountrepository",{"_index":383,"title":{},"body":{"injectables/AccountService.html":{},"classes/DepositProcessor.html":{},"classes/TransactionProcessor.html":{}}}],["constructor(jwtservice",{"_index":608,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["constructor(msg",{"_index":981,"title":{},"body":{"classes/UnauthorizedExceptionError.html":{}}}],["constructor(private",{"_index":111,"title":{},"body":{"controllers/AccountController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/DepositProcessor.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["constructor(transactiondatasource",{"_index":932,"title":{},"body":{"injectables/TransactionsRepository.html":{}}}],["constructor(userdatasource",{"_index":1104,"title":{},"body":{"injectables/UserRepository.html":{}}}],["constructor(userrepository",{"_index":1146,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(userservice",{"_index":655,"title":{},"body":{"injectables/AuthService.html":{}}}],["conta",{"_index":129,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"classes/TransactionProcessor.html":{},"injectables/UserService.html":{}}}],["continuar",{"_index":649,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["controller",{"_index":42,"title":{"controllers/AccountController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AccountController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('accounts",{"_index":110,"title":{},"body":{"controllers/AccountController.html":{}}}],["controller('auth",{"_index":602,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('user",{"_index":1060,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":44,"title":{},"body":{"controllers/AccountController.html":{},"modules/AccountModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["corrente",{"_index":336,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["correta",{"_index":647,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["count",{"_index":358,"title":{},"body":{"injectables/AccountRepository.html":{},"injectables/UserRepository.html":{}}}],["countaccounntstatement",{"_index":419,"title":{},"body":{"injectables/AccountService.html":{}}}],["countaccountstatement",{"_index":272,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["countaccountstatement(account_number",{"_index":283,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["countusers",{"_index":1097,"title":{},"body":{"injectables/UserRepository.html":{},"injectables/UserService.html":{}}}],["courses",{"_index":1436,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":1241,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["cpf",{"_index":748,"title":{},"body":{"classes/CreateTableUsers1752935590369.html":{},"classes/CreateUserDto.html":{},"classes/User.html":{},"entities/UserEntity.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"classes/UtilsService.html":{},"miscellaneous/variables.html":{}}}],["cpf.decorator.ts",{"_index":1258,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["cpf/is",{"_index":1257,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["cpfgenerator",{"_index":1274,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["cpfgenerator(datasource",{"_index":1349,"title":{},"body":{"miscellaneous/functions.html":{}}}],["creae",{"_index":1136,"title":{},"body":{"injectables/UserRepository.html":{}}}],["create",{"_index":59,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"classes/CreateTableAccounts1752935606883.html":{},"classes/CreateTableTransaction1752935614586.html":{},"classes/CreateTableUsers1752935590369.html":{},"classes/TransactionProcessor.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["create(birthdate",{"_index":1028,"title":{},"body":{"controllers/UserController.html":{}}}],["create(createuserdto",{"_index":1148,"title":{},"body":{"injectables/UserService.html":{}}}],["createaccount",{"_index":50,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{}}}],["createaccount(account",{"_index":286,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["createaccount(user_cpf",{"_index":55,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{}}}],["createaccount.user_id",{"_index":453,"title":{},"body":{"injectables/AccountService.html":{}}}],["createaccountdto",{"_index":56,"title":{"classes/CreateAccountDto.html":{}},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{},"classes/CreateAccountDto.html":{},"coverage.html":{}}}],["created",{"_index":1320,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["created_at",{"_index":13,"title":{},"body":{"classes/Account.html":{},"entities/AccountEntity.html":{},"classes/CreateTableAccounts1752935606883.html":{},"classes/CreateTableUsers1752935590369.html":{},"classes/ResponseUserDto.html":{},"classes/User.html":{},"entities/UserEntity.html":{}}}],["createdatecolumn",{"_index":214,"title":{},"body":{"entities/AccountEntity.html":{},"entities/TransactionEntity.html":{}}}],["createdatecolumn({type",{"_index":184,"title":{},"body":{"entities/AccountEntity.html":{},"entities/TransactionEntity.html":{}}}],["createquerybuilder",{"_index":945,"title":{},"body":{"injectables/TransactionsRepository.html":{},"injectables/UserRepository.html":{}}}],["creates",{"_index":1029,"title":{},"body":{"controllers/UserController.html":{}}}],["createtableaccounts1752935606883",{"_index":697,"title":{"classes/CreateTableAccounts1752935606883.html":{}},"body":{"classes/CreateTableAccounts1752935606883.html":{},"coverage.html":{}}}],["createtabletransaction1752935614586",{"_index":724,"title":{"classes/CreateTableTransaction1752935614586.html":{}},"body":{"classes/CreateTableTransaction1752935614586.html":{},"coverage.html":{}}}],["createtableusers1752935590369",{"_index":737,"title":{"classes/CreateTableUsers1752935590369.html":{}},"body":{"classes/CreateTableUsers1752935590369.html":{},"coverage.html":{}}}],["createtransactiondto",{"_index":753,"title":{"classes/CreateTransactionDto.html":{}},"body":{"classes/CreateTransactionDto.html":{},"coverage.html":{}}}],["createuserdto",{"_index":773,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["createuserdto.birth_date",{"_index":1062,"title":{},"body":{"controllers/UserController.html":{}}}],["createuserdto.password",{"_index":1172,"title":{},"body":{"injectables/UserService.html":{}}}],["creation",{"_index":866,"title":{},"body":{"classes/TransactionProcessor.html":{}}}],["credentials",{"_index":676,"title":{},"body":{"injectables/AuthService.html":{}}}],["credit",{"_index":14,"title":{},"body":{"classes/Account.html":{},"entities/AccountEntity.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"classes/CreateTableAccounts1752935606883.html":{},"classes/TransactionProcessor.html":{}}}],["criada",{"_index":330,"title":{},"body":{"injectables/AccountRepository.html":{},"classes/TransactionProcessor.html":{}}}],["criamos",{"_index":1164,"title":{},"body":{"injectables/UserService.html":{}}}],["criar",{"_index":160,"title":{},"body":{"controllers/AccountController.html":{},"classes/TransactionProcessor.html":{}}}],["cron",{"_index":161,"title":{},"body":{"controllers/AccountController.html":{}}}],["crédito",{"_index":881,"title":{},"body":{"classes/TransactionProcessor.html":{}}}],["ctx",{"_index":995,"title":{},"body":{"classes/UnauthorizedExceptionFilter.html":{}}}],["ctx.getrequest",{"_index":998,"title":{},"body":{"classes/UnauthorizedExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":997,"title":{},"body":{"classes/UnauthorizedExceptionFilter.html":{}}}],["currency_mismatch",{"_index":1335,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["current",{"_index":421,"title":{},"body":{"injectables/AccountService.html":{},"interfaces/PaginatedResponse.html":{},"injectables/UserService.html":{}}}],["current_timestamp(6",{"_index":715,"title":{},"body":{"classes/CreateTableAccounts1752935606883.html":{},"classes/CreateTableTransaction1752935614586.html":{},"classes/CreateTableUsers1752935590369.html":{}}}],["da",{"_index":885,"title":{},"body":{"classes/TransactionProcessor.html":{}}}],["dados",{"_index":140,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{}}}],["data",{"_index":359,"title":{},"body":{"injectables/AccountRepository.html":{},"classes/DepositProcessor.html":{},"classes/TransactionProcessor.html":{},"injectables/TransactionsRepository.html":{}}}],["data.id",{"_index":942,"title":{},"body":{"injectables/TransactionsRepository.html":{}}}],["data_source",{"_index":1501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database",{"_index":867,"title":{},"body":{"classes/TransactionProcessor.html":{},"miscellaneous/variables.html":{}}}],["database/connection/datasource",{"_index":557,"title":{},"body":{"modules/AppModule.html":{}}}],["database/database.module",{"_index":555,"title":{},"body":{"modules/AppModule.html":{}}}],["database/entities/account.entity",{"_index":306,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["database/entities/transaction.entity",{"_index":308,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["databasemodule",{"_index":549,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules.html":{},"overview.html":{}}}],["datasource",{"_index":1269,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["datasource(datasourceoptions",{"_index":1489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource.initialize",{"_index":1503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasourceoptions",{"_index":556,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["datasourceprovider",{"_index":790,"title":{},"body":{"modules/DatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["date",{"_index":752,"title":{},"body":{"classes/CreateTableUsers1752935590369.html":{},"injectables/TransformDatePipe.html":{}}}],["date().toisostring",{"_index":623,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/TransactionProcessor.html":{},"classes/UnauthorizedExceptionFilter.html":{}}}],["date(date[2",{"_index":967,"title":{},"body":{"injectables/TransformDatePipe.html":{}}}],["date.pipe",{"_index":1059,"title":{},"body":{"controllers/UserController.html":{}}}],["date.pipe.ts",{"_index":952,"title":{},"body":{"injectables/TransformDatePipe.html":{},"coverage.html":{}}}],["date.pipe.ts:10",{"_index":957,"title":{},"body":{"injectables/TransformDatePipe.html":{}}}],["date/transform",{"_index":951,"title":{},"body":{"injectables/TransformDatePipe.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["date[0",{"_index":971,"title":{},"body":{"injectables/TransformDatePipe.html":{}}}],["date[0]).getday",{"_index":969,"title":{},"body":{"injectables/TransformDatePipe.html":{}}}],["date[1",{"_index":968,"title":{},"body":{"injectables/TransformDatePipe.html":{}}}],["datevalue",{"_index":970,"title":{},"body":{"injectables/TransformDatePipe.html":{}}}],["datevalue.getdate",{"_index":974,"title":{},"body":{"injectables/TransformDatePipe.html":{}}}],["datevalue.getfullyear",{"_index":972,"title":{},"body":{"injectables/TransformDatePipe.html":{}}}],["datevalue.getmonth",{"_index":973,"title":{},"body":{"injectables/TransformDatePipe.html":{}}}],["dd/mm/yyyy",{"_index":317,"title":{},"body":{"injectables/AccountRepository.html":{},"injectables/UserRepository.html":{}}}],["de",{"_index":132,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{},"injectables/AuthMiddleware.html":{},"classes/TransactionProcessor.html":{},"classes/User.html":{}}}],["deactivateaccount",{"_index":379,"title":{},"body":{"injectables/AccountService.html":{}}}],["deactivateaccount(account_number",{"_index":458,"title":{},"body":{"injectables/AccountService.html":{}}}],["deactivateaccount(usercpf",{"_index":388,"title":{},"body":{"injectables/AccountService.html":{}}}],["deactivated",{"_index":1319,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["decimal",{"_index":187,"title":{},"body":{"entities/AccountEntity.html":{}}}],["declarations",{"_index":233,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":57,"title":{},"body":{"controllers/AccountController.html":{},"entities/AccountEntity.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateAccountDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/DepositDto.html":{},"classes/DepositProcessor.html":{},"classes/ResponseUserDto.html":{},"classes/SignInDto.html":{},"classes/TransactionDto.html":{},"entities/TransactionEntity.html":{},"classes/TransactionProcessor.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{}}}],["deeper",{"_index":1432,"title":{},"body":{"index.html":{}}}],["deeppartial",{"_index":937,"title":{},"body":{"injectables/TransactionsRepository.html":{}}}],["default",{"_index":192,"title":{},"body":{"entities/AccountEntity.html":{},"injectables/AccountRepository.html":{},"classes/CreateAccountDto.html":{},"classes/CreateTableAccounts1752935606883.html":{},"classes/CreateTableTransaction1752935614586.html":{},"classes/CreateTableUsers1752935590369.html":{},"entities/TransactionEntity.html":{},"injectables/UserRepository.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":22,"title":{},"body":{"classes/Account.html":{},"controllers/AccountController.html":{},"entities/AccountEntity.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthApiKeyMiddleware.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/CreateAccountDto.html":{},"classes/CreateTableAccounts1752935606883.html":{},"classes/CreateTableTransaction1752935614586.html":{},"classes/CreateTableUsers1752935590369.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/DepositDto.html":{},"classes/DepositProcessor.html":{},"classes/ResponseUserDto.html":{},"classes/SignInDto.html":{},"classes/TransactionDto.html":{},"entities/TransactionEntity.html":{},"classes/TransactionProcessor.html":{},"injectables/TransactionsRepository.html":{},"injectables/TransformDatePipe.html":{},"classes/UnauthorizedExceptionError.html":{},"classes/UnauthorizedExceptionFilter.html":{},"classes/User.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"classes/UtilsService.html":{}}}],["deixar",{"_index":151,"title":{},"body":{"controllers/AccountController.html":{}}}],["delete",{"_index":1051,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{}}}],["delete(':id",{"_index":1072,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteaccount",{"_index":273,"title":{},"body":{"injectables/AccountRepository.html":{},"injectables/AccountService.html":{}}}],["deleteaccount(account_number",{"_index":390,"title":{},"body":{"injectables/AccountService.html":{}}}],["deleteaccount(accountid",{"_index":289,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["deleted",{"_index":1202,"title":{},"body":{"injectables/UserService.html":{}}}],["deleteuser",{"_index":1098,"title":{},"body":{"injectables/UserRepository.html":{}}}],["deleteuser(userid",{"_index":1108,"title":{},"body":{"injectables/UserRepository.html":{}}}],["dependencies",{"_index":231,"title":{"dependencies.html":{}},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":1387,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":1403,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":1396,"title":{},"body":{"index.html":{}}}],["deploywith",{"_index":1414,"title":{},"body":{"index.html":{}}}],["deposit",{"_index":51,"title":{},"body":{"controllers/AccountController.html":{},"modules/AccountModule.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{}}}],["deposit(undefined",{"_index":292,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["deposit(usercpf",{"_index":69,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{}}}],["depositdto",{"_index":70,"title":{"classes/DepositDto.html":{}},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{},"classes/DepositDto.html":{},"classes/DepositProcessor.html":{},"coverage.html":{}}}],["depositdto.user_id",{"_index":517,"title":{},"body":{"injectables/AccountService.html":{}}}],["depositprocessor",{"_index":258,"title":{"classes/DepositProcessor.html":{}},"body":{"modules/AccountModule.html":{},"classes/DepositProcessor.html":{},"coverage.html":{}}}],["depositqueue",{"_index":384,"title":{},"body":{"injectables/AccountService.html":{}}}],["depósito",{"_index":500,"title":{},"body":{"injectables/AccountService.html":{}}}],["desativada",{"_index":327,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["description",{"_index":695,"title":{},"body":{"classes/CreateAccountDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"index.html":{},"properties.html":{}}}],["design",{"_index":1035,"title":{},"body":{"controllers/UserController.html":{}}}],["details",{"_index":430,"title":{},"body":{"injectables/AccountService.html":{}}}],["determinado",{"_index":167,"title":{},"body":{"controllers/AccountController.html":{}}}],["development",{"_index":1372,"title":{},"body":{"index.html":{}}}],["devida",{"_index":510,"title":{},"body":{"injectables/AccountService.html":{}}}],["devtools",{"_index":1443,"title":{},"body":{"index.html":{}}}],["dia",{"_index":158,"title":{},"body":{"controllers/AccountController.html":{}}}],["different",{"_index":1195,"title":{},"body":{"injectables/UserService.html":{}}}],["dinheiro",{"_index":153,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{},"classes/TransactionProcessor.html":{}}}],["discord",{"_index":1429,"title":{},"body":{"index.html":{}}}],["dive",{"_index":1431,"title":{},"body":{"index.html":{}}}],["document",{"_index":817,"title":{},"body":{"classes/ResponseUserDto.html":{}}}],["documentation",{"_index":1242,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["doesn't",{"_index":531,"title":{},"body":{"injectables/AccountService.html":{}}}],["doesn`t",{"_index":1134,"title":{},"body":{"injectables/UserRepository.html":{}}}],["done",{"_index":374,"title":{},"body":{"injectables/AccountRepository.html":{},"classes/TransactionProcessor.html":{}}}],["done_at",{"_index":732,"title":{},"body":{"classes/CreateTableTransaction1752935614586.html":{},"entities/TransactionEntity.html":{}}}],["down",{"_index":703,"title":{},"body":{"classes/CreateTableAccounts1752935606883.html":{},"classes/CreateTableTransaction1752935614586.html":{},"classes/CreateTableUsers1752935590369.html":{}}}],["down(queryrunner",{"_index":705,"title":{},"body":{"classes/CreateTableAccounts1752935606883.html":{},"classes/CreateTableTransaction1752935614586.html":{},"classes/CreateTableUsers1752935590369.html":{}}}],["dto/create",{"_index":104,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/deposit.dto",{"_index":108,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{},"classes/DepositProcessor.html":{}}}],["dto/response.user.dto",{"_index":1160,"title":{},"body":{"injectables/UserService.html":{}}}],["dto/signin.dto",{"_index":599,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/transaction.dto",{"_index":109,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{},"classes/TransactionProcessor.html":{}}}],["dto/update",{"_index":1058,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["duplicate_transaction",{"_index":1331,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["e",{"_index":131,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"injectables/AuthMiddleware.html":{},"classes/TransactionProcessor.html":{}}}],["e2e",{"_index":1382,"title":{},"body":{"index.html":{}}}],["each",{"_index":1042,"title":{},"body":{"controllers/UserController.html":{}}}],["efficient",{"_index":1358,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":1394,"title":{},"body":{"index.html":{}}}],["ela",{"_index":886,"title":{},"body":{"classes/TransactionProcessor.html":{}}}],["ele",{"_index":162,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["em",{"_index":504,"title":{},"body":{"injectables/AccountService.html":{},"classes/TransactionProcessor.html":{}}}],["emai",{"_index":667,"title":{},"body":{"injectables/AuthService.html":{}}}],["email",{"_index":664,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateTableUsers1752935590369.html":{},"classes/CreateUserDto.html":{},"classes/ResponseUserDto.html":{},"classes/SignInDto.html":{},"interfaces/SignedUser.html":{},"classes/User.html":{},"entities/UserEntity.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"classes/UtilsService.html":{}}}],["emailregex",{"_index":1235,"title":{},"body":{"classes/UtilsService.html":{}}}],["emailregex.test(email",{"_index":1237,"title":{},"body":{"classes/UtilsService.html":{}}}],["emails",{"_index":462,"title":{},"body":{"injectables/AccountService.html":{},"classes/TransactionProcessor.html":{}}}],["end",{"_index":333,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["enough",{"_index":920,"title":{},"body":{"classes/TransactionProcessor.html":{}}}],["ensure",{"_index":1392,"title":{},"body":{"index.html":{}}}],["enterprise",{"_index":1446,"title":{},"body":{"index.html":{}}}],["entities",{"_index":173,"title":{},"body":{"entities/AccountEntity.html":{},"entities/TransactionEntity.html":{},"entities/UserEntity.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["entities/user.entity",{"_index":1124,"title":{},"body":{"injectables/UserRepository.html":{},"injectables/UserService.html":{}}}],["entity",{"_index":172,"title":{"entities/AccountEntity.html":{},"entities/TransactionEntity.html":{},"entities/UserEntity.html":{}},"body":{"entities/AccountEntity.html":{},"entities/TransactionEntity.html":{},"entities/UserEntity.html":{},"coverage.html":{}}}],["entity('tb_accounts",{"_index":226,"title":{},"body":{"entities/AccountEntity.html":{}}}],["entity('tb_transactions",{"_index":858,"title":{},"body":{"entities/TransactionEntity.html":{}}}],["entity('tb_users",{"_index":1088,"title":{},"body":{"entities/UserEntity.html":{}}}],["entrada",{"_index":1187,"title":{},"body":{"injectables/UserService.html":{}}}],["entrou",{"_index":874,"title":{},"body":{"classes/TransactionProcessor.html":{}}}],["enum",{"_index":847,"title":{},"body":{"entities/TransactionEntity.html":{}}}],["enumerations",{"_index":1308,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/accounttype.enum",{"_index":38,"title":{},"body":{"classes/Account.html":{},"injectables/AccountRepository.html":{},"classes/CreateAccountDto.html":{}}}],["enums/failure",{"_index":857,"title":{},"body":{"entities/TransactionEntity.html":{}}}],["enums/transaction",{"_index":856,"title":{},"body":{"entities/TransactionEntity.html":{}}}],["env",{"_index":563,"title":{},"body":{"modules/AppModule.html":{}}}],["envfilepath",{"_index":562,"title":{},"body":{"modules/AppModule.html":{}}}],["envia",{"_index":506,"title":{},"body":{"injectables/AccountService.html":{}}}],["enviamos",{"_index":893,"title":{},"body":{"classes/TransactionProcessor.html":{}}}],["enviou",{"_index":903,"title":{},"body":{"classes/TransactionProcessor.html":{}}}],["erro",{"_index":635,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/TransactionProcessor.html":{}}}],["error",{"_index":362,"title":{},"body":{"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"classes/TransactionProcessor.html":{},"injectables/TransactionsRepository.html":{},"injectables/TransformDatePipe.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{}}}],["error.exception",{"_index":993,"title":{},"body":{"classes/UnauthorizedExceptionFilter.html":{}}}],["error.exception.ts",{"_index":978,"title":{},"body":{"classes/UnauthorizedExceptionError.html":{},"coverage.html":{}}}],["error.exception.ts:3",{"_index":982,"title":{},"body":{"classes/UnauthorizedExceptionError.html":{}}}],["essas",{"_index":1181,"title":{},"body":{"injectables/UserService.html":{}}}],["esse",{"_index":905,"title":{},"body":{"classes/TransactionProcessor.html":{},"injectables/UserService.html":{}}}],["est",{"_index":906,"title":{},"body":{"classes/TransactionProcessor.html":{}}}],["esteja",{"_index":646,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["estiver",{"_index":632,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["etities/account.entity",{"_index":307,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["example",{"_index":1368,"title":{},"body":{"index.html":{}}}],["exception",{"_index":621,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/TransformDatePipe.html":{},"classes/UnauthorizedExceptionFilter.html":{}}}],["exception.filter.ts",{"_index":987,"title":{},"body":{"classes/UnauthorizedExceptionFilter.html":{},"coverage.html":{}}}],["exception.filter.ts:7",{"_index":991,"title":{},"body":{"classes/UnauthorizedExceptionFilter.html":{}}}],["exception.getstatus",{"_index":999,"title":{},"body":{"classes/UnauthorizedExceptionFilter.html":{}}}],["exception.message",{"_index":1002,"title":{},"body":{"classes/UnauthorizedExceptionFilter.html":{}}}],["exceptionfilter",{"_index":988,"title":{},"body":{"classes/UnauthorizedExceptionFilter.html":{}}}],["exceptions/unauthorized",{"_index":992,"title":{},"body":{"classes/UnauthorizedExceptionFilter.html":{}}}],["execute",{"_index":948,"title":{},"body":{"injectables/TransactionsRepository.html":{},"injectables/UserRepository.html":{}}}],["execução",{"_index":505,"title":{},"body":{"injectables/AccountService.html":{}}}],["exist",{"_index":672,"title":{},"body":{"injectables/AuthService.html":{}}}],["existe",{"_index":467,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{}}}],["existem",{"_index":528,"title":{},"body":{"injectables/AccountService.html":{}}}],["existent",{"_index":60,"title":{},"body":{"controllers/AccountController.html":{},"classes/CreateAccountDto.html":{},"controllers/UserController.html":{}}}],["exists",{"_index":488,"title":{},"body":{"injectables/AccountService.html":{},"classes/CreateTableUsers1752935590369.html":{},"injectables/UserService.html":{}}}],["experience",{"_index":1434,"title":{},"body":{"index.html":{}}}],["export",{"_index":39,"title":{},"body":{"classes/Account.html":{},"controllers/AccountController.html":{},"entities/AccountEntity.html":{},"modules/AccountModule.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthApiKeyMiddleware.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAccountDto.html":{},"classes/CreateTableAccounts1752935606883.html":{},"classes/CreateTableTransaction1752935614586.html":{},"classes/CreateTableUsers1752935590369.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/DepositDto.html":{},"classes/DepositProcessor.html":{},"classes/InvestimentProcessor.html":{},"interfaces/PaginatedResponse.html":{},"classes/ResponseUserDto.html":{},"classes/SignInDto.html":{},"interfaces/SignedUser.html":{},"classes/TransactionDto.html":{},"entities/TransactionEntity.html":{},"classes/TransactionProcessor.html":{},"injectables/TransactionsRepository.html":{},"injectables/TransformDatePipe.html":{},"classes/UnauthorizedExceptionError.html":{},"classes/UnauthorizedExceptionFilter.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"classes/UtilsService.html":{}}}],["exports",{"_index":236,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":589,"title":{},"body":{"injectables/AuthApiKeyMiddleware.html":{},"injectables/AuthMiddleware.html":{},"classes/UnauthorizedExceptionFilter.html":{},"classes/UtilsService.html":{},"dependencies.html":{}}}],["extends",{"_index":979,"title":{},"body":{"classes/UnauthorizedExceptionError.html":{},"classes/UpdateUserDto.html":{}}}],["extension",{"_index":743,"title":{},"body":{"classes/CreateTableUsers1752935590369.html":{}}}],["extractheadertoken",{"_index":1207,"title":{},"body":{"classes/UtilsService.html":{}}}],["extractheadertoken(req",{"_index":1211,"title":{},"body":{"classes/UtilsService.html":{}}}],["f]{12}$/i",{"_index":1233,"title":{},"body":{"classes/UtilsService.html":{}}}],["f]{3",{"_index":1231,"title":{},"body":{"classes/UtilsService.html":{}}}],["f]{4",{"_index":1229,"title":{},"body":{"classes/UtilsService.html":{}}}],["f]{8",{"_index":1228,"title":{},"body":{"classes/UtilsService.html":{}}}],["failure",{"_index":1339,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["failure_reason",{"_index":731,"title":{},"body":{"classes/CreateTableTransaction1752935614586.html":{},"classes/CreateTransactionDto.html":{},"entities/TransactionEntity.html":{},"classes/TransactionProcessor.html":{}}}],["failurereason",{"_index":757,"title":{},"body":{"classes/CreateTransactionDto.html":{},"entities/TransactionEntity.html":{},"classes/TransactionProcessor.html":{},"miscellaneous/enumerations.html":{}}}],["failurereason.insufficient_funds",{"_index":917,"title":{},"body":{"classes/TransactionProcessor.html":{}}}],["falha",{"_index":878,"title":{},"body":{"classes/TransactionProcessor.html":{}}}],["false",{"_index":1225,"title":{},"body":{"classes/UtilsService.html":{},"miscellaneous/variables.html":{}}}],["fast",{"_index":1407,"title":{},"body":{"index.html":{}}}],["faz",{"_index":509,"title":{},"body":{"injectables/AccountService.html":{}}}],["fazemos",{"_index":522,"title":{},"body":{"injectables/AccountService.html":{}}}],["feature",{"_index":1039,"title":{},"body":{"controllers/UserController.html":{}}}],["feature'})@get",{"_index":1044,"title":{},"body":{"controllers/UserController.html":{}}}],["features",{"_index":1418,"title":{},"body":{"index.html":{}}}],["feita",{"_index":891,"title":{},"body":{"classes/TransactionProcessor.html":{}}}],["feitas",{"_index":357,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["few",{"_index":1409,"title":{},"body":{"index.html":{}}}],["fila",{"_index":875,"title":{},"body":{"classes/TransactionProcessor.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/Account.html":{},"controllers/AccountController.html":{},"entities/AccountEntity.html":{},"modules/AccountModule.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthApiKeyMiddleware.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAccountDto.html":{},"classes/CreateTableAccounts1752935606883.html":{},"classes/CreateTableTransaction1752935614586.html":{},"classes/CreateTableUsers1752935590369.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/DepositDto.html":{},"classes/DepositProcessor.html":{},"classes/InvestimentProcessor.html":{},"interfaces/PaginatedResponse.html":{},"classes/ResponseUserDto.html":{},"classes/SignInDto.html":{},"interfaces/SignedUser.html":{},"classes/TransactionDto.html":{},"entities/TransactionEntity.html":{},"classes/TransactionProcessor.html":{},"injectables/TransactionsRepository.html":{},"injectables/TransformDatePipe.html":{},"classes/UnauthorizedExceptionError.html":{},"classes/UnauthorizedExceptionFilter.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"classes/UtilsService.html":{},"coverage.html":{}}}],["filters/exceptions/unauthorized",{"_index":977,"title":{},"body":{"classes/UnauthorizedExceptionError.html":{},"coverage.html":{}}}],["filters/filters/unauthorized",{"_index":986,"title":{},"body":{"classes/UnauthorizedExceptionFilter.html":{},"coverage.html":{}}}],["final",{"_index":889,"title":{},"body":{"classes/TransactionProcessor.html":{}}}],["find",{"_index":1047,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserRepository.html":{}}}],["findall",{"_index":1025,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findall(@query('offset",{"_index":1064,"title":{},"body":{"controllers/UserController.html":{}}}],["findall(offset",{"_index":1033,"title":{},"body":{"controllers/UserController.html":{}}}],["findall(undefined",{"_index":1150,"title":{},"body":{"injectables/UserService.html":{}}}],["findallaccountsatement",{"_index":380,"title":{},"body":{"injectables/AccountService.html":{}}}],["findallaccountsatement(undefined",{"_index":393,"title":{},"body":{"injectables/AccountService.html":{}}}],["findallaccountstatementpaginated",{"_index":274,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["findallaccountstatementpaginated(undefined",{"_index":294,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["findallpaginated",{"_index":1099,"title":{},"body":{"injectables/UserRepository.html":{}}}],["findallpaginated(undefined",{"_index":1110,"title":{},"body":{"injectables/UserRepository.html":{}}}],["findbyaccountnumber",{"_index":275,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["findbyaccountnumber(account_number",{"_index":296,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["findbycpf",{"_index":1100,"title":{},"body":{"injectables/UserRepository.html":{},"injectables/UserService.html":{}}}],["findbycpf(cpf",{"_index":1112,"title":{},"body":{"injectables/UserRepository.html":{},"injectables/UserService.html":{}}}],["findbyemail",{"_index":1145,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyemail(email",{"_index":1153,"title":{},"body":{"injectables/UserService.html":{}}}],["findone",{"_index":1026,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{}}}],["findone(@param('id",{"_index":1067,"title":{},"body":{"controllers/UserController.html":{}}}],["findone(id",{"_index":1046,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findone(useridentifier",{"_index":1114,"title":{},"body":{"injectables/UserRepository.html":{}}}],["findoneaccountbyaccountnumber",{"_index":381,"title":{},"body":{"injectables/AccountService.html":{}}}],["findoneaccountbyaccountnumber(account_number",{"_index":395,"title":{},"body":{"injectables/AccountService.html":{}}}],["finduserbyemail",{"_index":1101,"title":{},"body":{"injectables/UserRepository.html":{}}}],["finduserbyemail(email",{"_index":1117,"title":{},"body":{"injectables/UserRepository.html":{}}}],["finished_at",{"_index":733,"title":{},"body":{"classes/CreateTableTransaction1752935614586.html":{},"entities/TransactionEntity.html":{},"classes/TransactionProcessor.html":{}}}],["firstly",{"_index":1036,"title":{},"body":{"controllers/UserController.html":{}}}],["float",{"_index":844,"title":{},"body":{"entities/TransactionEntity.html":{}}}],["focus",{"_index":1417,"title":{},"body":{"index.html":{}}}],["follow",{"_index":1450,"title":{},"body":{"index.html":{}}}],["foram",{"_index":356,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["foreign",{"_index":718,"title":{},"body":{"classes/CreateTableAccounts1752935606883.html":{},"classes/CreateTableTransaction1752935614586.html":{}}}],["found",{"_index":435,"title":{},"body":{"injectables/AccountService.html":{},"injectables/UserService.html":{}}}],["framework",{"_index":1356,"title":{},"body":{"index.html":{}}}],["from(userentity",{"_index":1143,"title":{},"body":{"injectables/UserRepository.html":{}}}],["from_account",{"_index":480,"title":{},"body":{"injectables/AccountService.html":{},"classes/CreateTableTransaction1752935614586.html":{},"classes/CreateTransactionDto.html":{},"classes/TransactionDto.html":{},"entities/TransactionEntity.html":{},"classes/TransactionProcessor.html":{}}}],["from_account_number_fk",{"_index":734,"title":{},"body":{"classes/CreateTableTransaction1752935614586.html":{}}}],["full",{"_index":1445,"title":{},"body":{"index.html":{}}}],["function",{"_index":1271,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1344,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["future",{"_index":439,"title":{},"body":{"injectables/AccountService.html":{}}}],["g",{"_index":1412,"title":{},"body":{"index.html":{}}}],["generaterandomvalue",{"_index":382,"title":{},"body":{"injectables/AccountService.html":{}}}],["gerado",{"_index":899,"title":{},"body":{"classes/TransactionProcessor.html":{}}}],["get('/:account_number/:user_id",{"_index":116,"title":{},"body":{"controllers/AccountController.html":{}}}],["get(':id",{"_index":1066,"title":{},"body":{"controllers/UserController.html":{}}}],["gethello",{"_index":539,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":1352,"title":{"index.html":{}},"body":{}}],["going",{"_index":438,"title":{},"body":{"injectables/AccountService.html":{}}}],["graph",{"_index":1439,"title":{},"body":{"index.html":{},"modules.html":{}}}],["grow",{"_index":1459,"title":{},"body":{"index.html":{}}}],["guardamos",{"_index":884,"title":{},"body":{"classes/TransactionProcessor.html":{}}}],["hands",{"_index":1433,"title":{},"body":{"index.html":{}}}],["handy",{"_index":1423,"title":{},"body":{"index.html":{}}}],["hasenoughcredit",{"_index":912,"title":{},"body":{"classes/TransactionProcessor.html":{}}}],["hash",{"_index":1168,"title":{},"body":{"injectables/UserService.html":{}}}],["hello",{"_index":573,"title":{},"body":{"injectables/AppService.html":{}}}],["help",{"_index":1437,"title":{},"body":{"index.html":{}}}],["here",{"_index":1466,"title":{},"body":{"index.html":{}}}],["hh24:mi:ss",{"_index":318,"title":{},"body":{"injectables/AccountRepository.html":{},"injectables/UserRepository.html":{}}}],["host",{"_index":568,"title":{},"body":{"modules/AppModule.html":{},"classes/UnauthorizedExceptionFilter.html":{},"miscellaneous/variables.html":{}}}],["host.switchtohttp",{"_index":996,"title":{},"body":{"classes/UnauthorizedExceptionFilter.html":{}}}],["httpexception",{"_index":980,"title":{},"body":{"classes/UnauthorizedExceptionError.html":{}}}],["https://nestjs.com",{"_index":1472,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":613,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/UnauthorizedExceptionError.html":{}}}],["httpstatus.unauthorized",{"_index":622,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/UnauthorizedExceptionError.html":{}}}],["id",{"_index":15,"title":{},"body":{"classes/Account.html":{},"entities/AccountEntity.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"classes/CreateAccountDto.html":{},"classes/CreateTableAccounts1752935606883.html":{},"classes/CreateTableTransaction1752935614586.html":{},"classes/CreateTableUsers1752935590369.html":{},"classes/DepositProcessor.html":{},"entities/TransactionEntity.html":{},"classes/TransactionProcessor.html":{},"injectables/TransactionsRepository.html":{},"classes/User.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"classes/UtilsService.html":{}}}],["identifier",{"_index":1133,"title":{},"body":{"injectables/UserRepository.html":{},"coverage.html":{}}}],["implement",{"_index":457,"title":{},"body":{"injectables/AccountService.html":{}}}],["implements",{"_index":8,"title":{},"body":{"classes/Account.html":{},"injectables/AuthApiKeyMiddleware.html":{},"injectables/AuthMiddleware.html":{},"classes/CreateTableAccounts1752935606883.html":{},"classes/CreateTableTransaction1752935614586.html":{},"classes/CreateTableUsers1752935590369.html":{},"injectables/TransformDatePipe.html":{},"classes/UnauthorizedExceptionFilter.html":{},"classes/User.html":{}}}],["import",{"_index":34,"title":{},"body":{"classes/Account.html":{},"controllers/AccountController.html":{},"entities/AccountEntity.html":{},"modules/AccountModule.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthApiKeyMiddleware.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAccountDto.html":{},"classes/CreateTableAccounts1752935606883.html":{},"classes/CreateTableTransaction1752935614586.html":{},"classes/CreateTableUsers1752935590369.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/DepositDto.html":{},"classes/DepositProcessor.html":{},"classes/InvestimentProcessor.html":{},"classes/ResponseUserDto.html":{},"classes/SignInDto.html":{},"classes/TransactionDto.html":{},"entities/TransactionEntity.html":{},"classes/TransactionProcessor.html":{},"injectables/TransactionsRepository.html":{},"injectables/TransformDatePipe.html":{},"classes/UnauthorizedExceptionError.html":{},"classes/UnauthorizedExceptionFilter.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"classes/UtilsService.html":{}}}],["important",{"_index":1043,"title":{},"body":{"controllers/UserController.html":{}}}],["imports",{"_index":262,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/UserModule.html":{}}}],["incomingtransferences",{"_index":175,"title":{},"body":{"entities/AccountEntity.html":{}}}],["increase",{"_index":71,"title":{},"body":{"controllers/AccountController.html":{}}}],["incrementar",{"_index":166,"title":{},"body":{"controllers/AccountController.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"classes/Account.html":{},"controllers/AccountController.html":{},"entities/AccountEntity.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthApiKeyMiddleware.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/CreateAccountDto.html":{},"classes/CreateTableAccounts1752935606883.html":{},"classes/CreateTableTransaction1752935614586.html":{},"classes/CreateTableUsers1752935590369.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/DepositDto.html":{},"classes/DepositProcessor.html":{},"interfaces/PaginatedResponse.html":{},"classes/ResponseUserDto.html":{},"classes/SignInDto.html":{},"interfaces/SignedUser.html":{},"classes/TransactionDto.html":{},"entities/TransactionEntity.html":{},"classes/TransactionProcessor.html":{},"injectables/TransactionsRepository.html":{},"injectables/TransformDatePipe.html":{},"classes/UnauthorizedExceptionFilter.html":{},"classes/User.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"classes/UtilsService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/Account.html":{},"controllers/AccountController.html":{},"entities/AccountEntity.html":{},"modules/AccountModule.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthApiKeyMiddleware.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAccountDto.html":{},"classes/CreateTableAccounts1752935606883.html":{},"classes/CreateTableTransaction1752935614586.html":{},"classes/CreateTableUsers1752935590369.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/DepositDto.html":{},"classes/DepositProcessor.html":{},"classes/InvestimentProcessor.html":{},"interfaces/PaginatedResponse.html":{},"classes/ResponseUserDto.html":{},"classes/SignInDto.html":{},"interfaces/SignedUser.html":{},"classes/TransactionDto.html":{},"entities/TransactionEntity.html":{},"classes/TransactionProcessor.html":{},"injectables/TransactionsRepository.html":{},"injectables/TransformDatePipe.html":{},"classes/UnauthorizedExceptionError.html":{},"classes/UnauthorizedExceptionFilter.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"classes/UtilsService.html":{}}}],["information",{"_index":1397,"title":{},"body":{"index.html":{}}}],["informações",{"_index":637,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["infrastructure",{"_index":1420,"title":{},"body":{"index.html":{}}}],["inicia",{"_index":921,"title":{},"body":{"classes/TransactionProcessor.html":{}}}],["initiate",{"_index":479,"title":{},"body":{"injectables/AccountService.html":{}}}],["injectable",{"_index":266,"title":{"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"injectables/AppService.html":{},"injectables/AuthApiKeyMiddleware.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/TransactionsRepository.html":{},"injectables/TransformDatePipe.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{}},"body":{"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"injectables/AppService.html":{},"injectables/AuthApiKeyMiddleware.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/TransactionsRepository.html":{},"injectables/TransformDatePipe.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":267,"title":{},"body":{"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"injectables/AppService.html":{},"injectables/AuthApiKeyMiddleware.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/TransactionsRepository.html":{},"injectables/TransformDatePipe.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectqueue",{"_index":406,"title":{},"body":{"injectables/AccountService.html":{}}}],["injectqueue('deposit",{"_index":408,"title":{},"body":{"injectables/AccountService.html":{}}}],["injectqueue('transaction",{"_index":409,"title":{},"body":{"injectables/AccountService.html":{}}}],["injectrepository",{"_index":305,"title":{},"body":{"injectables/AccountRepository.html":{},"injectables/TransactionsRepository.html":{},"injectables/UserRepository.html":{}}}],["injectrepository(accountentity",{"_index":309,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["injectrepository(transactionentity",{"_index":310,"title":{},"body":{"injectables/AccountRepository.html":{},"injectables/TransactionsRepository.html":{}}}],["injectrepository(userentity",{"_index":1126,"title":{},"body":{"injectables/UserRepository.html":{}}}],["inner",{"_index":342,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["install",{"_index":1411,"title":{},"body":{"index.html":{}}}],["installcompile",{"_index":1370,"title":{},"body":{"index.html":{}}}],["insufficient_funds",{"_index":1326,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["int",{"_index":203,"title":{},"body":{"entities/AccountEntity.html":{},"classes/CreateTableAccounts1752935606883.html":{},"classes/CreateTableTransaction1752935614586.html":{},"entities/TransactionEntity.html":{}}}],["interact",{"_index":1041,"title":{},"body":{"controllers/UserController.html":{},"index.html":{}}}],["interessadas(um",{"_index":896,"title":{},"body":{"classes/TransactionProcessor.html":{}}}],["interface",{"_index":812,"title":{"interfaces/PaginatedResponse.html":{},"interfaces/SignedUser.html":{}},"body":{"interfaces/PaginatedResponse.html":{},"interfaces/SignedUser.html":{},"coverage.html":{}}}],["interface/signed",{"_index":661,"title":{},"body":{"injectables/AuthService.html":{}}}],["interfaces",{"_index":813,"title":{},"body":{"interfaces/PaginatedResponse.html":{},"interfaces/SignedUser.html":{},"overview.html":{}}}],["internal_error",{"_index":1333,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invalid_account",{"_index":1327,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["investimentprocessor",{"_index":809,"title":{"classes/InvestimentProcessor.html":{}},"body":{"classes/InvestimentProcessor.html":{},"coverage.html":{}}}],["investmoney(@body",{"_index":171,"title":{},"body":{"controllers/AccountController.html":{}}}],["ioredis",{"_index":1296,"title":{},"body":{"dependencies.html":{}}}],["iscpf",{"_index":1179,"title":{},"body":{"injectables/UserService.html":{}}}],["isemail",{"_index":785,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignInDto.html":{},"injectables/UserService.html":{}}}],["isenum",{"_index":691,"title":{},"body":{"classes/CreateAccountDto.html":{},"classes/CreateTransactionDto.html":{}}}],["isenum(accounttype",{"_index":696,"title":{},"body":{"classes/CreateAccountDto.html":{}}}],["isenum(failurereason",{"_index":772,"title":{},"body":{"classes/CreateTransactionDto.html":{}}}],["isenum(transactionstatus",{"_index":771,"title":{},"body":{"classes/CreateTransactionDto.html":{}}}],["isglobal",{"_index":564,"title":{},"body":{"modules/AppModule.html":{}}}],["isnotempty",{"_index":692,"title":{},"body":{"classes/CreateAccountDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/DepositDto.html":{},"classes/SignInDto.html":{},"classes/TransactionDto.html":{}}}],["isnumber",{"_index":765,"title":{},"body":{"classes/CreateTransactionDto.html":{},"classes/DepositDto.html":{},"classes/TransactionDto.html":{}}}],["isoptional",{"_index":693,"title":{},"body":{"classes/CreateAccountDto.html":{},"classes/CreateTransactionDto.html":{},"classes/DepositDto.html":{}}}],["ispositive",{"_index":766,"title":{},"body":{"classes/CreateTransactionDto.html":{}}}],["isso",{"_index":1022,"title":{},"body":{"classes/User.html":{}}}],["isstring",{"_index":786,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/DepositDto.html":{},"classes/SignInDto.html":{}}}],["isuuid",{"_index":1178,"title":{},"body":{"injectables/UserService.html":{}}}],["isvalidcpf",{"_index":1208,"title":{},"body":{"classes/UtilsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isvalidcpf(cpf",{"_index":1213,"title":{},"body":{"classes/UtilsService.html":{}}}],["isvalidemail",{"_index":1209,"title":{},"body":{"classes/UtilsService.html":{}}}],["isvalidemail(email",{"_index":1216,"title":{},"body":{"classes/UtilsService.html":{}}}],["isvalidphonenumber",{"_index":1263,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isvaliduuid",{"_index":1210,"title":{},"body":{"classes/UtilsService.html":{}}}],["isvaliduuid(id",{"_index":1218,"title":{},"body":{"classes/UtilsService.html":{}}}],["items",{"_index":427,"title":{},"body":{"injectables/AccountService.html":{},"interfaces/PaginatedResponse.html":{},"injectables/UserService.html":{}}}],["j",{"_index":502,"title":{},"body":{"injectables/AccountService.html":{},"classes/TransactionProcessor.html":{}}}],["ja",{"_index":355,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["jesus",{"_index":629,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["job",{"_index":137,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{},"classes/DepositProcessor.html":{},"classes/InvestimentProcessor.html":{},"classes/TransactionProcessor.html":{},"index.html":{}}}],["job.id",{"_index":495,"title":{},"body":{"injectables/AccountService.html":{}}}],["job.progress",{"_index":498,"title":{},"body":{"injectables/AccountService.html":{}}}],["job.progress(0",{"_index":909,"title":{},"body":{"classes/TransactionProcessor.html":{}}}],["job.progress(100",{"_index":918,"title":{},"body":{"classes/TransactionProcessor.html":{}}}],["job.progress(50",{"_index":913,"title":{},"body":{"classes/TransactionProcessor.html":{}}}],["job.progress(75",{"_index":925,"title":{},"body":{"classes/TransactionProcessor.html":{}}}],["job.progress(90",{"_index":927,"title":{},"body":{"classes/TransactionProcessor.html":{}}}],["job.timestamp",{"_index":496,"title":{},"body":{"injectables/AccountService.html":{}}}],["job_id",{"_index":520,"title":{},"body":{"injectables/AccountService.html":{}}}],["jobs",{"_index":1454,"title":{},"body":{"index.html":{}}}],["join",{"_index":343,"title":{},"body":{"injectables/AccountRepository.html":{},"index.html":{}}}],["joincolumn",{"_index":215,"title":{},"body":{"entities/AccountEntity.html":{},"entities/TransactionEntity.html":{}}}],["jwtservice",{"_index":609,"title":{},"body":{"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["kamil",{"_index":1469,"title":{},"body":{"index.html":{}}}],["key",{"_index":414,"title":{},"body":{"injectables/AccountService.html":{},"classes/CreateTableAccounts1752935606883.html":{},"classes/CreateTableTransaction1752935614586.html":{},"classes/CreateTableUsers1752935590369.html":{},"index.html":{}}}],["key.middleware.ts",{"_index":578,"title":{},"body":{"injectables/AuthApiKeyMiddleware.html":{},"coverage.html":{}}}],["key.middleware.ts:6",{"_index":585,"title":{},"body":{"injectables/AuthApiKeyMiddleware.html":{}}}],["keyv/redis",{"_index":1281,"title":{},"body":{"dependencies.html":{}}}],["learn",{"_index":1426,"title":{},"body":{"index.html":{}}}],["legend",{"_index":232,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["length",{"_index":787,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["length(10",{"_index":788,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["license",{"_index":1475,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":1457,"title":{},"body":{"index.html":{}}}],["limit",{"_index":79,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{}}}],["limit_exceeded",{"_index":1329,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["linkedin",{"_index":1452,"title":{},"body":{"index.html":{}}}],["list",{"_index":80,"title":{},"body":{"controllers/AccountController.html":{}}}],["listaccountstatement",{"_index":52,"title":{},"body":{"controllers/AccountController.html":{}}}],["listaccountstatement(account_number",{"_index":77,"title":{},"body":{"controllers/AccountController.html":{}}}],["listar",{"_index":351,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["literal",{"_index":287,"title":{},"body":{"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{}}}],["lock",{"_index":475,"title":{},"body":{"injectables/AccountService.html":{}}}],["logged",{"_index":428,"title":{},"body":{"injectables/AccountService.html":{}}}],["looking",{"_index":1398,"title":{},"body":{"index.html":{}}}],["loop",{"_index":1448,"title":{},"body":{"index.html":{}}}],["lot",{"_index":463,"title":{},"body":{"injectables/AccountService.html":{}}}],["mais",{"_index":349,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["make",{"_index":1137,"title":{},"body":{"injectables/UserRepository.html":{}}}],["makes",{"_index":1405,"title":{},"body":{"index.html":{}}}],["manage",{"_index":1038,"title":{},"body":{"controllers/UserController.html":{}}}],["managing",{"_index":1419,"title":{},"body":{"index.html":{}}}],["manytoone",{"_index":216,"title":{},"body":{"entities/AccountEntity.html":{},"entities/TransactionEntity.html":{}}}],["manytoone(undefined",{"_index":210,"title":{},"body":{"entities/AccountEntity.html":{},"entities/TransactionEntity.html":{}}}],["matching",{"_index":41,"title":{},"body":{"classes/Account.html":{},"controllers/AccountController.html":{},"entities/AccountEntity.html":{},"modules/AccountModule.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthApiKeyMiddleware.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAccountDto.html":{},"classes/CreateTableAccounts1752935606883.html":{},"classes/CreateTableTransaction1752935614586.html":{},"classes/CreateTableUsers1752935590369.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/DepositDto.html":{},"classes/DepositProcessor.html":{},"classes/InvestimentProcessor.html":{},"interfaces/PaginatedResponse.html":{},"classes/ResponseUserDto.html":{},"classes/SignInDto.html":{},"interfaces/SignedUser.html":{},"classes/TransactionDto.html":{},"entities/TransactionEntity.html":{},"classes/TransactionProcessor.html":{},"injectables/TransactionsRepository.html":{},"injectables/TransformDatePipe.html":{},"classes/UnauthorizedExceptionError.html":{},"classes/UnauthorizedExceptionFilter.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"classes/UtilsService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["math.ceil(limit",{"_index":426,"title":{},"body":{"injectables/AccountService.html":{},"injectables/UserService.html":{}}}],["math.floor(100000",{"_index":534,"title":{},"body":{"injectables/AccountService.html":{}}}],["math.random",{"_index":535,"title":{},"body":{"injectables/AccountService.html":{}}}],["mau",{"_index":1401,"title":{},"body":{"index.html":{}}}],["message",{"_index":372,"title":{},"body":{"injectables/AccountRepository.html":{},"injectables/AuthMiddleware.html":{},"classes/TransactionProcessor.html":{},"classes/UnauthorizedExceptionFilter.html":{}}}],["metadata",{"_index":955,"title":{},"body":{"injectables/TransformDatePipe.html":{},"dependencies.html":{}}}],["metadata.type",{"_index":959,"title":{},"body":{"injectables/TransformDatePipe.html":{}}}],["methods",{"_index":48,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthApiKeyMiddleware.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/CreateTableAccounts1752935606883.html":{},"classes/CreateTableTransaction1752935614586.html":{},"classes/CreateTableUsers1752935590369.html":{},"classes/DepositProcessor.html":{},"classes/TransactionProcessor.html":{},"injectables/TransactionsRepository.html":{},"injectables/TransformDatePipe.html":{},"classes/UnauthorizedExceptionFilter.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"classes/UtilsService.html":{}}}],["migrationinterface",{"_index":701,"title":{},"body":{"classes/CreateTableAccounts1752935606883.html":{},"classes/CreateTableTransaction1752935614586.html":{},"classes/CreateTableUsers1752935590369.html":{}}}],["migrations",{"_index":1497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":1307,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1456,"title":{},"body":{"index.html":{},"properties.html":{}}}],["mode",{"_index":1375,"title":{},"body":{"index.html":{}}}],["module",{"_index":228,"title":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":230,"title":{"modules.html":{}},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/account/account.controller.ts",{"_index":45,"title":{},"body":{"controllers/AccountController.html":{},"coverage.html":{}}}],["modules/account/account.controller.ts:24",{"_index":82,"title":{},"body":{"controllers/AccountController.html":{}}}],["modules/account/account.controller.ts:44",{"_index":90,"title":{},"body":{"controllers/AccountController.html":{}}}],["modules/account/account.controller.ts:52",{"_index":62,"title":{},"body":{"controllers/AccountController.html":{}}}],["modules/account/account.controller.ts:63",{"_index":75,"title":{},"body":{"controllers/AccountController.html":{}}}],["modules/account/account.controller.ts:74",{"_index":95,"title":{},"body":{"controllers/AccountController.html":{}}}],["modules/account/account.module",{"_index":553,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/account/account.module.ts",{"_index":247,"title":{},"body":{"modules/AccountModule.html":{}}}],["modules/account/account.service.ts",{"_index":378,"title":{},"body":{"injectables/AccountService.html":{},"coverage.html":{}}}],["modules/account/account.service.ts:108",{"_index":391,"title":{},"body":{"injectables/AccountService.html":{}}}],["modules/account/account.service.ts:129",{"_index":398,"title":{},"body":{"injectables/AccountService.html":{}}}],["modules/account/account.service.ts:164",{"_index":392,"title":{},"body":{"injectables/AccountService.html":{}}}],["modules/account/account.service.ts:17",{"_index":386,"title":{},"body":{"injectables/AccountService.html":{}}}],["modules/account/account.service.ts:187",{"_index":400,"title":{},"body":{"injectables/AccountService.html":{}}}],["modules/account/account.service.ts:213",{"_index":389,"title":{},"body":{"injectables/AccountService.html":{}}}],["modules/account/account.service.ts:220",{"_index":397,"title":{},"body":{"injectables/AccountService.html":{}}}],["modules/account/account.service.ts:29",{"_index":394,"title":{},"body":{"injectables/AccountService.html":{}}}],["modules/account/account.service.ts:69",{"_index":396,"title":{},"body":{"injectables/AccountService.html":{}}}],["modules/account/account.service.ts:85",{"_index":387,"title":{},"body":{"injectables/AccountService.html":{}}}],["modules/account/dto/create",{"_index":682,"title":{},"body":{"classes/CreateAccountDto.html":{},"classes/CreateTransactionDto.html":{},"coverage.html":{}}}],["modules/account/dto/deposit.dto.ts",{"_index":792,"title":{},"body":{"classes/DepositDto.html":{},"coverage.html":{}}}],["modules/account/dto/deposit.dto.ts:13",{"_index":797,"title":{},"body":{"classes/DepositDto.html":{}}}],["modules/account/dto/deposit.dto.ts:18",{"_index":796,"title":{},"body":{"classes/DepositDto.html":{}}}],["modules/account/dto/deposit.dto.ts:8",{"_index":794,"title":{},"body":{"classes/DepositDto.html":{}}}],["modules/account/dto/transaction.dto.ts",{"_index":832,"title":{},"body":{"classes/TransactionDto.html":{},"coverage.html":{}}}],["modules/account/dto/transaction.dto.ts:13",{"_index":834,"title":{},"body":{"classes/TransactionDto.html":{}}}],["modules/account/dto/transaction.dto.ts:18",{"_index":835,"title":{},"body":{"classes/TransactionDto.html":{}}}],["modules/account/dto/transaction.dto.ts:8",{"_index":833,"title":{},"body":{"classes/TransactionDto.html":{}}}],["modules/account/enums/accountstatus.enum",{"_index":225,"title":{},"body":{"entities/AccountEntity.html":{}}}],["modules/account/enums/accountstatus.enum.ts",{"_index":1317,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["modules/account/enums/accounttype.enum",{"_index":224,"title":{},"body":{"entities/AccountEntity.html":{}}}],["modules/account/enums/accounttype.enum.ts",{"_index":1322,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["modules/account/etities/account.entity.ts",{"_index":7,"title":{},"body":{"classes/Account.html":{},"coverage.html":{}}}],["modules/account/etities/account.entity.ts:10",{"_index":23,"title":{},"body":{"classes/Account.html":{}}}],["modules/account/etities/account.entity.ts:11",{"_index":25,"title":{},"body":{"classes/Account.html":{}}}],["modules/account/etities/account.entity.ts:12",{"_index":30,"title":{},"body":{"classes/Account.html":{}}}],["modules/account/etities/account.entity.ts:13",{"_index":33,"title":{},"body":{"classes/Account.html":{}}}],["modules/account/etities/account.entity.ts:6",{"_index":27,"title":{},"body":{"classes/Account.html":{}}}],["modules/account/etities/account.entity.ts:7",{"_index":29,"title":{},"body":{"classes/Account.html":{}}}],["modules/account/etities/account.entity.ts:8",{"_index":32,"title":{},"body":{"classes/Account.html":{}}}],["modules/account/etities/account.entity.ts:9",{"_index":26,"title":{},"body":{"classes/Account.html":{}}}],["modules/account/middlewares/auth.middleware.ts",{"_index":1250,"title":{},"body":{"coverage.html":{}}}],["modules/account/processors/depoist.processor.ts",{"_index":798,"title":{},"body":{"classes/DepositProcessor.html":{},"coverage.html":{}}}],["modules/account/processors/depoist.processor.ts:11",{"_index":802,"title":{},"body":{"classes/DepositProcessor.html":{}}}],["modules/account/processors/depoist.processor.ts:7",{"_index":799,"title":{},"body":{"classes/DepositProcessor.html":{}}}],["modules/account/processors/investment.processor.ts",{"_index":810,"title":{},"body":{"classes/InvestimentProcessor.html":{},"coverage.html":{}}}],["modules/account/processors/transaction.processor.ts",{"_index":861,"title":{},"body":{"classes/TransactionProcessor.html":{},"coverage.html":{}}}],["modules/account/processors/transaction.processor.ts:28",{"_index":863,"title":{},"body":{"classes/TransactionProcessor.html":{}}}],["modules/account/processors/transaction.processor.ts:34",{"_index":865,"title":{},"body":{"classes/TransactionProcessor.html":{}}}],["modules/account/repositories/account.repository",{"_index":1125,"title":{},"body":{"injectables/UserRepository.html":{}}}],["modules/account/repositories/account.repository.ts",{"_index":268,"title":{},"body":{"injectables/AccountRepository.html":{},"coverage.html":{}}}],["modules/account/repositories/account.repository.ts:108",{"_index":288,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["modules/account/repositories/account.repository.ts:11",{"_index":303,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["modules/account/repositories/account.repository.ts:12",{"_index":281,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["modules/account/repositories/account.repository.ts:123",{"_index":299,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["modules/account/repositories/account.repository.ts:132",{"_index":290,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["modules/account/repositories/account.repository.ts:141",{"_index":293,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["modules/account/repositories/account.repository.ts:169",{"_index":301,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["modules/account/repositories/account.repository.ts:22",{"_index":295,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["modules/account/repositories/account.repository.ts:77",{"_index":284,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["modules/account/repositories/account.repository.ts:89",{"_index":297,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["modules/account/repositories/transaction.repository.ts",{"_index":930,"title":{},"body":{"injectables/TransactionsRepository.html":{},"coverage.html":{}}}],["modules/account/repositories/transaction.repository.ts:13",{"_index":935,"title":{},"body":{"injectables/TransactionsRepository.html":{}}}],["modules/account/repositories/transaction.repository.ts:36",{"_index":938,"title":{},"body":{"injectables/TransactionsRepository.html":{}}}],["modules/account/repositories/transaction.repository.ts:7",{"_index":933,"title":{},"body":{"injectables/TransactionsRepository.html":{}}}],["modules/auth/auth.controller.ts",{"_index":591,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["modules/auth/auth.controller.ts:9",{"_index":597,"title":{},"body":{"controllers/AuthController.html":{}}}],["modules/auth/auth.module",{"_index":558,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/auth/auth.module.ts",{"_index":652,"title":{},"body":{"modules/AuthModule.html":{}}}],["modules/auth/auth.service.ts",{"_index":654,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["modules/auth/auth.service.ts:10",{"_index":656,"title":{},"body":{"injectables/AuthService.html":{}}}],["modules/auth/auth.service.ts:16",{"_index":658,"title":{},"body":{"injectables/AuthService.html":{}}}],["modules/auth/dto/signin.dto.ts",{"_index":825,"title":{},"body":{"classes/SignInDto.html":{},"coverage.html":{}}}],["modules/auth/dto/signin.dto.ts:13",{"_index":829,"title":{},"body":{"classes/SignInDto.html":{}}}],["modules/auth/dto/signin.dto.ts:8",{"_index":827,"title":{},"body":{"classes/SignInDto.html":{}}}],["modules/auth/interface/signed",{"_index":830,"title":{},"body":{"interfaces/SignedUser.html":{},"coverage.html":{}}}],["modules/auth/middlewares/auth.middleware.ts",{"_index":607,"title":{},"body":{"injectables/AuthMiddleware.html":{},"coverage.html":{}}}],["modules/auth/middlewares/auth.middleware.ts:13",{"_index":612,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["modules/auth/middlewares/auth.middleware.ts:8",{"_index":611,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["modules/user/dto/create",{"_index":774,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["modules/user/dto/response.user.dto.ts",{"_index":816,"title":{},"body":{"classes/ResponseUserDto.html":{},"coverage.html":{}}}],["modules/user/dto/response.user.dto.ts:11",{"_index":823,"title":{},"body":{"classes/ResponseUserDto.html":{}}}],["modules/user/dto/response.user.dto.ts:13",{"_index":818,"title":{},"body":{"classes/ResponseUserDto.html":{}}}],["modules/user/dto/response.user.dto.ts:15",{"_index":819,"title":{},"body":{"classes/ResponseUserDto.html":{}}}],["modules/user/dto/response.user.dto.ts:17",{"_index":824,"title":{},"body":{"classes/ResponseUserDto.html":{}}}],["modules/user/dto/response.user.dto.ts:5",{"_index":822,"title":{},"body":{"classes/ResponseUserDto.html":{}}}],["modules/user/dto/response.user.dto.ts:7",{"_index":821,"title":{},"body":{"classes/ResponseUserDto.html":{}}}],["modules/user/dto/response.user.dto.ts:9",{"_index":820,"title":{},"body":{"classes/ResponseUserDto.html":{}}}],["modules/user/dto/update",{"_index":1006,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["modules/user/entities/user.entity.ts",{"_index":1010,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["modules/user/entities/user.entity.ts:10",{"_index":1012,"title":{},"body":{"classes/User.html":{}}}],["modules/user/entities/user.entity.ts:11",{"_index":1014,"title":{},"body":{"classes/User.html":{}}}],["modules/user/entities/user.entity.ts:12",{"_index":1019,"title":{},"body":{"classes/User.html":{}}}],["modules/user/entities/user.entity.ts:13",{"_index":1011,"title":{},"body":{"classes/User.html":{}}}],["modules/user/entities/user.entity.ts:5",{"_index":1016,"title":{},"body":{"classes/User.html":{}}}],["modules/user/entities/user.entity.ts:6",{"_index":1017,"title":{},"body":{"classes/User.html":{}}}],["modules/user/entities/user.entity.ts:7",{"_index":1015,"title":{},"body":{"classes/User.html":{}}}],["modules/user/entities/user.entity.ts:8",{"_index":1013,"title":{},"body":{"classes/User.html":{}}}],["modules/user/entities/user.entity.ts:9",{"_index":1018,"title":{},"body":{"classes/User.html":{}}}],["modules/user/enums/userrole.enum.ts",{"_index":1342,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["modules/user/repository/user.repository.ts",{"_index":1096,"title":{},"body":{"injectables/UserRepository.html":{},"coverage.html":{}}}],["modules/user/repository/user.repository.ts:10",{"_index":1105,"title":{},"body":{"injectables/UserRepository.html":{}}}],["modules/user/repository/user.repository.ts:106",{"_index":1109,"title":{},"body":{"injectables/UserRepository.html":{}}}],["modules/user/repository/user.repository.ts:18",{"_index":1111,"title":{},"body":{"injectables/UserRepository.html":{}}}],["modules/user/repository/user.repository.ts:39",{"_index":1107,"title":{},"body":{"injectables/UserRepository.html":{}}}],["modules/user/repository/user.repository.ts:45",{"_index":1115,"title":{},"body":{"injectables/UserRepository.html":{}}}],["modules/user/repository/user.repository.ts:62",{"_index":1113,"title":{},"body":{"injectables/UserRepository.html":{}}}],["modules/user/repository/user.repository.ts:74",{"_index":1118,"title":{},"body":{"injectables/UserRepository.html":{}}}],["modules/user/repository/user.repository.ts:88",{"_index":1120,"title":{},"body":{"injectables/UserRepository.html":{}}}],["modules/user/repository/user.repository.ts:92",{"_index":1122,"title":{},"body":{"injectables/UserRepository.html":{}}}],["modules/user/user.controller.ts",{"_index":1024,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["modules/user/user.controller.ts:24",{"_index":1031,"title":{},"body":{"controllers/UserController.html":{}}}],["modules/user/user.controller.ts:38",{"_index":1045,"title":{},"body":{"controllers/UserController.html":{}}}],["modules/user/user.controller.ts:46",{"_index":1049,"title":{},"body":{"controllers/UserController.html":{}}}],["modules/user/user.controller.ts:54",{"_index":1056,"title":{},"body":{"controllers/UserController.html":{}}}],["modules/user/user.controller.ts:62",{"_index":1053,"title":{},"body":{"controllers/UserController.html":{}}}],["modules/user/user.module",{"_index":554,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/user/user.module.ts",{"_index":1092,"title":{},"body":{"modules/UserModule.html":{}}}],["modules/user/user.service.ts",{"_index":1144,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["modules/user/user.service.ts:100",{"_index":1156,"title":{},"body":{"injectables/UserService.html":{}}}],["modules/user/user.service.ts:13",{"_index":1147,"title":{},"body":{"injectables/UserService.html":{}}}],["modules/user/user.service.ts:15",{"_index":1149,"title":{},"body":{"injectables/UserService.html":{}}}],["modules/user/user.service.ts:29",{"_index":1151,"title":{},"body":{"injectables/UserService.html":{}}}],["modules/user/user.service.ts:58",{"_index":1155,"title":{},"body":{"injectables/UserService.html":{}}}],["modules/user/user.service.ts:70",{"_index":1154,"title":{},"body":{"injectables/UserService.html":{}}}],["modules/user/user.service.ts:79",{"_index":1152,"title":{},"body":{"injectables/UserService.html":{}}}],["modules/user/user.service.ts:87",{"_index":1157,"title":{},"body":{"injectables/UserService.html":{}}}],["money",{"_index":93,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{}}}],["more",{"_index":464,"title":{},"body":{"injectables/AccountService.html":{},"index.html":{}}}],["msg",{"_index":983,"title":{},"body":{"classes/UnauthorizedExceptionError.html":{}}}],["muito",{"_index":348,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["multiple",{"_index":1138,"title":{},"body":{"injectables/UserRepository.html":{}}}],["myśliwiec",{"_index":1470,"title":{},"body":{"index.html":{}}}],["método",{"_index":1184,"title":{},"body":{"injectables/UserService.html":{}}}],["na",{"_index":169,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AuthMiddleware.html":{},"classes/TransactionProcessor.html":{},"injectables/UserService.html":{}}}],["name",{"_index":64,"title":{},"body":{"controllers/AccountController.html":{},"entities/AccountEntity.html":{},"modules/AccountModule.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"injectables/AuthApiKeyMiddleware.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/CreateTableAccounts1752935606883.html":{},"classes/CreateTableTransaction1752935614586.html":{},"classes/CreateTableUsers1752935590369.html":{},"classes/CreateUserDto.html":{},"classes/DepositProcessor.html":{},"classes/ResponseUserDto.html":{},"interfaces/SignedUser.html":{},"entities/TransactionEntity.html":{},"classes/TransactionProcessor.html":{},"injectables/TransactionsRepository.html":{},"injectables/TransformDatePipe.html":{},"classes/UnauthorizedExceptionError.html":{},"classes/UnauthorizedExceptionFilter.html":{},"classes/User.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"classes/UtilsService.html":{},"miscellaneous/functions.html":{}}}],["necessary",{"_index":413,"title":{},"body":{"injectables/AccountService.html":{}}}],["need",{"_index":1198,"title":{},"body":{"injectables/UserService.html":{},"index.html":{}}}],["needs",{"_index":471,"title":{},"body":{"injectables/AccountService.html":{}}}],["negódcio",{"_index":1021,"title":{},"body":{"classes/User.html":{}}}],["nest",{"_index":1363,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":1474,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":1388,"title":{},"body":{"index.html":{}}}],["nestjs/bull",{"_index":257,"title":{},"body":{"modules/AccountModule.html":{},"injectables/AccountService.html":{},"modules/AppModule.html":{},"classes/DepositProcessor.html":{},"classes/InvestimentProcessor.html":{},"classes/TransactionProcessor.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":101,"title":{},"body":{"controllers/AccountController.html":{},"modules/AccountModule.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthApiKeyMiddleware.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"classes/TransactionProcessor.html":{},"injectables/TransactionsRepository.html":{},"injectables/TransformDatePipe.html":{},"classes/UnauthorizedExceptionError.html":{},"classes/UnauthorizedExceptionFilter.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":560,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1286,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":614,"title":{},"body":{"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":1288,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mau",{"_index":1413,"title":{},"body":{"index.html":{}}}],["nestjs/platform",{"_index":1290,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":107,"title":{},"body":{"controllers/AccountController.html":{},"classes/CreateAccountDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/DepositDto.html":{},"classes/ResponseUserDto.html":{},"classes/SignInDto.html":{},"classes/TransactionDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":250,"title":{},"body":{"modules/AccountModule.html":{},"injectables/AccountRepository.html":{},"modules/AppModule.html":{},"injectables/TransactionsRepository.html":{},"modules/UserModule.html":{},"injectables/UserRepository.html":{},"dependencies.html":{}}}],["nestmiddleware",{"_index":588,"title":{},"body":{"injectables/AuthApiKeyMiddleware.html":{},"injectables/AuthMiddleware.html":{}}}],["network_error",{"_index":1330,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["new",{"_index":411,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/TransactionProcessor.html":{},"injectables/TransformDatePipe.html":{},"classes/UnauthorizedExceptionFilter.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newcredit",{"_index":804,"title":{},"body":{"classes/DepositProcessor.html":{}}}],["newpassowrd",{"_index":1169,"title":{},"body":{"injectables/UserService.html":{}}}],["next",{"_index":422,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthApiKeyMiddleware.html":{},"injectables/AuthMiddleware.html":{},"interfaces/PaginatedResponse.html":{},"injectables/UserService.html":{}}}],["nextfunction",{"_index":584,"title":{},"body":{"injectables/AuthApiKeyMiddleware.html":{},"injectables/AuthMiddleware.html":{}}}],["node.js",{"_index":1355,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":403,"title":{},"body":{"injectables/AccountService.html":{}}}],["notfoundexception('one",{"_index":487,"title":{},"body":{"injectables/AccountService.html":{}}}],["notfoundexception('user",{"_index":516,"title":{},"body":{"injectables/AccountService.html":{}}}],["notificação",{"_index":514,"title":{},"body":{"injectables/AccountService.html":{}}}],["notificações",{"_index":894,"title":{},"body":{"classes/TransactionProcessor.html":{}}}],["notify",{"_index":870,"title":{},"body":{"classes/TransactionProcessor.html":{}}}],["npm",{"_index":1369,"title":{},"body":{"index.html":{}}}],["null",{"_index":423,"title":{},"body":{"injectables/AccountService.html":{},"classes/CreateTableAccounts1752935606883.html":{},"classes/CreateTableTransaction1752935614586.html":{},"classes/CreateTableUsers1752935590369.html":{},"interfaces/PaginatedResponse.html":{},"injectables/UserService.html":{}}}],["nullable",{"_index":848,"title":{},"body":{"entities/TransactionEntity.html":{}}}],["number",{"_index":21,"title":{},"body":{"classes/Account.html":{},"controllers/AccountController.html":{},"entities/AccountEntity.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"classes/CreateTransactionDto.html":{},"classes/DepositDto.html":{},"interfaces/PaginatedResponse.html":{},"classes/TransactionDto.html":{},"entities/TransactionEntity.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"classes/UtilsService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["number(account.credit",{"_index":805,"title":{},"body":{"classes/DepositProcessor.html":{}}}],["number(hasenoughcredit.credit",{"_index":914,"title":{},"body":{"classes/TransactionProcessor.html":{}}}],["number(process.env.db_port",{"_index":1495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number.decorator.ts",{"_index":1262,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["number/is",{"_index":1261,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["numeric(10",{"_index":714,"title":{},"body":{"classes/CreateTableAccounts1752935606883.html":{}}}],["numeric(10,2",{"_index":730,"title":{},"body":{"classes/CreateTableTransaction1752935614586.html":{}}}],["não",{"_index":879,"title":{},"body":{"classes/TransactionProcessor.html":{}}}],["nós",{"_index":634,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["o",{"_index":152,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/TransactionProcessor.html":{},"injectables/UserService.html":{}}}],["offer",{"_index":1453,"title":{},"body":{"index.html":{}}}],["official",{"_index":1402,"title":{},"body":{"index.html":{}}}],["offset",{"_index":78,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{}}}],["one",{"_index":432,"title":{},"body":{"injectables/AccountService.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{}}}],["onetomany",{"_index":217,"title":{},"body":{"entities/AccountEntity.html":{},"entities/UserEntity.html":{}}}],["onetomany(undefined",{"_index":198,"title":{},"body":{"entities/AccountEntity.html":{},"entities/UserEntity.html":{}}}],["open",{"_index":1458,"title":{},"body":{"index.html":{}}}],["optional",{"_index":65,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"injectables/AuthApiKeyMiddleware.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/CreateTableAccounts1752935606883.html":{},"classes/CreateTableTransaction1752935614586.html":{},"classes/CreateTableUsers1752935590369.html":{},"classes/CreateTransactionDto.html":{},"classes/DepositProcessor.html":{},"classes/TransactionProcessor.html":{},"injectables/TransactionsRepository.html":{},"injectables/TransformDatePipe.html":{},"classes/UnauthorizedExceptionError.html":{},"classes/UnauthorizedExceptionFilter.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"classes/UtilsService.html":{},"miscellaneous/functions.html":{}}}],["os",{"_index":139,"title":{},"body":{"controllers/AccountController.html":{}}}],["ossp",{"_index":744,"title":{},"body":{"classes/CreateTableUsers1752935590369.html":{}}}],["otherwise",{"_index":452,"title":{},"body":{"injectables/AccountService.html":{}}}],["ou",{"_index":641,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["out",{"_index":246,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"index.html":{},"overview.html":{}}}],["outra",{"_index":924,"title":{},"body":{"classes/TransactionProcessor.html":{}}}],["overview",{"_index":1480,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1280,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padrao",{"_index":1165,"title":{},"body":{"injectables/UserService.html":{}}}],["paginatedresponse",{"_index":404,"title":{"interfaces/PaginatedResponse.html":{}},"body":{"injectables/AccountService.html":{},"interfaces/PaginatedResponse.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["para",{"_index":127,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{},"classes/TransactionProcessor.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["param",{"_index":97,"title":{},"body":{"controllers/AccountController.html":{},"controllers/UserController.html":{}}}],["param(':user_id",{"_index":149,"title":{},"body":{"controllers/AccountController.html":{}}}],["param('account_number",{"_index":117,"title":{},"body":{"controllers/AccountController.html":{}}}],["param('user_cpf",{"_index":144,"title":{},"body":{"controllers/AccountController.html":{}}}],["param('user_id",{"_index":118,"title":{},"body":{"controllers/AccountController.html":{}}}],["parameters",{"_index":63,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"injectables/AuthApiKeyMiddleware.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/CreateTableAccounts1752935606883.html":{},"classes/CreateTableTransaction1752935614586.html":{},"classes/CreateTableUsers1752935590369.html":{},"classes/DepositProcessor.html":{},"classes/TransactionProcessor.html":{},"injectables/TransactionsRepository.html":{},"injectables/TransformDatePipe.html":{},"classes/UnauthorizedExceptionError.html":{},"classes/UnauthorizedExceptionFilter.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"classes/UtilsService.html":{},"miscellaneous/functions.html":{}}}],["parseint(el",{"_index":963,"title":{},"body":{"injectables/TransformDatePipe.html":{}}}],["part",{"_index":1444,"title":{},"body":{"index.html":{}}}],["partes",{"_index":895,"title":{},"body":{"classes/TransactionProcessor.html":{}}}],["partial",{"_index":9,"title":{},"body":{"classes/Account.html":{},"injectables/AccountRepository.html":{},"injectables/TransactionsRepository.html":{},"injectables/UserRepository.html":{}}}],["partialtype",{"_index":1008,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["partialtype(createuserdto",{"_index":1007,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["passamos",{"_index":904,"title":{},"body":{"classes/TransactionProcessor.html":{}}}],["passar",{"_index":923,"title":{},"body":{"classes/TransactionProcessor.html":{}}}],["passes",{"_index":449,"title":{},"body":{"injectables/AccountService.html":{}}}],["password",{"_index":665,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateTableUsers1752935590369.html":{},"classes/CreateUserDto.html":{},"classes/ResponseUserDto.html":{},"classes/SignInDto.html":{},"classes/User.html":{},"entities/UserEntity.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["patch",{"_index":98,"title":{},"body":{"controllers/AccountController.html":{},"controllers/UserController.html":{}}}],["patch('/deposit/:user_cpf",{"_index":146,"title":{},"body":{"controllers/AccountController.html":{}}}],["patch(':id",{"_index":1069,"title":{},"body":{"controllers/UserController.html":{}}}],["patch(':user_id/account/:account_number",{"_index":148,"title":{},"body":{"controllers/AccountController.html":{}}}],["path",{"_index":1003,"title":{},"body":{"classes/UnauthorizedExceptionFilter.html":{}}}],["payload",{"_index":626,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{}}}],["payroll_account",{"_index":1325,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pdf",{"_index":898,"title":{},"body":{"classes/TransactionProcessor.html":{}}}],["pega",{"_index":507,"title":{},"body":{"injectables/AccountService.html":{}}}],["pegamos",{"_index":636,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["pending",{"_index":1340,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["perfom",{"_index":85,"title":{},"body":{"controllers/AccountController.html":{}}}],["permission",{"_index":1200,"title":{},"body":{"injectables/UserService.html":{}}}],["pg",{"_index":1298,"title":{},"body":{"dependencies.html":{}}}],["phone",{"_index":1260,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["pipetransform",{"_index":958,"title":{},"body":{"injectables/TransformDatePipe.html":{}}}],["plaintoinstance",{"_index":1158,"title":{},"body":{"injectables/UserService.html":{}}}],["plaintoinstance(responseuserdto",{"_index":1177,"title":{},"body":{"injectables/UserService.html":{}}}],["platform",{"_index":1400,"title":{},"body":{"index.html":{}}}],["please",{"_index":1428,"title":{},"body":{"index.html":{}}}],["pode",{"_index":648,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/TransactionProcessor.html":{},"classes/User.html":{}}}],["podemos",{"_index":350,"title":{},"body":{"injectables/AccountRepository.html":{},"injectables/UserService.html":{}}}],["por",{"_index":165,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AuthService.html":{}}}],["porcentagem",{"_index":156,"title":{},"body":{"controllers/AccountController.html":{}}}],["port",{"_index":569,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["possible",{"_index":1395,"title":{},"body":{"index.html":{}}}],["post",{"_index":99,"title":{},"body":{"controllers/AccountController.html":{},"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["post(':user_cpf",{"_index":143,"title":{},"body":{"controllers/AccountController.html":{}}}],["post('signin",{"_index":596,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('transaction",{"_index":134,"title":{},"body":{"controllers/AccountController.html":{}}}],["postgres",{"_index":1300,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["poupança",{"_index":337,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["pra",{"_index":668,"title":{},"body":{"injectables/AuthService.html":{}}}],["precisa",{"_index":135,"title":{},"body":{"controllers/AccountController.html":{},"classes/TransactionProcessor.html":{},"classes/User.html":{}}}],["precisamos",{"_index":125,"title":{},"body":{"controllers/AccountController.html":{}}}],["precision",{"_index":188,"title":{},"body":{"entities/AccountEntity.html":{}}}],["prefix",{"_index":46,"title":{},"body":{"controllers/AccountController.html":{},"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["previous",{"_index":424,"title":{},"body":{"injectables/AccountService.html":{},"interfaces/PaginatedResponse.html":{},"injectables/UserService.html":{}}}],["primary",{"_index":713,"title":{},"body":{"classes/CreateTableAccounts1752935606883.html":{},"classes/CreateTableTransaction1752935614586.html":{},"classes/CreateTableUsers1752935590369.html":{}}}],["primarygeneratedcolumn",{"_index":218,"title":{},"body":{"entities/AccountEntity.html":{},"entities/TransactionEntity.html":{},"entities/UserEntity.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":195,"title":{},"body":{"entities/AccountEntity.html":{},"entities/TransactionEntity.html":{},"entities/UserEntity.html":{}}}],["private",{"_index":269,"title":{},"body":{"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/TransactionProcessor.html":{},"injectables/TransactionsRepository.html":{},"injectables/UserRepository.html":{}}}],["process",{"_index":476,"title":{},"body":{"injectables/AccountService.html":{},"classes/DepositProcessor.html":{},"classes/TransactionProcessor.html":{}}}],["process('deposit",{"_index":801,"title":{},"body":{"classes/DepositProcessor.html":{}}}],["process('transacion",{"_index":864,"title":{},"body":{"classes/TransactionProcessor.html":{}}}],["process(job",{"_index":800,"title":{},"body":{"classes/DepositProcessor.html":{},"classes/TransactionProcessor.html":{}}}],["process.env.db_host",{"_index":1494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_name",{"_index":1493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_password",{"_index":1492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_user",{"_index":1491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["processando",{"_index":887,"title":{},"body":{"classes/TransactionProcessor.html":{}}}],["processar",{"_index":138,"title":{},"body":{"controllers/AccountController.html":{}}}],["processed",{"_index":473,"title":{},"body":{"injectables/AccountService.html":{}}}],["processor",{"_index":491,"title":{},"body":{"injectables/AccountService.html":{},"classes/DepositProcessor.html":{},"classes/InvestimentProcessor.html":{},"classes/TransactionProcessor.html":{}}}],["processor('deposit",{"_index":803,"title":{},"body":{"classes/DepositProcessor.html":{}}}],["processor('investiment",{"_index":811,"title":{},"body":{"classes/InvestimentProcessor.html":{}}}],["processor('transaction",{"_index":908,"title":{},"body":{"classes/TransactionProcessor.html":{}}}],["processors/depoist.processor",{"_index":259,"title":{},"body":{"modules/AccountModule.html":{}}}],["processors/transaction.processor",{"_index":261,"title":{},"body":{"modules/AccountModule.html":{}}}],["production",{"_index":1377,"title":{},"body":{"index.html":{}}}],["progres",{"_index":497,"title":{},"body":{"injectables/AccountService.html":{}}}],["progressive",{"_index":1354,"title":{},"body":{"index.html":{}}}],["project",{"_index":1366,"title":{},"body":{"index.html":{}}}],["promise",{"_index":285,"title":{},"body":{"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"injectables/AuthService.html":{},"classes/CreateTableAccounts1752935606883.html":{},"classes/CreateTableTransaction1752935614586.html":{},"classes/CreateTableUsers1752935590369.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["promise.all",{"_index":484,"title":{},"body":{"injectables/AccountService.html":{}}}],["properties",{"_index":11,"title":{"properties.html":{}},"body":{"classes/Account.html":{},"entities/AccountEntity.html":{},"injectables/AccountRepository.html":{},"classes/CreateAccountDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/DepositDto.html":{},"interfaces/PaginatedResponse.html":{},"classes/ResponseUserDto.html":{},"classes/SignInDto.html":{},"interfaces/SignedUser.html":{},"classes/TransactionDto.html":{},"entities/TransactionEntity.html":{},"classes/User.html":{},"entities/UserEntity.html":{},"injectables/UserRepository.html":{},"properties.html":{}}}],["provide",{"_index":1500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":416,"title":{},"body":{"injectables/AccountService.html":{}}}],["providers",{"_index":235,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["public",{"_index":702,"title":{},"body":{"classes/CreateTableAccounts1752935606883.html":{},"classes/CreateTableTransaction1752935614586.html":{},"classes/CreateTableUsers1752935590369.html":{}}}],["qual",{"_index":128,"title":{},"body":{"controllers/AccountController.html":{}}}],["quantity",{"_index":1351,"title":{},"body":{"miscellaneous/functions.html":{}}}],["quanto",{"_index":508,"title":{},"body":{"injectables/AccountService.html":{}}}],["que",{"_index":354,"title":{},"body":{"injectables/AccountRepository.html":{},"injectables/AuthMiddleware.html":{},"classes/TransactionProcessor.html":{}}}],["queira",{"_index":1167,"title":{},"body":{"injectables/UserService.html":{}}}],["query",{"_index":100,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"classes/TransactionProcessor.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{}}}],["query('limit",{"_index":120,"title":{},"body":{"controllers/AccountController.html":{},"controllers/UserController.html":{}}}],["query('offset",{"_index":119,"title":{},"body":{"controllers/AccountController.html":{}}}],["queryrunner",{"_index":706,"title":{},"body":{"classes/CreateTableAccounts1752935606883.html":{},"classes/CreateTableTransaction1752935614586.html":{},"classes/CreateTableUsers1752935590369.html":{}}}],["queryrunner.query",{"_index":710,"title":{},"body":{"classes/CreateTableAccounts1752935606883.html":{},"classes/CreateTableTransaction1752935614586.html":{},"classes/CreateTableUsers1752935590369.html":{}}}],["queryrunner.query(`create",{"_index":742,"title":{},"body":{"classes/CreateTableUsers1752935590369.html":{}}}],["queryrunner.query(`drop",{"_index":723,"title":{},"body":{"classes/CreateTableAccounts1752935606883.html":{},"classes/CreateTableTransaction1752935614586.html":{},"classes/CreateTableUsers1752935590369.html":{}}}],["ques",{"_index":1203,"title":{},"body":{"injectables/UserService.html":{}}}],["questions",{"_index":1427,"title":{},"body":{"index.html":{}}}],["queue",{"_index":265,"title":{},"body":{"modules/AccountModule.html":{},"injectables/AccountService.html":{},"classes/DepositProcessor.html":{},"classes/TransactionProcessor.html":{}}}],["read",{"_index":1465,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":112,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/DepositProcessor.html":{},"classes/TransactionProcessor.html":{},"injectables/TransactionsRepository.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{}}}],["ready",{"_index":1386,"title":{},"body":{"index.html":{}}}],["real",{"_index":1440,"title":{},"body":{"index.html":{}}}],["realmente",{"_index":527,"title":{},"body":{"injectables/AccountService.html":{}}}],["reason.enum",{"_index":768,"title":{},"body":{"classes/CreateTransactionDto.html":{},"entities/TransactionEntity.html":{},"classes/TransactionProcessor.html":{}}}],["reason.enum.ts",{"_index":1312,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["recebe",{"_index":499,"title":{},"body":{"injectables/AccountService.html":{}}}],["recebendo",{"_index":907,"title":{},"body":{"classes/TransactionProcessor.html":{}}}],["recurso",{"_index":643,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["recém",{"_index":329,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["redis",{"_index":567,"title":{},"body":{"modules/AppModule.html":{}}}],["referencedcolumnname",{"_index":840,"title":{},"body":{"entities/TransactionEntity.html":{}}}],["references",{"_index":719,"title":{},"body":{"classes/CreateTableAccounts1752935606883.html":{},"classes/CreateTableTransaction1752935614586.html":{}}}],["reflect",{"_index":1302,"title":{},"body":{"dependencies.html":{}}}],["registeruser",{"_index":1102,"title":{},"body":{"injectables/UserRepository.html":{}}}],["registeruser(user",{"_index":1119,"title":{},"body":{"injectables/UserRepository.html":{}}}],["registramos",{"_index":883,"title":{},"body":{"classes/TransactionProcessor.html":{}}}],["regra",{"_index":1020,"title":{},"body":{"classes/User.html":{}}}],["relations",{"_index":943,"title":{},"body":{"injectables/TransactionsRepository.html":{},"injectables/UserRepository.html":{}}}],["remove",{"_index":1027,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["remove(@param('id",{"_index":1073,"title":{},"body":{"controllers/UserController.html":{}}}],["remove(id",{"_index":1050,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["removeoncomplete",{"_index":492,"title":{},"body":{"injectables/AccountService.html":{}}}],["removeonfail",{"_index":493,"title":{},"body":{"injectables/AccountService.html":{}}}],["rendendo",{"_index":154,"title":{},"body":{"controllers/AccountController.html":{}}}],["repositories/account.repository",{"_index":248,"title":{},"body":{"modules/AccountModule.html":{},"injectables/AccountService.html":{},"classes/DepositProcessor.html":{},"classes/TransactionProcessor.html":{}}}],["repositories/transaction.repository",{"_index":253,"title":{},"body":{"modules/AccountModule.html":{},"classes/TransactionProcessor.html":{}}}],["repository",{"_index":279,"title":{},"body":{"injectables/AccountRepository.html":{},"injectables/TransactionsRepository.html":{},"injectables/UserRepository.html":{},"index.html":{}}}],["repository/user.repository",{"_index":1094,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["req",{"_index":586,"title":{},"body":{"injectables/AuthApiKeyMiddleware.html":{},"injectables/AuthMiddleware.html":{},"classes/UtilsService.html":{}}}],["req.headers['authorization",{"_index":1221,"title":{},"body":{"classes/UtilsService.html":{}}}],["request",{"_index":581,"title":{},"body":{"injectables/AuthApiKeyMiddleware.html":{},"injectables/AuthMiddleware.html":{},"injectables/TransformDatePipe.html":{},"classes/UnauthorizedExceptionFilter.html":{},"injectables/UserService.html":{},"classes/UtilsService.html":{}}}],["request.url",{"_index":1004,"title":{},"body":{"classes/UnauthorizedExceptionFilter.html":{}}}],["required",{"_index":459,"title":{},"body":{"injectables/AccountService.html":{}}}],["requiring",{"_index":1408,"title":{},"body":{"index.html":{}}}],["requisição(se",{"_index":631,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["res",{"_index":582,"title":{},"body":{"injectables/AuthApiKeyMiddleware.html":{},"injectables/AuthMiddleware.html":{}}}],["res.status(httpstatus.unauthorized).json",{"_index":619,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["reset",{"_index":245,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["resources",{"_index":1421,"title":{},"body":{"index.html":{}}}],["response",{"_index":583,"title":{},"body":{"injectables/AuthApiKeyMiddleware.html":{},"injectables/AuthMiddleware.html":{},"classes/UnauthorizedExceptionFilter.html":{}}}],["response.status(status).json",{"_index":1000,"title":{},"body":{"classes/UnauthorizedExceptionFilter.html":{}}}],["responseuser",{"_index":1176,"title":{},"body":{"injectables/UserService.html":{}}}],["responseuserdto",{"_index":815,"title":{"classes/ResponseUserDto.html":{}},"body":{"classes/ResponseUserDto.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["responsável",{"_index":164,"title":{},"body":{"controllers/AccountController.html":{}}}],["resto",{"_index":1239,"title":{},"body":{"classes/UtilsService.html":{}}}],["results",{"_index":40,"title":{},"body":{"classes/Account.html":{},"controllers/AccountController.html":{},"entities/AccountEntity.html":{},"modules/AccountModule.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthApiKeyMiddleware.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAccountDto.html":{},"classes/CreateTableAccounts1752935606883.html":{},"classes/CreateTableTransaction1752935614586.html":{},"classes/CreateTableUsers1752935590369.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/DepositDto.html":{},"classes/DepositProcessor.html":{},"classes/InvestimentProcessor.html":{},"interfaces/PaginatedResponse.html":{},"classes/ResponseUserDto.html":{},"classes/SignInDto.html":{},"interfaces/SignedUser.html":{},"classes/TransactionDto.html":{},"entities/TransactionEntity.html":{},"classes/TransactionProcessor.html":{},"injectables/TransactionsRepository.html":{},"injectables/TransformDatePipe.html":{},"classes/UnauthorizedExceptionError.html":{},"classes/UnauthorizedExceptionFilter.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"classes/UtilsService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retirar",{"_index":524,"title":{},"body":{"injectables/AccountService.html":{}}}],["retornamos",{"_index":525,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthMiddleware.html":{}}}],["return",{"_index":121,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/DepositProcessor.html":{},"classes/TransactionProcessor.html":{},"injectables/TransactionsRepository.html":{},"injectables/TransformDatePipe.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"classes/UtilsService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":67,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthApiKeyMiddleware.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/CreateTableAccounts1752935606883.html":{},"classes/CreateTableTransaction1752935614586.html":{},"classes/CreateTableUsers1752935590369.html":{},"classes/DepositProcessor.html":{},"classes/TransactionProcessor.html":{},"injectables/TransactionsRepository.html":{},"injectables/TransformDatePipe.html":{},"classes/UnauthorizedExceptionFilter.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"classes/UtilsService.html":{},"miscellaneous/functions.html":{}}}],["roles",{"_index":1265,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["rota",{"_index":640,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["run",{"_index":1371,"title":{},"body":{"index.html":{}}}],["runs",{"_index":1393,"title":{},"body":{"index.html":{}}}],["runseed",{"_index":1277,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["rxjs",{"_index":1304,"title":{},"body":{"dependencies.html":{}}}],["s@]+@[^\\s@]+\\.[^\\s",{"_index":1236,"title":{},"body":{"classes/UtilsService.html":{}}}],["saber",{"_index":126,"title":{},"body":{"controllers/AccountController.html":{}}}],["sacar",{"_index":521,"title":{},"body":{"injectables/AccountService.html":{}}}],["salva",{"_index":512,"title":{},"body":{"injectables/AccountService.html":{}}}],["salário",{"_index":338,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["same",{"_index":446,"title":{},"body":{"injectables/AccountService.html":{}}}],["saques",{"_index":347,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["savings_account",{"_index":1324,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["scalable",{"_index":1359,"title":{},"body":{"index.html":{}}}],["scale",{"_index":190,"title":{},"body":{"entities/AccountEntity.html":{}}}],["se",{"_index":466,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/TransactionProcessor.html":{}}}],["secret",{"_index":628,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["see",{"_index":429,"title":{},"body":{"injectables/AccountService.html":{},"controllers/UserController.html":{}}}],["select",{"_index":313,"title":{},"body":{"injectables/AccountRepository.html":{},"injectables/TransactionsRepository.html":{},"injectables/UserRepository.html":{}}}],["sending",{"_index":871,"title":{},"body":{"classes/TransactionProcessor.html":{}}}],["sent",{"_index":1194,"title":{},"body":{"injectables/UserService.html":{}}}],["ser",{"_index":163,"title":{},"body":{"controllers/AccountController.html":{},"classes/TransactionProcessor.html":{}}}],["serial",{"_index":1199,"title":{},"body":{"injectables/UserService.html":{}}}],["serie",{"_index":460,"title":{},"body":{"injectables/AccountService.html":{}}}],["server",{"_index":1360,"title":{},"body":{"index.html":{}}}],["serviceaccount",{"_index":113,"title":{},"body":{"controllers/AccountController.html":{}}}],["set",{"_index":370,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["set(transaction",{"_index":946,"title":{},"body":{"injectables/TransactionsRepository.html":{}}}],["set(user",{"_index":1142,"title":{},"body":{"injectables/UserRepository.html":{}}}],["setmetadata('is",{"_index":1505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata('roles",{"_index":1506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setup",{"_index":1367,"title":{},"body":{"index.html":{}}}],["side",{"_index":1361,"title":{},"body":{"index.html":{}}}],["signeduser",{"_index":660,"title":{"interfaces/SignedUser.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/SignedUser.html":{},"coverage.html":{}}}],["signin",{"_index":593,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signin(@body",{"_index":603,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin(authdto",{"_index":594,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin(signindto",{"_index":657,"title":{},"body":{"injectables/AuthService.html":{}}}],["signindto",{"_index":595,"title":{"classes/SignInDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/SignInDto.html":{},"coverage.html":{}}}],["signout",{"_index":605,"title":{},"body":{"controllers/AuthController.html":{}}}],["simple",{"_index":1410,"title":{},"body":{"index.html":{}}}],["soma",{"_index":1238,"title":{},"body":{"classes/UtilsService.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/Account.html":{},"controllers/AccountController.html":{},"entities/AccountEntity.html":{},"modules/AccountModule.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthApiKeyMiddleware.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAccountDto.html":{},"classes/CreateTableAccounts1752935606883.html":{},"classes/CreateTableTransaction1752935614586.html":{},"classes/CreateTableUsers1752935590369.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/DepositDto.html":{},"classes/DepositProcessor.html":{},"classes/InvestimentProcessor.html":{},"interfaces/PaginatedResponse.html":{},"classes/ResponseUserDto.html":{},"classes/SignInDto.html":{},"interfaces/SignedUser.html":{},"classes/TransactionDto.html":{},"entities/TransactionEntity.html":{},"classes/TransactionProcessor.html":{},"injectables/TransactionsRepository.html":{},"injectables/TransformDatePipe.html":{},"classes/UnauthorizedExceptionError.html":{},"classes/UnauthorizedExceptionFilter.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"classes/UtilsService.html":{},"index.html":{}}}],["sponsors",{"_index":1461,"title":{},"body":{"index.html":{}}}],["sques",{"_index":353,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["src/.../account.factory.ts",{"_index":1345,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../accountstatus.enum.ts",{"_index":1309,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../accounttype.enum.ts",{"_index":1310,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../datasource.provider.ts",{"_index":1486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../datasource.ts",{"_index":1485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../failure",{"_index":1311,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../is",{"_index":1487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.seed.ts",{"_index":1348,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1346,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../roles.decorator.ts",{"_index":1488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../transaction",{"_index":1313,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../user.factory.ts",{"_index":1347,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../userrole.enum.ts",{"_index":1316,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.controller.ts",{"_index":538,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":540,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":551,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":571,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":572,"title":{},"body":{"injectables/AppService.html":{}}}],["src/business",{"_index":6,"title":{},"body":{"classes/Account.html":{},"controllers/AccountController.html":{},"modules/AccountModule.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAccountDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/DepositDto.html":{},"classes/DepositProcessor.html":{},"classes/InvestimentProcessor.html":{},"classes/ResponseUserDto.html":{},"classes/SignInDto.html":{},"interfaces/SignedUser.html":{},"classes/TransactionDto.html":{},"classes/TransactionProcessor.html":{},"injectables/TransactionsRepository.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/commons/decorators/is",{"_index":1255,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/commons/decorators/roles/roles.decorator.ts",{"_index":1264,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/commons/exception",{"_index":976,"title":{},"body":{"classes/UnauthorizedExceptionError.html":{},"classes/UnauthorizedExceptionFilter.html":{},"coverage.html":{}}}],["src/commons/interfaces/paginatedresponse",{"_index":405,"title":{},"body":{"injectables/AccountService.html":{},"injectables/UserService.html":{}}}],["src/commons/interfaces/paginatedresponse.ts",{"_index":814,"title":{},"body":{"interfaces/PaginatedResponse.html":{},"coverage.html":{}}}],["src/commons/middlewares/auth",{"_index":576,"title":{},"body":{"injectables/AuthApiKeyMiddleware.html":{},"coverage.html":{}}}],["src/commons/pipes/transform",{"_index":950,"title":{},"body":{"injectables/TransformDatePipe.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["src/commons/utils/util.service",{"_index":616,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["src/commons/utils/util.service.ts",{"_index":1205,"title":{},"body":{"classes/UtilsService.html":{},"coverage.html":{}}}],["src/commons/utils/util.service.ts:20",{"_index":1219,"title":{},"body":{"classes/UtilsService.html":{}}}],["src/commons/utils/util.service.ts:30",{"_index":1217,"title":{},"body":{"classes/UtilsService.html":{}}}],["src/commons/utils/util.service.ts:38",{"_index":1214,"title":{},"body":{"classes/UtilsService.html":{}}}],["src/commons/utils/util.service.ts:4",{"_index":1212,"title":{},"body":{"classes/UtilsService.html":{}}}],["src/database/connection/datasource.provider.ts",{"_index":1267,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/database/connection/datasource.ts",{"_index":1268,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/database/database.module.ts",{"_index":789,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/database/entities/account.entity",{"_index":36,"title":{},"body":{"classes/Account.html":{},"modules/AccountModule.html":{},"classes/User.html":{},"modules/UserModule.html":{}}}],["src/database/entities/account.entity.ts",{"_index":174,"title":{},"body":{"entities/AccountEntity.html":{},"coverage.html":{}}}],["src/database/entities/account.entity.ts:19",{"_index":196,"title":{},"body":{"entities/AccountEntity.html":{}}}],["src/database/entities/account.entity.ts:27",{"_index":194,"title":{},"body":{"entities/AccountEntity.html":{}}}],["src/database/entities/account.entity.ts:33",{"_index":183,"title":{},"body":{"entities/AccountEntity.html":{}}}],["src/database/entities/account.entity.ts:39",{"_index":204,"title":{},"body":{"entities/AccountEntity.html":{}}}],["src/database/entities/account.entity.ts:45",{"_index":207,"title":{},"body":{"entities/AccountEntity.html":{}}}],["src/database/entities/account.entity.ts:50",{"_index":186,"title":{},"body":{"entities/AccountEntity.html":{}}}],["src/database/entities/account.entity.ts:55",{"_index":209,"title":{},"body":{"entities/AccountEntity.html":{}}}],["src/database/entities/account.entity.ts:61",{"_index":212,"title":{},"body":{"entities/AccountEntity.html":{}}}],["src/database/entities/account.entity.ts:64",{"_index":206,"title":{},"body":{"entities/AccountEntity.html":{}}}],["src/database/entities/account.entity.ts:67",{"_index":201,"title":{},"body":{"entities/AccountEntity.html":{}}}],["src/database/entities/transaction.entity",{"_index":251,"title":{},"body":{"modules/AccountModule.html":{},"injectables/TransactionsRepository.html":{},"modules/UserModule.html":{}}}],["src/database/entities/transaction.entity.ts",{"_index":836,"title":{},"body":{"entities/TransactionEntity.html":{},"coverage.html":{}}}],["src/database/entities/transaction.entity.ts:17",{"_index":852,"title":{},"body":{"entities/TransactionEntity.html":{}}}],["src/database/entities/transaction.entity.ts:20",{"_index":851,"title":{},"body":{"entities/TransactionEntity.html":{}}}],["src/database/entities/transaction.entity.ts:23",{"_index":854,"title":{},"body":{"entities/TransactionEntity.html":{}}}],["src/database/entities/transaction.entity.ts:28",{"_index":845,"title":{},"body":{"entities/TransactionEntity.html":{}}}],["src/database/entities/transaction.entity.ts:34",{"_index":853,"title":{},"body":{"entities/TransactionEntity.html":{}}}],["src/database/entities/transaction.entity.ts:41",{"_index":849,"title":{},"body":{"entities/TransactionEntity.html":{}}}],["src/database/entities/transaction.entity.ts:46",{"_index":846,"title":{},"body":{"entities/TransactionEntity.html":{}}}],["src/database/entities/transaction.entity.ts:52",{"_index":850,"title":{},"body":{"entities/TransactionEntity.html":{}}}],["src/database/entities/transaction.entity.ts:56",{"_index":841,"title":{},"body":{"entities/TransactionEntity.html":{}}}],["src/database/entities/transaction.entity.ts:60",{"_index":843,"title":{},"body":{"entities/TransactionEntity.html":{}}}],["src/database/entities/user.entity",{"_index":37,"title":{},"body":{"classes/Account.html":{},"modules/AccountModule.html":{},"classes/User.html":{},"modules/UserModule.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{}}}],["src/database/entities/user.entity.ts",{"_index":1075,"title":{},"body":{"entities/UserEntity.html":{},"coverage.html":{}}}],["src/database/entities/user.entity.ts:13",{"_index":1084,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/database/entities/user.entity.ts:18",{"_index":1085,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/database/entities/user.entity.ts:24",{"_index":1083,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/database/entities/user.entity.ts:31",{"_index":1081,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/database/entities/user.entity.ts:36",{"_index":1086,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/database/entities/user.entity.ts:41",{"_index":1079,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/database/entities/user.entity.ts:46",{"_index":1082,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/database/entities/user.entity.ts:51",{"_index":1087,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/database/entities/user.entity.ts:54",{"_index":1078,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/database/enums/failure",{"_index":767,"title":{},"body":{"classes/CreateTransactionDto.html":{},"classes/TransactionProcessor.html":{},"miscellaneous/enumerations.html":{}}}],["src/database/enums/transaction",{"_index":769,"title":{},"body":{"classes/CreateTransactionDto.html":{},"classes/TransactionProcessor.html":{},"miscellaneous/enumerations.html":{}}}],["src/database/migrations/1752935590369",{"_index":738,"title":{},"body":{"classes/CreateTableUsers1752935590369.html":{},"coverage.html":{}}}],["src/database/migrations/1752935606883",{"_index":698,"title":{},"body":{"classes/CreateTableAccounts1752935606883.html":{},"coverage.html":{}}}],["src/database/migrations/1752935614586",{"_index":725,"title":{},"body":{"classes/CreateTableTransaction1752935614586.html":{},"coverage.html":{}}}],["src/database/seeds/factories/account.factory.ts",{"_index":1270,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/database/seeds/factories/user.factory.ts",{"_index":1273,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/database/seeds/main.seed.ts",{"_index":1276,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":1278,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":1373,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1376,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":1378,"title":{},"body":{"index.html":{}}}],["started",{"_index":1353,"title":{"index.html":{}},"body":{}}],["starter",{"_index":1365,"title":{},"body":{"index.html":{}}}],["statement",{"_index":115,"title":{},"body":{"controllers/AccountController.html":{}}}],["statement'})@get('/:account_number/:user_id",{"_index":81,"title":{},"body":{"controllers/AccountController.html":{}}}],["statements",{"_index":1243,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1206,"title":{},"body":{"classes/UtilsService.html":{}}}],["status",{"_index":176,"title":{},"body":{"entities/AccountEntity.html":{},"injectables/AuthMiddleware.html":{},"classes/CreateTableAccounts1752935606883.html":{},"classes/CreateTableTransaction1752935614586.html":{},"classes/CreateTransactionDto.html":{},"entities/TransactionEntity.html":{},"classes/TransactionProcessor.html":{},"classes/UnauthorizedExceptionFilter.html":{}}}],["status.enum",{"_index":770,"title":{},"body":{"classes/CreateTransactionDto.html":{},"entities/TransactionEntity.html":{},"classes/TransactionProcessor.html":{}}}],["status.enum.ts",{"_index":1314,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["statuscode",{"_index":1001,"title":{},"body":{"classes/UnauthorizedExceptionFilter.html":{}}}],["staus",{"_index":890,"title":{},"body":{"classes/TransactionProcessor.html":{}}}],["stay",{"_index":1447,"title":{},"body":{"index.html":{}}}],["steps",{"_index":1390,"title":{},"body":{"index.html":{}}}],["straightforward",{"_index":1406,"title":{},"body":{"index.html":{}}}],["string",{"_index":24,"title":{},"body":{"classes/Account.html":{},"controllers/AccountController.html":{},"entities/AccountEntity.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateAccountDto.html":{},"classes/CreateUserDto.html":{},"classes/DepositDto.html":{},"classes/ResponseUserDto.html":{},"classes/SignInDto.html":{},"interfaces/SignedUser.html":{},"entities/TransactionEntity.html":{},"injectables/TransactionsRepository.html":{},"injectables/TransformDatePipe.html":{},"classes/UnauthorizedExceptionError.html":{},"classes/User.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"classes/UtilsService.html":{},"miscellaneous/variables.html":{}}}],["string(this.configservice.get('auth_api_key",{"_index":679,"title":{},"body":{"injectables/AuthService.html":{}}}],["succesfuly",{"_index":373,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["success",{"_index":375,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["successfully",{"_index":929,"title":{},"body":{"classes/TransactionProcessor.html":{}}}],["successfuly",{"_index":873,"title":{},"body":{"classes/TransactionProcessor.html":{}}}],["sucesso",{"_index":901,"title":{},"body":{"classes/TransactionProcessor.html":{}}}],["suficiente",{"_index":882,"title":{},"body":{"classes/TransactionProcessor.html":{}}}],["summary",{"_index":114,"title":{},"body":{"controllers/AccountController.html":{},"controllers/UserController.html":{}}}],["super(msg",{"_index":984,"title":{},"body":{"classes/UnauthorizedExceptionError.html":{}}}],["support",{"_index":1343,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{}}}],["svg",{"_index":1477,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":1499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["t",{"_index":199,"title":{},"body":{"entities/AccountEntity.html":{},"injectables/AccountRepository.html":{},"interfaces/PaginatedResponse.html":{}}}],["t.accountfrom",{"_index":205,"title":{},"body":{"entities/AccountEntity.html":{}}}],["t.accountto",{"_index":200,"title":{},"body":{"entities/AccountEntity.html":{}}}],["t.amount",{"_index":314,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["t.finished_at",{"_index":345,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["t.from_account",{"_index":321,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["t.status",{"_index":315,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["t.to_account",{"_index":320,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["table",{"_index":699,"title":{},"body":{"classes/CreateTableAccounts1752935606883.html":{},"classes/CreateTableTransaction1752935614586.html":{},"classes/CreateTableUsers1752935590369.html":{},"coverage.html":{}}}],["tableaccounts",{"_index":270,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1279,"title":{},"body":{"coverage.html":{}}}],["tabletransaction",{"_index":271,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["tags",{"_index":88,"title":{},"body":{"controllers/AccountController.html":{}}}],["take",{"_index":1391,"title":{},"body":{"index.html":{}}}],["tb_accounts",{"_index":302,"title":{},"body":{"injectables/AccountRepository.html":{},"classes/CreateTableAccounts1752935606883.html":{}}}],["tb_accounts(account_number",{"_index":735,"title":{},"body":{"classes/CreateTableTransaction1752935614586.html":{}}}],["tb_transaction",{"_index":304,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["tb_transactions",{"_index":729,"title":{},"body":{"classes/CreateTableTransaction1752935614586.html":{}}}],["tb_users",{"_index":745,"title":{},"body":{"classes/CreateTableUsers1752935590369.html":{},"injectables/UserRepository.html":{}}}],["tb_users(id",{"_index":720,"title":{},"body":{"classes/CreateTableAccounts1752935606883.html":{}}}],["tell",{"_index":872,"title":{},"body":{"classes/TransactionProcessor.html":{}}}],["tem",{"_index":503,"title":{},"body":{"injectables/AccountService.html":{},"classes/TransactionProcessor.html":{}}}],["tenha",{"_index":645,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["tentou",{"_index":638,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["ter",{"_index":880,"title":{},"body":{"classes/TransactionProcessor.html":{}}}],["test",{"_index":1381,"title":{},"body":{"index.html":{}}}],["test:covdeployment",{"_index":1384,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1383,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1379,"title":{},"body":{"index.html":{}}}],["teve",{"_index":877,"title":{},"body":{"classes/TransactionProcessor.html":{}}}],["thanks",{"_index":1460,"title":{},"body":{"index.html":{}}}],["this.accountdatasource.delete(accountid",{"_index":367,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["this.accountdatasource.findone",{"_index":377,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["this.accountdatasource.query(query",{"_index":360,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["this.accountdatasource.save",{"_index":365,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["this.accountdatasource.update(accountid",{"_index":366,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["this.accountrepository.countaccountstatement(account_number",{"_index":420,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.accountrepository.createaccount",{"_index":456,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.accountrepository.deleteaccount(accountexists.id",{"_index":469,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.accountrepository.deposit",{"_index":806,"title":{},"body":{"classes/DepositProcessor.html":{},"classes/TransactionProcessor.html":{}}}],["this.accountrepository.findallaccountstatementpaginated",{"_index":418,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.accountrepository.findbyaccountnumber(account_number",{"_index":433,"title":{},"body":{"injectables/AccountService.html":{},"classes/DepositProcessor.html":{}}}],["this.accountrepository.findbyaccountnumber(from_account",{"_index":485,"title":{},"body":{"injectables/AccountService.html":{},"classes/TransactionProcessor.html":{}}}],["this.accountrepository.findbyaccountnumber(to_account",{"_index":486,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.accountrepository.withdrawmoney",{"_index":532,"title":{},"body":{"injectables/AccountService.html":{},"classes/TransactionProcessor.html":{}}}],["this.appservice.gethello",{"_index":543,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.signin(authdto",{"_index":604,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.depositqueue.add('deposit",{"_index":519,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.findone(id",{"_index":1192,"title":{},"body":{"injectables/UserService.html":{}}}],["this.generaterandomvalue",{"_index":455,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.jwtservice.signasync(payload",{"_index":681,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verifyasync(token",{"_index":627,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["this.serviceaccount.createaccount(user_cpf",{"_index":145,"title":{},"body":{"controllers/AccountController.html":{}}}],["this.serviceaccount.deposit(usercpf",{"_index":147,"title":{},"body":{"controllers/AccountController.html":{}}}],["this.serviceaccount.findallaccountsatement",{"_index":123,"title":{},"body":{"controllers/AccountController.html":{}}}],["this.serviceaccount.transaction(transactiondto",{"_index":142,"title":{},"body":{"controllers/AccountController.html":{}}}],["this.serviceaccount.withdraw",{"_index":150,"title":{},"body":{"controllers/AccountController.html":{}}}],["this.tableaccounts",{"_index":340,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["this.tabletransaction",{"_index":344,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["this.tb_users",{"_index":1130,"title":{},"body":{"injectables/UserRepository.html":{}}}],["this.transactiondatasource",{"_index":944,"title":{},"body":{"injectables/TransactionsRepository.html":{}}}],["this.transactiondatasource.create(transaction",{"_index":939,"title":{},"body":{"injectables/TransactionsRepository.html":{}}}],["this.transactiondatasource.findone",{"_index":941,"title":{},"body":{"injectables/TransactionsRepository.html":{}}}],["this.transactiondatasource.save(data",{"_index":940,"title":{},"body":{"injectables/TransactionsRepository.html":{}}}],["this.transactionqueue.add",{"_index":489,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.transactionrepository.transaction",{"_index":910,"title":{},"body":{"classes/TransactionProcessor.html":{}}}],["this.transactionrepository.updatetransactionfield",{"_index":915,"title":{},"body":{"classes/TransactionProcessor.html":{}}}],["this.userdatasource",{"_index":1140,"title":{},"body":{"injectables/UserRepository.html":{}}}],["this.userdatasource.findone",{"_index":1135,"title":{},"body":{"injectables/UserRepository.html":{}}}],["this.userdatasource.query(query",{"_index":1131,"title":{},"body":{"injectables/UserRepository.html":{}}}],["this.userdatasource.save(user",{"_index":1139,"title":{},"body":{"injectables/UserRepository.html":{}}}],["this.userrepository.countusers",{"_index":1175,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.deleteuser(id",{"_index":1204,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.findallpaginated",{"_index":1174,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.findbycpf(cpf",{"_index":1161,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.findone(id",{"_index":1188,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.finduserbyemail(email",{"_index":1191,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.registeruser(createuserdto",{"_index":1173,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.updateuser",{"_index":1196,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.create(createuserdto",{"_index":1063,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findall",{"_index":1065,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findbycpf(user_cpf",{"_index":441,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.userservice.findbycpf(usercpf",{"_index":515,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.userservice.findbyemail(email",{"_index":670,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.findone(id",{"_index":1068,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findone(user_id",{"_index":529,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.userservice.remove(id",{"_index":1074,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.update(id",{"_index":1071,"title":{},"body":{"controllers/UserController.html":{}}}],["through",{"_index":450,"title":{},"body":{"injectables/AccountService.html":{}}}],["throw",{"_index":410,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthService.html":{},"classes/TransactionProcessor.html":{},"injectables/TransformDatePipe.html":{},"injectables/UserService.html":{}}}],["till",{"_index":478,"title":{},"body":{"injectables/AccountService.html":{}}}],["time",{"_index":1441,"title":{},"body":{"index.html":{}}}],["timeout",{"_index":1337,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["timestamp",{"_index":185,"title":{},"body":{"entities/AccountEntity.html":{},"injectables/AccountService.html":{},"injectables/AuthMiddleware.html":{},"classes/CreateTableAccounts1752935606883.html":{},"classes/CreateTableTransaction1752935614586.html":{},"classes/CreateTableUsers1752935590369.html":{},"entities/TransactionEntity.html":{},"classes/UnauthorizedExceptionFilter.html":{},"entities/UserEntity.html":{}}}],["tiramos",{"_index":902,"title":{},"body":{"classes/TransactionProcessor.html":{}}}],["tirar",{"_index":922,"title":{},"body":{"classes/TransactionProcessor.html":{}}}],["tivermos",{"_index":900,"title":{},"body":{"classes/TransactionProcessor.html":{}}}],["to_account",{"_index":481,"title":{},"body":{"injectables/AccountService.html":{},"classes/CreateTableTransaction1752935614586.html":{},"classes/CreateTransactionDto.html":{},"classes/TransactionDto.html":{},"entities/TransactionEntity.html":{},"classes/TransactionProcessor.html":{}}}],["to_account_number_fk",{"_index":736,"title":{},"body":{"classes/CreateTableTransaction1752935614586.html":{}}}],["to_char(\"birth_date",{"_index":1127,"title":{},"body":{"injectables/UserRepository.html":{}}}],["to_char(\"created_at",{"_index":1128,"title":{},"body":{"injectables/UserRepository.html":{}}}],["to_char(\"updated_at",{"_index":1129,"title":{},"body":{"injectables/UserRepository.html":{}}}],["to_char(t.done_at",{"_index":316,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["to_char(t.finished_at",{"_index":319,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["todas",{"_index":352,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["todo",{"_index":1163,"title":{},"body":{"injectables/UserService.html":{}}}],["token",{"_index":617,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/UtilsService.html":{}}}],["totalpages",{"_index":425,"title":{},"body":{"injectables/AccountService.html":{},"interfaces/PaginatedResponse.html":{},"injectables/UserService.html":{}}}],["touch",{"_index":1467,"title":{},"body":{"index.html":{}}}],["transacion",{"_index":490,"title":{},"body":{"injectables/AccountService.html":{}}}],["transaction",{"_index":53,"title":{},"body":{"controllers/AccountController.html":{},"modules/AccountModule.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"classes/TransactionProcessor.html":{},"injectables/TransactionsRepository.html":{}}}],["transaction(@body",{"_index":141,"title":{},"body":{"controllers/AccountController.html":{}}}],["transaction(transaction",{"_index":934,"title":{},"body":{"injectables/TransactionsRepository.html":{}}}],["transaction(transactiondto",{"_index":83,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{}}}],["transaction.accountfrom.user.id",{"_index":926,"title":{},"body":{"classes/TransactionProcessor.html":{}}}],["transaction.accountto.user.id",{"_index":928,"title":{},"body":{"classes/TransactionProcessor.html":{}}}],["transaction.dto.ts",{"_index":754,"title":{},"body":{"classes/CreateTransactionDto.html":{},"coverage.html":{}}}],["transaction.dto.ts:17",{"_index":760,"title":{},"body":{"classes/CreateTransactionDto.html":{}}}],["transaction.dto.ts:23",{"_index":764,"title":{},"body":{"classes/CreateTransactionDto.html":{}}}],["transaction.dto.ts:29",{"_index":756,"title":{},"body":{"classes/CreateTransactionDto.html":{}}}],["transaction.dto.ts:34",{"_index":763,"title":{},"body":{"classes/CreateTransactionDto.html":{}}}],["transaction.dto.ts:39",{"_index":759,"title":{},"body":{"classes/CreateTransactionDto.html":{}}}],["transaction.entity",{"_index":222,"title":{},"body":{"entities/AccountEntity.html":{}}}],["transaction.id",{"_index":916,"title":{},"body":{"classes/TransactionProcessor.html":{}}}],["transaction.ts",{"_index":726,"title":{},"body":{"classes/CreateTableTransaction1752935614586.html":{},"coverage.html":{}}}],["transaction.ts:21",{"_index":727,"title":{},"body":{"classes/CreateTableTransaction1752935614586.html":{}}}],["transaction.ts:4",{"_index":728,"title":{},"body":{"classes/CreateTableTransaction1752935614586.html":{}}}],["transactiondatasource",{"_index":280,"title":{},"body":{"injectables/AccountRepository.html":{},"injectables/TransactionsRepository.html":{}}}],["transactiondto",{"_index":84,"title":{"classes/TransactionDto.html":{}},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{},"classes/TransactionDto.html":{},"classes/TransactionProcessor.html":{},"coverage.html":{}}}],["transactionentity",{"_index":197,"title":{"entities/TransactionEntity.html":{}},"body":{"entities/AccountEntity.html":{},"modules/AccountModule.html":{},"injectables/AccountRepository.html":{},"entities/TransactionEntity.html":{},"injectables/TransactionsRepository.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["transactionprocessor",{"_index":260,"title":{"classes/TransactionProcessor.html":{}},"body":{"modules/AccountModule.html":{},"classes/TransactionProcessor.html":{},"coverage.html":{}}}],["transactionqueue",{"_index":385,"title":{},"body":{"injectables/AccountService.html":{}}}],["transactionrepository",{"_index":862,"title":{},"body":{"classes/TransactionProcessor.html":{}}}],["transactions",{"_index":124,"title":{},"body":{"controllers/AccountController.html":{},"injectables/UserRepository.html":{}}}],["transactionsrepository",{"_index":240,"title":{"injectables/TransactionsRepository.html":{}},"body":{"modules/AccountModule.html":{},"classes/TransactionProcessor.html":{},"injectables/TransactionsRepository.html":{},"coverage.html":{},"overview.html":{}}}],["transactionstatus",{"_index":761,"title":{},"body":{"classes/CreateTransactionDto.html":{},"entities/TransactionEntity.html":{},"classes/TransactionProcessor.html":{},"miscellaneous/enumerations.html":{}}}],["transactionstatus.pending",{"_index":911,"title":{},"body":{"classes/TransactionProcessor.html":{}}}],["transação",{"_index":876,"title":{},"body":{"classes/TransactionProcessor.html":{}}}],["transferences",{"_index":177,"title":{},"body":{"entities/AccountEntity.html":{}}}],["transferencias",{"_index":346,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["transform",{"_index":953,"title":{},"body":{"injectables/TransformDatePipe.html":{}}}],["transform(value",{"_index":954,"title":{},"body":{"injectables/TransformDatePipe.html":{}}}],["transformdatepipe",{"_index":949,"title":{"injectables/TransformDatePipe.html":{}},"body":{"injectables/TransformDatePipe.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["transformer",{"_index":1159,"title":{},"body":{"injectables/UserService.html":{},"dependencies.html":{}}}],["true",{"_index":182,"title":{},"body":{"entities/AccountEntity.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"modules/AppModule.html":{},"entities/TransactionEntity.html":{},"injectables/TransactionsRepository.html":{},"entities/UserEntity.html":{},"injectables/UserRepository.html":{}}}],["try",{"_index":311,"title":{},"body":{"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"classes/TransactionProcessor.html":{},"injectables/TransactionsRepository.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{}}}],["twitter",{"_index":1473,"title":{},"body":{"index.html":{}}}],["two",{"_index":87,"title":{},"body":{"controllers/AccountController.html":{}}}],["type",{"_index":16,"title":{},"body":{"classes/Account.html":{},"controllers/AccountController.html":{},"entities/AccountEntity.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"injectables/AuthApiKeyMiddleware.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/CreateAccountDto.html":{},"classes/CreateTableAccounts1752935606883.html":{},"classes/CreateTableTransaction1752935614586.html":{},"classes/CreateTableUsers1752935590369.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/DepositDto.html":{},"classes/DepositProcessor.html":{},"interfaces/PaginatedResponse.html":{},"classes/ResponseUserDto.html":{},"classes/SignInDto.html":{},"interfaces/SignedUser.html":{},"classes/TransactionDto.html":{},"entities/TransactionEntity.html":{},"classes/TransactionProcessor.html":{},"injectables/TransactionsRepository.html":{},"injectables/TransformDatePipe.html":{},"classes/UnauthorizedExceptionError.html":{},"classes/UnauthorizedExceptionFilter.html":{},"classes/User.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"classes/UtilsService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":961,"title":{},"body":{"injectables/TransformDatePipe.html":{},"classes/UtilsService.html":{}}}],["typeorm",{"_index":220,"title":{},"body":{"entities/AccountEntity.html":{},"injectables/AccountRepository.html":{},"classes/CreateTableAccounts1752935606883.html":{},"classes/CreateTableTransaction1752935614586.html":{},"classes/CreateTableUsers1752935590369.html":{},"entities/TransactionEntity.html":{},"injectables/TransactionsRepository.html":{},"entities/UserEntity.html":{},"injectables/UserRepository.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":249,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forfeature([userentity",{"_index":263,"title":{},"body":{"modules/AccountModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forroot(datasourceoptions",{"_index":565,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":1289,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":1364,"title":{},"body":{"index.html":{}}}],["um",{"_index":136,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{},"injectables/AuthMiddleware.html":{}}}],["uma",{"_index":155,"title":{},"body":{"controllers/AccountController.html":{},"classes/TransactionProcessor.html":{},"injectables/UserService.html":{}}}],["unauthorized",{"_index":620,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/UnauthorizedExceptionError.html":{},"miscellaneous/enumerations.html":{}}}],["unauthorizedexception",{"_index":659,"title":{},"body":{"injectables/AuthService.html":{}}}],["unauthorizedexception('incorrect",{"_index":675,"title":{},"body":{"injectables/AuthService.html":{}}}],["unauthorizedexception('user",{"_index":671,"title":{},"body":{"injectables/AuthService.html":{}}}],["unauthorizedexceptionerror",{"_index":975,"title":{"classes/UnauthorizedExceptionError.html":{}},"body":{"classes/UnauthorizedExceptionError.html":{},"classes/UnauthorizedExceptionFilter.html":{},"coverage.html":{}}}],["unauthorizedexceptionfilter",{"_index":985,"title":{"classes/UnauthorizedExceptionFilter.html":{}},"body":{"classes/UnauthorizedExceptionFilter.html":{},"coverage.html":{}}}],["undefined",{"_index":443,"title":{},"body":{"injectables/AccountService.html":{},"classes/UtilsService.html":{}}}],["undefined})@post('transaction",{"_index":89,"title":{},"body":{"controllers/AccountController.html":{}}}],["unique",{"_index":181,"title":{},"body":{"entities/AccountEntity.html":{},"classes/CreateTableAccounts1752935606883.html":{},"classes/CreateTableUsers1752935590369.html":{},"entities/UserEntity.html":{},"injectables/UserRepository.html":{}}}],["unit",{"_index":1380,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":68,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"classes/DepositProcessor.html":{},"classes/TransactionProcessor.html":{},"injectables/TransactionsRepository.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{}}}],["up",{"_index":704,"title":{},"body":{"classes/CreateTableAccounts1752935606883.html":{},"classes/CreateTableTransaction1752935614586.html":{},"classes/CreateTableUsers1752935590369.html":{}}}],["up(queryrunner",{"_index":708,"title":{},"body":{"classes/CreateTableAccounts1752935606883.html":{},"classes/CreateTableTransaction1752935614586.html":{},"classes/CreateTableUsers1752935590369.html":{}}}],["update",{"_index":369,"title":{},"body":{"injectables/AccountRepository.html":{},"classes/DepositProcessor.html":{},"classes/TransactionProcessor.html":{},"injectables/TransactionsRepository.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["update(@param('id",{"_index":1070,"title":{},"body":{"controllers/UserController.html":{}}}],["update(id",{"_index":1054,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["update(userentity",{"_index":1141,"title":{},"body":{"injectables/UserRepository.html":{}}}],["update_at",{"_index":17,"title":{},"body":{"classes/Account.html":{}}}],["updateaccount",{"_index":276,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["updateaccount(accountid",{"_index":298,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["updated_at",{"_index":178,"title":{},"body":{"entities/AccountEntity.html":{},"classes/CreateTableAccounts1752935606883.html":{},"classes/CreateTableUsers1752935590369.html":{},"classes/ResponseUserDto.html":{},"classes/User.html":{},"entities/UserEntity.html":{}}}],["updatedatecolumn",{"_index":219,"title":{},"body":{"entities/AccountEntity.html":{},"entities/TransactionEntity.html":{},"entities/UserEntity.html":{}}}],["updatedatecolumn({type",{"_index":208,"title":{},"body":{"entities/AccountEntity.html":{},"entities/TransactionEntity.html":{},"entities/UserEntity.html":{}}}],["updaten",{"_index":869,"title":{},"body":{"classes/TransactionProcessor.html":{}}}],["updateresult",{"_index":1123,"title":{},"body":{"injectables/UserRepository.html":{}}}],["updates",{"_index":1449,"title":{},"body":{"index.html":{}}}],["updatetransactionfield",{"_index":931,"title":{},"body":{"injectables/TransactionsRepository.html":{}}}],["updatetransactionfield(id",{"_index":936,"title":{},"body":{"injectables/TransactionsRepository.html":{}}}],["updateuser",{"_index":1103,"title":{},"body":{"injectables/UserRepository.html":{}}}],["updateuser(user",{"_index":1121,"title":{},"body":{"injectables/UserRepository.html":{}}}],["updateuserdto",{"_index":1005,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["usar",{"_index":642,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["use",{"_index":579,"title":{},"body":{"injectables/AuthApiKeyMiddleware.html":{},"injectables/AuthMiddleware.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{}}}],["use(req",{"_index":580,"title":{},"body":{"injectables/AuthApiKeyMiddleware.html":{},"injectables/AuthMiddleware.html":{}}}],["usefactory",{"_index":1502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":18,"title":{"classes/User.html":{}},"body":{"classes/Account.html":{},"controllers/AccountController.html":{},"entities/AccountEntity.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"injectables/AuthService.html":{},"classes/CreateAccountDto.html":{},"injectables/TransactionsRepository.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user's",{"_index":73,"title":{},"body":{"controllers/AccountController.html":{}}}],["user'})@delete(':id",{"_index":1052,"title":{},"body":{"controllers/UserController.html":{}}}],["user'})@get(':id",{"_index":1048,"title":{},"body":{"controllers/UserController.html":{}}}],["user'})@isoptional",{"_index":688,"title":{},"body":{"classes/CreateAccountDto.html":{}}}],["user'})@patch(':id",{"_index":1055,"title":{},"body":{"controllers/UserController.html":{}}}],["user'})@post",{"_index":1030,"title":{},"body":{"controllers/UserController.html":{}}}],["user'})@post(':user_cpf",{"_index":61,"title":{},"body":{"controllers/AccountController.html":{}}}],["user.accounts",{"_index":227,"title":{},"body":{"entities/AccountEntity.html":{}}}],["user.accounts)@joincolumn({name",{"_index":211,"title":{},"body":{"entities/AccountEntity.html":{}}}],["user.controller",{"_index":1093,"title":{},"body":{"modules/UserModule.html":{}}}],["user.cpf",{"_index":1193,"title":{},"body":{"injectables/UserService.html":{}}}],["user.dto",{"_index":1009,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.dto.ts",{"_index":775,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:13",{"_index":782,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:19",{"_index":780,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:24",{"_index":784,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:29",{"_index":777,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:8",{"_index":783,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.entity",{"_index":221,"title":{},"body":{"entities/AccountEntity.html":{}}}],["user.id",{"_index":518,"title":{},"body":{"injectables/AccountService.html":{},"injectables/UserRepository.html":{}}}],["user.interface",{"_index":662,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.interface.ts",{"_index":831,"title":{},"body":{"interfaces/SignedUser.html":{},"coverage.html":{}}}],["user.name",{"_index":677,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.password",{"_index":674,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.service",{"_index":1057,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user/repository/user.repository",{"_index":254,"title":{},"body":{"modules/AccountModule.html":{}}}],["user/user.service",{"_index":252,"title":{},"body":{"modules/AccountModule.html":{},"injectables/AccountService.html":{},"injectables/AuthService.html":{}}}],["user_cpf",{"_index":66,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{}}}],["user_id",{"_index":19,"title":{},"body":{"classes/Account.html":{},"controllers/AccountController.html":{},"entities/AccountEntity.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"classes/CreateAccountDto.html":{},"classes/CreateTableAccounts1752935606883.html":{},"classes/DepositDto.html":{},"classes/TransactionProcessor.html":{}}}],["user_id_fk",{"_index":717,"title":{},"body":{"classes/CreateTableAccounts1752935606883.html":{}}}],["usercontroller",{"_index":1023,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["usercpf",{"_index":76,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{}}}],["userdatasource",{"_index":1106,"title":{},"body":{"injectables/UserRepository.html":{}}}],["userentity",{"_index":31,"title":{"entities/UserEntity.html":{}},"body":{"classes/Account.html":{},"entities/AccountEntity.html":{},"modules/AccountModule.html":{},"classes/User.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userexists",{"_index":1190,"title":{},"body":{"injectables/UserService.html":{}}}],["userfactory",{"_index":1275,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["userfactory(__namedparameters",{"_index":1350,"title":{},"body":{"miscellaneous/functions.html":{}}}],["userid",{"_index":368,"title":{},"body":{"injectables/AccountRepository.html":{},"classes/DepositProcessor.html":{},"classes/TransactionProcessor.html":{},"injectables/UserRepository.html":{}}}],["useridentifier",{"_index":1116,"title":{},"body":{"injectables/UserRepository.html":{}}}],["usermodule",{"_index":550,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":1490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userrepository",{"_index":242,"title":{"injectables/UserRepository.html":{}},"body":{"modules/AccountModule.html":{},"modules/UserModule.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["userrole",{"_index":1315,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["users",{"_index":1034,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{}}}],["users.ts",{"_index":739,"title":{},"body":{"classes/CreateTableUsers1752935590369.html":{},"coverage.html":{}}}],["users.ts:20",{"_index":740,"title":{},"body":{"classes/CreateTableUsers1752935590369.html":{}}}],["users.ts:4",{"_index":741,"title":{},"body":{"classes/CreateTableUsers1752935590369.html":{}}}],["userservice",{"_index":243,"title":{"injectables/UserService.html":{}},"body":{"modules/AccountModule.html":{},"injectables/AccountService.html":{},"injectables/AuthService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":1442,"title":{},"body":{"index.html":{}}}],["usuario",{"_index":1166,"title":{},"body":{"injectables/UserService.html":{}}}],["usuário",{"_index":170,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{},"injectables/AuthMiddleware.html":{}}}],["utilsservice",{"_index":615,"title":{"classes/UtilsService.html":{}},"body":{"injectables/AuthMiddleware.html":{},"classes/UtilsService.html":{},"coverage.html":{}}}],["utilsservice.extractheadertoken(req",{"_index":618,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["uuid",{"_index":711,"title":{},"body":{"classes/CreateTableAccounts1752935606883.html":{},"classes/CreateTableTransaction1752935614586.html":{},"classes/CreateTableUsers1752935590369.html":{},"injectables/UserRepository.html":{}}}],["uuid_generate_v4",{"_index":712,"title":{},"body":{"classes/CreateTableAccounts1752935606883.html":{},"classes/CreateTableTransaction1752935614586.html":{},"classes/CreateTableUsers1752935590369.html":{}}}],["uuidregex",{"_index":1226,"title":{},"body":{"classes/UtilsService.html":{}}}],["uuidregex.test(id",{"_index":1234,"title":{},"body":{"classes/UtilsService.html":{}}}],["vai",{"_index":130,"title":{},"body":{"controllers/AccountController.html":{}}}],["valid",{"_index":1256,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["validator",{"_index":694,"title":{},"body":{"classes/CreateAccountDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/DepositDto.html":{},"classes/SignInDto.html":{},"classes/TransactionDto.html":{},"dependencies.html":{}}}],["valor",{"_index":168,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{},"classes/TransactionProcessor.html":{}}}],["value",{"_index":72,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountRepository.html":{},"injectables/AccountService.html":{},"classes/DepositDto.html":{},"classes/DepositProcessor.html":{},"classes/TransactionDto.html":{},"classes/TransactionProcessor.html":{},"injectables/TransformDatePipe.html":{},"injectables/UserRepository.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.split('/').map((el",{"_index":962,"title":{},"body":{"injectables/TransformDatePipe.html":{}}}],["vamos",{"_index":159,"title":{},"body":{"controllers/AccountController.html":{}}}],["varchar",{"_index":1080,"title":{},"body":{"entities/UserEntity.html":{}}}],["varchar(100",{"_index":747,"title":{},"body":{"classes/CreateTableUsers1752935590369.html":{}}}],["varchar(14",{"_index":749,"title":{},"body":{"classes/CreateTableUsers1752935590369.html":{}}}],["varchar(255",{"_index":750,"title":{},"body":{"classes/CreateTableUsers1752935590369.html":{}}}],["varchar(50",{"_index":746,"title":{},"body":{"classes/CreateTableUsers1752935590369.html":{}}}],["variable",{"_index":1259,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1484,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vazio",{"_index":633,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["vem",{"_index":133,"title":{},"body":{"controllers/AccountController.html":{}}}],["ver",{"_index":669,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifica",{"_index":501,"title":{},"body":{"injectables/AccountService.html":{}}}],["verificamos",{"_index":526,"title":{},"body":{"injectables/AccountService.html":{}}}],["verificar",{"_index":465,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthMiddleware.html":{}}}],["verificações",{"_index":1182,"title":{},"body":{"injectables/UserService.html":{}}}],["verify",{"_index":1132,"title":{},"body":{"injectables/UserRepository.html":{}}}],["version",{"_index":1482,"title":{},"body":{"properties.html":{}}}],["video",{"_index":1435,"title":{},"body":{"index.html":{}}}],["visit",{"_index":1425,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":1438,"title":{},"body":{"index.html":{}}}],["void",{"_index":587,"title":{},"body":{"injectables/AuthApiKeyMiddleware.html":{},"classes/UnauthorizedExceptionFilter.html":{}}}],["wait",{"_index":477,"title":{},"body":{"injectables/AccountService.html":{}}}],["want",{"_index":1040,"title":{},"body":{"controllers/UserController.html":{}}}],["wasn't",{"_index":415,"title":{},"body":{"injectables/AccountService.html":{}}}],["watch",{"_index":1374,"title":{},"body":{"index.html":{}}}],["website",{"_index":1471,"title":{},"body":{"index.html":{}}}],["where('id",{"_index":947,"title":{},"body":{"injectables/TransactionsRepository.html":{},"injectables/UserRepository.html":{}}}],["withdraw",{"_index":92,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{}}}],["withdraw(undefined",{"_index":399,"title":{},"body":{"injectables/AccountService.html":{}}}],["withdrawmoney",{"_index":54,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountRepository.html":{}}}],["withdrawmoney(undefined",{"_index":300,"title":{},"body":{"injectables/AccountRepository.html":{}}}],["withdrawmoney(value",{"_index":91,"title":{},"body":{"controllers/AccountController.html":{}}}],["working",{"_index":1424,"title":{},"body":{"index.html":{}}}],["world",{"_index":574,"title":{},"body":{"injectables/AppService.html":{}}}],["x",{"_index":1451,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":1464,"title":{},"body":{"index.html":{}}}],["you're",{"_index":1385,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":244,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/Account.html":{"url":"classes/Account.html","title":"class - Account","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Account\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/business-modules/account/etities/account.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        Partial\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                account_number\n                            \n                            \n                                created_at\n                            \n                            \n                                credit\n                            \n                            \n                                id\n                            \n                            \n                                type\n                            \n                            \n                                update_at\n                            \n                            \n                                user\n                            \n                            \n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        account_number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/business-modules/account/etities/account.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/business-modules/account/etities/account.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        credit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/business-modules/account/etities/account.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/business-modules/account/etities/account.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AccountType\n\n                    \n                \n                    \n                        \n                                Defined in src/business-modules/account/etities/account.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/business-modules/account/etities/account.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                    \n                        \n                                Defined in src/business-modules/account/etities/account.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/business-modules/account/etities/account.entity.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AccountEntity } from 'src/database/entities/account.entity';\nimport { UserEntity } from 'src/database/entities/user.entity';\nimport { AccountType } from '../enums/accountType.enum';\n\nexport class Account implements Partial {\n  id: string;\n  type: AccountType;\n  user: UserEntity;\n  credit: string;\n  account_number: number;\n  created_at: string;\n  update_at: string;\n  user_id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AccountController.html":{"url":"controllers/AccountController.html","title":"controller - AccountController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AccountController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/business-modules/account/account.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                accounts\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                createAccount\n                            \n                            \n                                    \n                                    \n                                    Async\n                                deposit\n                            \n                            \n                                    \n                                    \n                                    Async\n                                listAccountStateMent\n                            \n                            \n                                    \n                                    \n                                    Async\n                                transaction\n                            \n                            \n                                    \n                                    \n                                    Async\n                                withdrawMoney\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        createAccount\n                        \n                    \n                \n            \n            \n                \n                        \n                    createAccount(user_cpf: string, createAccountDto: CreateAccountDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Create an account for an existent user'})@Post(':user_cpf')\n                \n            \n\n                    \n                        \n                            Defined in src/business-modules/account/account.controller.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user_cpf\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                createAccountDto\n                                            \n                                                            CreateAccountDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        deposit\n                        \n                    \n                \n            \n            \n                \n                        \n                    deposit(userCpf: string, depositDto: DepositDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Increase the value into the user's account'})@Patch('/deposit/:user_cpf')\n                \n            \n\n                    \n                        \n                            Defined in src/business-modules/account/account.controller.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userCpf\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                depositDto\n                                            \n                                                            DepositDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        listAccountStateMent\n                        \n                    \n                \n            \n            \n                \n                        \n                    listAccountStateMent(account_number: number, user_id: string, offset: number, limit: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'List all the account statement'})@Get('/:account_number/:user_id')\n                \n            \n\n                    \n                        \n                            Defined in src/business-modules/account/account.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                account_number\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                offset\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        transaction\n                        \n                    \n                \n            \n            \n                \n                        \n                    transaction(transactionDto: TransactionDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Perfom a transaction between two accounts', tags: undefined})@Post('transaction')\n                \n            \n\n                    \n                        \n                            Defined in src/business-modules/account/account.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                transactionDto\n                                            \n                                                            TransactionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        withdrawMoney\n                        \n                    \n                \n            \n            \n                \n                        \n                    withdrawMoney(value: number, user_id: string, account_number: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Withdraw money from an existent account'})@Patch(':user_id/account/:account_number')\n                \n            \n\n                    \n                        \n                            Defined in src/business-modules/account/account.controller.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                account_number\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Param,\n  Patch,\n  Post,\n  Query,\n} from '@nestjs/common';\nimport { AccountService } from './account.service';\nimport { CreateAccountDto } from './dto/create-account.dto';\nimport { ApiOperation } from '@nestjs/swagger';\nimport { DepositDto } from './dto/deposit.dto';\nimport { TransactionDto } from './dto/transaction.dto';\n\n@Controller('accounts')\nexport class AccountController {\n  constructor(private readonly serviceAccount: AccountService) {}\n\n  @ApiOperation({\n    summary: 'List all the account statement',\n  })\n  @Get('/:account_number/:user_id')\n  async listAccountStateMent(\n    @Param('account_number') account_number: number,\n    @Param('user_id') user_id: string,\n    @Query('offset') offset: number,\n    @Query('limit') limit: number,\n  ) {\n    return await this.serviceAccount.findAllAccountSatement({\n      offset,\n      limit,\n      account_number,\n      user_id,\n    });\n  }\n\n  @ApiOperation({\n    summary: 'Perfom a transaction between two accounts',\n    tags: ['Transactions'],\n  })\n  // precisamos saber para qual conta vai e de qual conta vem\n  @Post('transaction') // precisa de um job para processar os dados\n  async transaction(@Body() transactionDto: TransactionDto) {\n    return await this.serviceAccount.transaction(transactionDto);\n  }\n\n  @ApiOperation({\n    summary: 'Create an account for an existent user',\n  })\n  @Post(':user_cpf')\n  async createAccount(\n    @Param('user_cpf') user_cpf: string,\n    @Body() createAccountDto: CreateAccountDto,\n  ) {\n    return this.serviceAccount.createAccount(user_cpf, createAccountDto);\n  }\n\n  @ApiOperation({\n    summary: \"Increase the value into the user's account\",\n  })\n  @Patch('/deposit/:user_cpf')\n  async deposit(\n    @Param('user_cpf') userCpf: string,\n    @Body() depositDto: DepositDto,\n  ) {\n    return await this.serviceAccount.deposit(userCpf, depositDto);\n  }\n\n  @ApiOperation({\n    summary: 'Withdraw money from an existent account',\n  })\n  @Patch(':user_id/account/:account_number')\n  async withdrawMoney(\n    @Body() value: number,\n    @Param(':user_id') user_id: string,\n    @Param('account_number') account_number: number,\n  ) {\n    return this.serviceAccount.withDraw({\n      user_id,\n      account_number,\n      value,\n    });\n  }\n\n  // deixar o dinheiro rendendo uma porcentagem a cada dia\n  // vamos criar um cron job, ele será responsável por incrementar um determinado valor na conta do usuário\n  //@Patch()\n  //async investMoney(@Body() value: number) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/AccountEntity.html":{"url":"entities/AccountEntity.html","title":"entity - AccountEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  AccountEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/entities/account.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                account_number\n                            \n                            \n                                    \n                                created_at\n                            \n                            \n                                    \n                                credit\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                incomingTransferences\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                transferences\n                            \n                            \n                                    \n                                type\n                            \n                            \n                                    \n                                updated_at\n                            \n                            \n                                    \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        account_number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint', unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/account.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/account.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        credit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'decimal', precision: 10, scale: 2, default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/account.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/account.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        incomingTransferences\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TransactionEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, t => t.accountTo)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/account.entity.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AccountStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int', name: 'status'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/account.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        transferences\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TransactionEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, t => t.accountFrom)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/account.entity.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AccountType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int', name: 'type'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/account.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/account.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.accounts)@JoinColumn({name: 'user_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/account.entity.ts:61\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  OneToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { UserEntity } from './user.entity';\nimport { TransactionEntity } from './transaction.entity';\nimport { AccountType } from '../../business-modules/account/enums/accountType.enum';\nimport { AccountStatus } from '../../business-modules/account/enums/accountStatus.enum';\n\n@Entity('tb_accounts')\nexport class AccountEntity {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({\n    type: 'decimal',\n    precision: 10,\n    scale: 2,\n    default: 0,\n  })\n  credit: string;\n\n  @Column({\n    type: 'bigint',\n    unique: true,\n  })\n  account_number: number;\n\n  @Column({\n    type: 'int',\n    name: 'status',\n  })\n  status: AccountStatus;\n\n  @Column({\n    type: 'int',\n    name: 'type',\n  })\n  type: AccountType;\n\n  @CreateDateColumn({\n    type: 'timestamp',\n  })\n  created_at: string;\n\n  @UpdateDateColumn({\n    type: 'timestamp',\n  })\n  updated_at: string;\n\n  @ManyToOne(() => UserEntity, (user) => user.accounts)\n  @JoinColumn({\n    name: 'user_id',\n  })\n  user: UserEntity;\n\n  @OneToMany(() => TransactionEntity, (t) => t.accountFrom)\n  transferences: TransactionEntity[];\n\n  @OneToMany(() => TransactionEntity, (t) => t.accountTo)\n  incomingTransferences: TransactionEntity[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AccountModule.html":{"url":"modules/AccountModule.html","title":"module - AccountModule","body":"\n                   \n\n\n\n\n    Modules\n    AccountModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AccountModule\n\n\n\ncluster_AccountModule_exports\n\n\n\ncluster_AccountModule_providers\n\n\n\n\nAccountService \n\nAccountService \n\n\n\nTransactionsRepository \n\nTransactionsRepository \n\n\n\nAccountModule\n\nAccountModule\n\nAccountService  -->\n\nAccountModule->AccountService \n\n\n\nTransactionsRepository  -->\n\nAccountModule->TransactionsRepository \n\n\n\n\n\nAccountRepository\n\nAccountRepository\n\nAccountModule -->\n\nAccountRepository->AccountModule\n\n\n\n\n\nAccountService\n\nAccountService\n\nAccountModule -->\n\nAccountService->AccountModule\n\n\n\n\n\nTransactionsRepository\n\nTransactionsRepository\n\nAccountModule -->\n\nTransactionsRepository->AccountModule\n\n\n\n\n\nUserRepository\n\nUserRepository\n\nAccountModule -->\n\nUserRepository->AccountModule\n\n\n\n\n\nUserService\n\nUserService\n\nAccountModule -->\n\nUserService->AccountModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/business-modules/account/account.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AccountRepository\n                        \n                        \n                            AccountService\n                        \n                        \n                            TransactionsRepository\n                        \n                        \n                            UserRepository\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AccountController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AccountService\n                        \n                        \n                            TransactionsRepository\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AccountRepository } from './repositories/account.repository';\nimport { AccountService } from './account.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AccountEntity } from 'src/database/entities/account.entity';\nimport { TransactionEntity } from 'src/database/entities/transaction.entity';\nimport { UserService } from '../user/user.service';\nimport { TransactionsRepository } from './repositories/transaction.repository';\nimport { UserEntity } from 'src/database/entities/user.entity';\nimport { UserRepository } from '../user/repository/user.repository';\nimport { AccountController } from './account.controller';\nimport { BullModule } from '@nestjs/bull';\nimport { DepositProcessor } from './processors/depoist.processor';\nimport { TransactionProcessor } from './processors/transaction.processor';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([UserEntity, AccountEntity, TransactionEntity]),\n    BullModule.registerQueue(\n      {\n        name: 'deposit-queue',\n      },\n      {\n        name: 'transaction-queue',\n      },\n    ),\n  ],\n  controllers: [AccountController],\n  providers: [\n    TransactionsRepository,\n    AccountRepository,\n    AccountService,\n    UserService,\n    UserRepository,\n    DepositProcessor,\n    TransactionProcessor,\n  ],\n  exports: [TransactionsRepository, AccountService],\n})\nexport class AccountModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AccountRepository.html":{"url":"injectables/AccountRepository.html","title":"injectable - AccountRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AccountRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/business-modules/account/repositories/account.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                tableAccounts\n                            \n                            \n                                    Private\n                                    Readonly\n                                tableTransaction\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                countAccountStateMent\n                            \n                            \n                                    Async\n                                createAccount\n                            \n                            \n                                    Async\n                                deleteAccount\n                            \n                            \n                                    Async\n                                deposit\n                            \n                            \n                                    Async\n                                findAllAccountStateMentPaginated\n                            \n                            \n                                    Async\n                                findByAccountNumber\n                            \n                            \n                                    Async\n                                updateAccount\n                            \n                            \n                                    Async\n                                withDrawMoney\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(accountDataSource: Repository, transactionDataSource: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/business-modules/account/repositories/account.repository.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accountDataSource\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        transactionDataSource\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        countAccountStateMent\n                        \n                    \n                \n            \n            \n                \n                        \n                    countAccountStateMent(account_number: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/business-modules/account/repositories/account.repository.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                account_number\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createAccount\n                        \n                    \n                \n            \n            \n                \n                        \n                    createAccount(account: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/business-modules/account/repositories/account.repository.ts:108\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                account\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteAccount\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteAccount(accountId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/business-modules/account/repositories/account.repository.ts:132\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                accountId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deposit\n                        \n                    \n                \n            \n            \n                \n                        \n                    deposit(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/business-modules/account/repositories/account.repository.ts:141\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllAccountStateMentPaginated\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllAccountStateMentPaginated(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/business-modules/account/repositories/account.repository.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByAccountNumber\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByAccountNumber(account_number: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/business-modules/account/repositories/account.repository.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                account_number\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateAccount\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateAccount(accountid: string, account: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/business-modules/account/repositories/account.repository.ts:123\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                accountid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                account\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        withDrawMoney\n                        \n                    \n                \n            \n            \n                \n                        \n                    withDrawMoney(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/business-modules/account/repositories/account.repository.ts:169\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        tableAccounts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'tb_accounts'\n                    \n                \n                    \n                        \n                                Defined in src/business-modules/account/repositories/account.repository.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        tableTransaction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'tb_transaction'\n                    \n                \n                    \n                        \n                                Defined in src/business-modules/account/repositories/account.repository.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { AccountEntity } from '../../../database/entities/account.entity';\nimport { Repository } from 'typeorm';\nimport { Account } from '../etities/account.entity';\nimport { TransactionEntity } from '../../../database/entities/transaction.entity';\nimport { AccountType } from '../enums/accountType.enum';\n\n@Injectable()\nexport class AccountRepository {\n  private readonly tableAccounts = 'tb_accounts';\n  private readonly tableTransaction = 'tb_transaction';\n  constructor(\n    @InjectRepository(AccountEntity)\n    private readonly accountDataSource: Repository,\n\n    @InjectRepository(TransactionEntity)\n    private readonly transactionDataSource: Repository,\n  ) {}\n\n  //\n  async findAllAccountStateMentPaginated({\n    offset,\n    limit,\n    account_number,\n    user_id,\n  }: {\n    offset: number;\n    limit: number;\n    account_number: number;\n    user_id: string;\n  }): Promise {\n    try {\n      const query = `\n      SELECT\n       t.amount,\n       t.status,\n       TO_CHAR(t.done_at, 'DD/MM/YYYY - HH24:MI:SS')\n       TO_CHAR(t.finished_at, 'DD/MM/YYYY - HH24:MI:SS'),\n       t.to_account,\n       t.from_account,\n       acc.account_number,\n       CASE\n         WHEN acc.status == 1 THEN 'Conta ativa'\n         WHEN acc.status == 2 THEN 'Conta desativada'\n         WHEN acc.status == 3 THEN 'Conta recém criada'\n         WHEN acc.status == 4 THEN 'Conta cancelada'\n       END as account_status,\n       CASE\n         WHEN acc.type == 1 THEN 'Conta corrente'\n         WHEN acc.type == 2 THEN 'Conta poupança'\n         WHEN acc.type == 3 THEN 'Conta salário'\n       END as account_type\n      FROM ${this.tableAccounts} as acc\n      INNER JOIN ${this.tableTransaction} as t\n       ON acc.account_number = t.from_account\n      where t.finished_at  transferencias, saques e muito  mais!\n  // podemos listar todas as transferencias e sques que ja foram feitas\n  async countAccountStateMent(account_number: number): Promise {\n    const query = `\n     SELECT COUNT(*) FROM ${this.tableTransaction} t\n     WHERE t.from_account = $1\n       AND t.finished_at  {\n    try {\n      const query = `\n      SELECT * FROM ${this.tableAccounts} as acc\n      WHERE acc.account_number = $1;\n    `;\n\n      const [data] = await this.accountDataSource.query(query, [\n        account_number,\n      ]);\n\n      return data;\n    } catch (error) {\n      console.error(error);\n      return error;\n    }\n  }\n\n  // create account\n  async createAccount(account: {\n    type: AccountType;\n    user_id: string;\n    accountNumber: number;\n  }) {\n    const { type, user_id, accountNumber } = account;\n    return await this.accountDataSource.save({\n      type,\n      user: {\n        id: user_id,\n      },\n      account_number: accountNumber,\n    });\n  }\n\n  async updateAccount(accountid: string, account: Partial) {\n    try {\n      return this.accountDataSource.update(accountid, account);\n    } catch (error) {\n      console.error(error);\n      return error;\n    }\n  }\n\n  async deleteAccount(accountId: string) {\n    try {\n      return this.accountDataSource.delete(accountId);\n    } catch (error) {\n      console.error(error);\n      return error;\n    }\n  }\n\n  async deposit({\n    value,\n    accountNumber,\n    userId,\n  }: {\n    value: number;\n    accountNumber: number;\n    userId: string;\n  }): Promise {\n    try {\n      const query = `\n      UPDATE ${this.tableAccounts} acc\n      SET credit = acc.credit + $1\n      WHERE account_number = $2\n         AND user_id = $3;\n    `;\n      await this.accountDataSource.query(query, [value, accountNumber, userId]);\n\n      return {\n        message: 'Transaction succesfuly done',\n        success: true,\n      };\n    } catch (error) {\n      console.error(error);\n      return error;\n    }\n  }\n\n  async withDrawMoney({\n    user_id,\n    account_number,\n    value,\n  }: {\n    user_id: string;\n    account_number: number;\n    value: number;\n  }) {\n    try {\n      const query = `\n      UPDATE ${this.tableAccounts} acc\n      SET credit = acc.credit - $3\n      WHERE acc.user_id = $1\n        AND acc.account_number = $2\n        AND acc.credit >= $3;\n    `;\n\n      await this.accountDataSource.query(query, [\n        user_id,\n        account_number,\n        value,\n      ]);\n\n      return await this.accountDataSource.findOne({\n        where: {\n          account_number,\n        },\n      });\n    } catch (error) {\n      return error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AccountService.html":{"url":"injectables/AccountService.html","title":"injectable - AccountService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AccountService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/business-modules/account/account.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createAccount\n                            \n                            \n                                    Async\n                                deactivateAccount\n                            \n                            \n                                    Async\n                                deleteAccount\n                            \n                            \n                                    Async\n                                deposit\n                            \n                            \n                                    Async\n                                findAllAccountSatement\n                            \n                            \n                                    Async\n                                findOneAccountByAccountNumber\n                            \n                            \n                                    Private\n                                generateRandomValue\n                            \n                            \n                                    Async\n                                transaction\n                            \n                            \n                                    Async\n                                withDraw\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(accountRepository: AccountRepository, userService: UserService, depositQueue: Queue, transactionQueue: Queue)\n                    \n                \n                        \n                            \n                                Defined in src/business-modules/account/account.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accountRepository\n                                                  \n                                                        \n                                                                        AccountRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        depositQueue\n                                                  \n                                                        \n                                                                    Queue\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        transactionQueue\n                                                  \n                                                        \n                                                                    Queue\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createAccount\n                        \n                    \n                \n            \n            \n                \n                        \n                    createAccount(user_cpf: string, createAccount: CreateAccountDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/business-modules/account/account.service.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user_cpf\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                createAccount\n                                            \n                                                            CreateAccountDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deactivateAccount\n                        \n                    \n                \n            \n            \n                \n                        \n                    deactivateAccount(userCpf: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/business-modules/account/account.service.ts:213\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userCpf\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteAccount\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteAccount(account_number: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/business-modules/account/account.service.ts:108\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                account_number\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deposit\n                        \n                    \n                \n            \n            \n                \n                        \n                    deposit(userCpf: string, depositDto: DepositDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/business-modules/account/account.service.ts:164\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userCpf\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                depositDto\n                                            \n                                                            DepositDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllAccountSatement\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllAccountSatement(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/business-modules/account/account.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneAccountByAccountNumber\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneAccountByAccountNumber(account_number: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/business-modules/account/account.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                account_number\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        generateRandomValue\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateRandomValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/business-modules/account/account.service.ts:220\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        transaction\n                        \n                    \n                \n            \n            \n                \n                        \n                    transaction(transactionDto: TransactionDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/business-modules/account/account.service.ts:129\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                transactionDto\n                                            \n                                                            TransactionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        withDraw\n                        \n                    \n                \n            \n            \n                \n                        \n                    withDraw(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/business-modules/account/account.service.ts:187\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  ConflictException,\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common';\nimport { AccountRepository } from './repositories/account.repository';\nimport { PaginatedResponse } from 'src/commons/interfaces/PaginatedResponse';\nimport { CreateAccountDto } from './dto/create-account.dto';\nimport { UserService } from '../user/user.service';\nimport { DepositDto } from './dto/deposit.dto';\nimport { InjectQueue } from '@nestjs/bull';\nimport { Queue } from 'bull';\nimport { TransactionDto } from './dto/transaction.dto';\n\n@Injectable()\nexport class AccountService {\n  constructor(\n    private readonly accountRepository: AccountRepository,\n    private readonly userService: UserService,\n\n    @InjectQueue('deposit-queue')\n    private depositQueue: Queue,\n\n    @InjectQueue('transaction-queue')\n    private transactionQueue: Queue,\n  ) {}\n\n  async findAllAccountSatement({\n    offset,\n    limit,\n    account_number,\n    user_id,\n  }: {\n    offset: number;\n    limit: number;\n    account_number: number;\n    user_id: string;\n  }): Promise> {\n    if (!(user_id || account_number || offset || limit)) {\n      throw new BadRequestException(`A necessary key wasn't provided`);\n    }\n    try {\n      const accountStatements =\n        await this.accountRepository.findAllAccountStateMentPaginated({\n          offset,\n          limit,\n          account_number,\n          user_id,\n        });\n\n      const countAccounntStatement =\n        await this.accountRepository.countAccountStateMent(account_number);\n\n      return {\n        current: offset,\n        next: countAccounntStatement != offset ? offset + 1 : null,\n        previous: offset > 0 ? offset + 1 : null,\n        totalPages: Math.ceil(limit / countAccounntStatement),\n        items: accountStatements,\n      };\n    } catch (error) {\n      return error;\n    }\n  }\n\n  // an logged user can see details about his account\n  // an admin can see details about one account too\n  async findOneAccountByAccountNumber(account_number: number) {\n    try {\n      const account =\n        await this.accountRepository.findByAccountNumber(account_number);\n\n      if (!account) {\n        throw new BadRequestException('Account not found');\n      }\n\n      return account;\n    } catch (error) {\n      console.error(error);\n      return error;\n    }\n  }\n\n  async createAccount(user_cpf: string, createAccount: CreateAccountDto) {\n    console.log(user_cpf);\n    // check if user has one account (we going to see if he has 3 in the future)\n    const alreadyHaveAnAccount = await this.userService.findByCpf(user_cpf);\n    if (alreadyHaveAnAccount.accounts !== undefined) {\n      throw new ConflictException('User already have an account');\n    }\n    // We check the account type -> if the user has an account with the same type, they will be blocked.\n    // We check the amount of money that passes through the other accounts.\n    // Based on this, they can create a new account; otherwise, they cannot.\n\n    createAccount.user_id = alreadyHaveAnAccount.id;\n    const accountNumber = this.generateRandomValue();\n    return this.accountRepository.createAccount({\n      ...createAccount,\n      accountNumber,\n    });\n  }\n\n  // implement in the future\n  //async deactivateAccount(account_number: number) {}\n\n  // its required a serie of confirmations, emails, and lot of more\n  async deleteAccount(account_number: number) {\n    try {\n      // verificar se a conta existe\n      const accountExists =\n        await this.accountRepository.findByAccountNumber(account_number);\n      if (!accountExists) {\n        throw new BadRequestException(\n          `Account with number ${account_number} wasn't found`,\n        );\n      }\n      await this.accountRepository.deleteAccount(accountExists.id);\n      return true;\n    } catch (error) {\n      console.log(error);\n      return error;\n    }\n  }\n\n  // needs a serie of confirmation\n  // needs to be processed by a queue -> concurrency = 1\n  // needs a lock for this, the next process needs to wait till the other initiate\n  async transaction(transactionDto: TransactionDto) {\n    const { from_account, to_account } = transactionDto;\n    const [acc1, acc2] = await Promise.all([\n      this.accountRepository.findByAccountNumber(from_account),\n      this.accountRepository.findByAccountNumber(to_account),\n    ]);\n\n    if (!(acc1 || acc2)) {\n      throw new NotFoundException('one of the accounts does not exists');\n    }\n\n    const job = await this.transactionQueue.add(\n      'transacion-processor',\n      transactionDto,\n      {\n        removeOnComplete: true,\n        removeOnFail: true,\n        attempts: 3,\n      },\n    );\n\n    return {\n      id: job.id,\n      timestamp: job.timestamp,\n      progres: job.progress(),\n    };\n  }\n\n  // recebe um depósito\n  // verifica se já tem um em execução\n  // envia para um processor\n  // pega quanto de credit um user tem em conta\n  // faz a devida atualização\n  // salva no banco de dados\n  // envia notificação\n  async deposit(userCpf: string, depositDto: DepositDto) {\n    const user = await this.userService.findByCpf(userCpf);\n    if (!user) {\n      throw new NotFoundException('User not found');\n    }\n\n    depositDto.user_id = user.id;\n\n    const job = await this.depositQueue.add('deposit-processor', depositDto, {\n      attempts: 3,\n      removeOnComplete: true,\n      removeOnFail: true,\n    });\n\n    return {\n      job_id: job.id,\n      timestamp: job.timestamp,\n    };\n  }\n\n  // sacar dinheiro\n  // fazemos a query para atualizar a conta e retirar o dinheiro\n  // retornamos o valor para o usuário\n  async withDraw({\n    user_id,\n    account_number,\n    value,\n  }: {\n    user_id: string;\n    account_number: number;\n    value: number;\n  }) {\n    // verificamos se o usuário e a conta realmente existem\n    const account =\n      await this.accountRepository.findByAccountNumber(account_number);\n    const user = await this.userService.findOne(user_id);\n    if (!account) {\n      throw new BadRequestException(`Account ${account_number} doesn't exists`);\n    }\n    if (!user) {\n      throw new BadRequestException(`Account ${user_id} doesn't exists`);\n    }\n    return await this.accountRepository.withDrawMoney({\n      user_id: user.id,\n      account_number: account.account_number,\n      value,\n    });\n  }\n\n  async deactivateAccount(userCpf: string) {\n    const user = await this.userService.findByCpf(userCpf);\n    if (!user) {\n      throw new NotFoundException('User was not found');\n    }\n  }\n\n  private generateRandomValue() {\n    return Math.floor(100000 + Math.random() * 9000000000);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAccountModule\n\nAccountModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAccountModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AccountModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { AccountModule } from './business-modules/account/account.module';\nimport { UserModule } from './business-modules/user/user.module';\nimport { DatabaseModule } from './database/database.module';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { dataSourceOptions } from './database/connection/datasource';\nimport { BullModule } from '@nestjs/bull';\nimport { AuthModule } from './business-modules/auth/auth.module';\nimport { ConfigModule } from '@nestjs/config';\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      envFilePath: '.env',\n      isGlobal: true,\n    }),\n    TypeOrmModule.forRoot(dataSourceOptions),\n    BullModule.forRoot({\n      redis: {\n        host: 'redis',\n        port: 6379,\n      },\n    }),\n    DatabaseModule,\n    UserModule,\n    AccountModule,\n    AuthModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthApiKeyMiddleware.html":{"url":"injectables/AuthApiKeyMiddleware.html","title":"injectable - AuthApiKeyMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthApiKeyMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commons/middlewares/auth-api-key.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n                    \n                        \n                            Defined in src/commons/middlewares/auth-api-key.middleware.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        NextFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\nimport { NextFunction, Request, Response } from 'express';\n\n@Injectable()\nexport class AuthApiKeyMiddleware implements NestMiddleware {\n  use(req: Request, res: Response, next: NextFunction) {\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/business-modules/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                signIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(authDto: SignInDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('signin')\n                \n            \n\n                    \n                        \n                            Defined in src/business-modules/auth/auth.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                authDto\n                                            \n                                                            SignInDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post } from '@nestjs/common';\nimport { SignInDto } from './dto/signIn.dto';\nimport { AuthService } from './auth.service';\n\n@Controller('auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n  @Post('signin')\n  signIn(@Body() authDto: SignInDto) {\n    return this.authService.signIn(authDto);\n  }\n\n  //async signOut() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthMiddleware.html":{"url":"injectables/AuthMiddleware.html","title":"injectable - AuthMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/business-modules/auth/middlewares/auth.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/business-modules/auth/middlewares/auth.middleware.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        use\n                        \n                    \n                \n            \n            \n                \n                        \n                    use(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n                    \n                        \n                            Defined in src/business-modules/auth/middlewares/auth.middleware.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        NextFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpStatus, Injectable, NestMiddleware } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { JwtService } from '@nestjs/jwt';\nimport { NextFunction, Request, Response } from 'express';\nimport { UtilsService } from 'src/commons/utils/util.service';\n\n@Injectable()\nexport class AuthMiddleware implements NestMiddleware {\n  constructor(\n    private readonly jwtService: JwtService,\n    private readonly configService: ConfigService,\n  ) {}\n  async use(req: Request, res: Response, next: NextFunction) {\n    const token = UtilsService.extractHeaderToken(req);\n    if (!token) {\n      res.status(HttpStatus.UNAUTHORIZED).json({\n        message: 'Unauthorized exception',\n        status: HttpStatus.UNAUTHORIZED,\n        timestamp: new Date().toISOString(),\n      });\n    }\n    // verificar chave de assinatura do token\n    const payload = await this.jwtService.verifyAsync(token, {\n      secret: 'jesus é bom',\n    });\n\n    // verificar se o token existe na requisição(se estiver vazio nós retornamos um erro e pegamos informações do usuário que tentou acessar a rota ou usar o recurso)\n    // caso tenha o token e a assinatura esteja correta ele pode continuar\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService\n\nAuthService\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/business-modules/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { JwtService } from '@nestjs/jwt';\n\n@Module({\n  controllers: [AuthController],\n  providers: [AuthService, JwtService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/business-modules/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                signIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, jwtService: JwtService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/business-modules/auth/auth.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(signInDto: SignInDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/business-modules/auth/auth.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signInDto\n                                            \n                                                            SignInDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { UserService } from '../user/user.service';\nimport { SignInDto } from './dto/signIn.dto';\nimport { JwtService } from '@nestjs/jwt';\nimport { SignedUser } from './interface/signed-user.interface';\nimport { ConfigService } from '@nestjs/config';\nimport * as bcrypt from 'bcrypt';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly userService: UserService,\n    private readonly jwtService: JwtService,\n    private readonly configService: ConfigService,\n  ) {}\n  async signIn(signInDto: SignInDto): Promise {\n    const { email, password } = signInDto;\n    // busca o user por emai, pra ver se ele existe\n    const user = await this.userService.findByEmail(email);\n\n    if (!user) {\n      throw new UnauthorizedException('User does not exist');\n    }\n\n    if (!bcrypt.compareSync(password, user.password)) {\n      throw new UnauthorizedException('Incorrect credentials');\n    }\n\n    const payload: SignedUser = {\n      name: user.name,\n      email,\n      apiKey: String(this.configService.get('AUTH_API_KEY')),\n    };\n\n    return {\n      access_token: await this.jwtService.signAsync(payload),\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAccountDto.html":{"url":"classes/CreateAccountDto.html","title":"class - CreateAccountDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAccountDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/business-modules/account/dto/create-account.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                type\n                            \n                            \n                                    \n                                    \n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AccountType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({default: 1})@IsEnum(AccountType)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/business-modules/account/dto/create-account.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Id from an existent user'})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/business-modules/account/dto/create-account.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEnum, IsNotEmpty, IsOptional } from 'class-validator';\nimport { AccountType } from '../enums/accountType.enum';\n\nexport class CreateAccountDto {\n  @ApiProperty({ description: 'Id from an existent user' })\n  @IsOptional()\n  user_id: string;\n\n  @ApiProperty({ default: 1 })\n  @IsEnum(AccountType)\n  @IsNotEmpty()\n  type: AccountType;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTableAccounts1752935606883.html":{"url":"classes/CreateTableAccounts1752935606883.html","title":"class - CreateTableAccounts1752935606883","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTableAccounts1752935606883\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1752935606883-create-table-accounts.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1752935606883-create-table-accounts.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1752935606883-create-table-accounts.ts:4\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class CreateTableAccounts1752935606883 implements MigrationInterface {\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`\n      CREATE TABLE tb_accounts(\n        \"id\" UUID DEFAULT uuid_generate_v4() PRIMARY KEY,\n        \"user_id\" UUID NOT NULL,\n        \"credit\" NUMERIC(10, 2) DEFAULT 0,\n        \"account_number\" BIGINT UNIQUE,\n        \"status\" INT DEFAULT 3,\n        \"type\" INT DEFAULT 1,\n        \"created_at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP(6),\n        \"updated_at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP(6),\n        CONSTRAINT user_id_fk FOREIGN KEY (user_id) REFERENCES tb_users(id),\n        CONSTRAINT chk_account_number CHECK (account_number >= 100000 AND account_number  {\n    await queryRunner.query(`DROP TABLE tb_accounts`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTableTransaction1752935614586.html":{"url":"classes/CreateTableTransaction1752935614586.html","title":"class - CreateTableTransaction1752935614586","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTableTransaction1752935614586\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1752935614586-create-table-transaction.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1752935614586-create-table-transaction.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1752935614586-create-table-transaction.ts:4\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class CreateTableTransaction1752935614586 implements MigrationInterface {\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`\n        CREATE TABLE tb_transactions(\n          \"id\" UUID DEFAULT uuid_generate_v4() PRIMARY KEY,\n          \"amount\" NUMERIC(10,2) NOT NULL,\n          \"from_account\" BIGINT NOT NULL,\n          \"to_account\" BIGINT NOT NULL,\n          \"status\" INT NOT NULL DEFAULT 2,\n          \"failure_reason\" INT,\n          \"done_at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP(6),\n          \"finished_at\" TIMESTAMP,\n          CONSTRAINT from_account_number_fk FOREIGN KEY (from_account) REFERENCES tb_accounts(account_number),\n          CONSTRAINT to_account_number_fk FOREIGN KEY (to_account) REFERENCES tb_accounts(account_number)\n        );\n    `);\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`DROP TABLE tb_transactions;`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTableUsers1752935590369.html":{"url":"classes/CreateTableUsers1752935590369.html","title":"class - CreateTableUsers1752935590369","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTableUsers1752935590369\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1752935590369-create-table-users.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1752935590369-create-table-users.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1752935590369-create-table-users.ts:4\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class CreateTableUsers1752935590369 implements MigrationInterface {\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`CREATE EXTENSION IF NOT EXISTS \"uuid-ossp\"`);\n    await queryRunner.query(`\n        CREATE TABLE tb_users(\n         \"id\" UUID DEFAULT uuid_generate_v4() PRIMARY KEY,\n         \"name\" VARCHAR(50) NOT NULL,\n         \"email\" VARCHAR(100) NOT NULL UNIQUE,\n         \"cpf\" VARCHAR(14) NOT NULL UNIQUE,\n         \"password\" VARCHAR(255) NOT NULL,\n         \"birth_date\" DATE NOT NULL,\n         \"created_at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP(6),\n         \"updated_at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP(6)\n        );\n    `);\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`DROP TABLE tb_users;`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTransactionDto.html":{"url":"classes/CreateTransactionDto.html","title":"class - CreateTransactionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTransactionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/business-modules/account/dto/create-transaction.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                amount\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                failure_reason\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                from_account\n                            \n                            \n                                    \n                                    \n                                    \n                                status\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                to_account\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNumber()@IsNotEmpty()@IsPositive()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/business-modules/account/dto/create-transaction.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        failure_reason\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FailureReason\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsOptional()@IsEnum(FailureReason)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/business-modules/account/dto/create-transaction.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        from_account\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNumber()@IsNotEmpty()@IsPositive()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/business-modules/account/dto/create-transaction.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TransactionStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsEnum(TransactionStatus)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/business-modules/account/dto/create-transaction.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        to_account\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNumber()@IsNotEmpty()@IsPositive()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/business-modules/account/dto/create-transaction.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsEnum,\n  IsNotEmpty,\n  IsNumber,\n  IsOptional,\n  IsPositive,\n} from 'class-validator';\nimport { FailureReason } from 'src/database/enums/failure-reason.enum';\nimport { TransactionStatus } from 'src/database/enums/transaction-status.enum';\n\nexport class CreateTransactionDto {\n  @ApiProperty()\n  @IsNumber()\n  @IsNotEmpty()\n  @IsPositive()\n  from_account: number;\n\n  @ApiProperty()\n  @IsNumber()\n  @IsNotEmpty()\n  @IsPositive()\n  to_account: number;\n\n  @ApiProperty()\n  @IsNumber()\n  @IsNotEmpty()\n  @IsPositive()\n  amount: number;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsEnum(TransactionStatus)\n  status: TransactionStatus;\n\n  @ApiProperty()\n  @IsOptional()\n  @IsEnum(FailureReason)\n  failure_reason?: FailureReason;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/business-modules/user/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                birth_date\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                cpf\n                            \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        birth_date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/business-modules/user/dto/create-user.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        cpf\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsString()@Length(10, 14)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/business-modules/user/dto/create-user.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/business-modules/user/dto/create-user.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/business-modules/user/dto/create-user.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/business-modules/user/dto/create-user.dto.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsNotEmpty, IsString, Length } from 'class-validator';\n\nexport class CreateUserDto {\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  name: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  @Length(10, 14)\n  cpf: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  password: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  birth_date: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/database.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DataSourceProvider } from './connection/datasource.provider';\n\n@Module({\n  providers: [...DataSourceProvider],\n  exports: [...DataSourceProvider],\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DepositDto.html":{"url":"classes/DepositDto.html","title":"class - DepositDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DepositDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/business-modules/account/dto/deposit.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                account_number\n                            \n                            \n                                    \n                                    \n                                    \n                                user_id\n                            \n                            \n                                    \n                                    \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        account_number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/business-modules/account/dto/deposit.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/business-modules/account/dto/deposit.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/business-modules/account/dto/deposit.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsNumber, IsOptional, IsString } from 'class-validator';\n\nexport class DepositDto {\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsNumber()\n  account_number: number;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsNumber()\n  value: number;\n\n  @ApiProperty()\n  @IsOptional()\n  @IsString()\n  user_id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DepositProcessor.html":{"url":"classes/DepositProcessor.html","title":"class - DepositProcessor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DepositProcessor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/business-modules/account/processors/depoist.processor.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                process\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(accountRepository: AccountRepository)\n                    \n                \n                        \n                            \n                                Defined in src/business-modules/account/processors/depoist.processor.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accountRepository\n                                                  \n                                                        \n                                                                        AccountRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        process\n                        \n                    \n                \n            \n            \n                \n                        \n                    process(job: Job)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Process('deposit-processor')\n                \n            \n\n                    \n                        \n                            Defined in src/business-modules/account/processors/depoist.processor.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                job\n                                            \n                                                            Job\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AccountRepository } from '../repositories/account.repository';\nimport { DepositDto } from '../dto/deposit.dto';\nimport { Processor, Process } from '@nestjs/bull';\nimport { Job } from 'bull';\n\n@Processor('deposit-queue')\nexport class DepositProcessor {\n  constructor(private readonly accountRepository: AccountRepository) {}\n\n  @Process('deposit-processor')\n  async process(job: Job) {\n    const { id, data } = job;\n    const { account_number, value } = data;\n    const account =\n      await this.accountRepository.findByAccountNumber(account_number);\n\n    const newCredit = Number(account.credit) + value;\n\n    const update = await this.accountRepository.deposit({\n      accountNumber: account.account_number,\n      value: newCredit,\n      userId: account.user_id,\n    });\n\n    console.log(update);\n\n    return {\n      id,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvestimentProcessor.html":{"url":"classes/InvestimentProcessor.html","title":"class - InvestimentProcessor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvestimentProcessor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/business-modules/account/processors/investment.processor.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Processor } from '@nestjs/bull';\n\n@Processor('investiment-job')\nexport class InvestimentProcessor {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PaginatedResponse.html":{"url":"interfaces/PaginatedResponse.html","title":"interface - PaginatedResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PaginatedResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commons/interfaces/PaginatedResponse.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            current\n                                        \n                                \n                                \n                                        \n                                            items\n                                        \n                                \n                                \n                                        \n                                            next\n                                        \n                                \n                                \n                                        \n                                            previous\n                                        \n                                \n                                \n                                        \n                                            totalPages\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        current\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        current:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        items:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        next\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        next:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        previous\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        previous:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalPages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalPages:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface PaginatedResponse {\n  current: number;\n  previous: number | null;\n  next: number | null;\n  totalPages: number;\n  items: T[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResponseUserDto.html":{"url":"classes/ResponseUserDto.html","title":"class - ResponseUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResponseUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/business-modules/user/dto/response.user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                birth_date\n                            \n                            \n                                    \n                                created_at\n                            \n                            \n                                    \n                                document\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        birth_date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/business-modules/user/dto/response.user.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/business-modules/user/dto/response.user.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        document\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/business-modules/user/dto/response.user.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/business-modules/user/dto/response.user.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/business-modules/user/dto/response.user.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/business-modules/user/dto/response.user.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/business-modules/user/dto/response.user.dto.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class ResponseUserDto {\n  @ApiProperty()\n  name: string;\n  @ApiProperty()\n  email: string;\n  @ApiProperty()\n  document: string;\n  @ApiProperty()\n  password: string;\n  @ApiProperty()\n  birth_date: string;\n  @ApiProperty()\n  created_at: string;\n  @ApiProperty()\n  updated_at: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignInDto.html":{"url":"classes/SignInDto.html","title":"class - SignInDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignInDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/business-modules/auth/dto/signIn.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/business-modules/auth/dto/signIn.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/business-modules/auth/dto/signIn.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsNotEmpty, IsString } from 'class-validator';\n\nexport class SignInDto {\n  @ApiProperty()\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n\n  @ApiProperty()\n  @IsString()\n  @IsNotEmpty()\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SignedUser.html":{"url":"interfaces/SignedUser.html","title":"interface - SignedUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SignedUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/business-modules/auth/interface/signed-user.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            apiKey\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apiKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apiKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SignedUser {\n  name: string;\n  email: string;\n  apiKey: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TransactionDto.html":{"url":"classes/TransactionDto.html","title":"class - TransactionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TransactionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/business-modules/account/dto/transaction.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                from_account\n                            \n                            \n                                    \n                                    \n                                    \n                                to_account\n                            \n                            \n                                    \n                                    \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        from_account\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/business-modules/account/dto/transaction.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        to_account\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/business-modules/account/dto/transaction.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/business-modules/account/dto/transaction.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsNumber } from 'class-validator';\n\nexport class TransactionDto {\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsNumber()\n  from_account: number;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsNumber()\n  to_account: number;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsNumber()\n  value: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/TransactionEntity.html":{"url":"entities/TransactionEntity.html","title":"entity - TransactionEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  TransactionEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/entities/transaction.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                accountFrom\n                            \n                            \n                                    \n                                    \n                                accountTo\n                            \n                            \n                                    \n                                amount\n                            \n                            \n                                    \n                                done_at\n                            \n                            \n                                    \n                                failure_reason\n                            \n                            \n                                    \n                                finished_at\n                            \n                            \n                                    \n                                from_account\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                to_account\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        accountFrom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AccountEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, account => account.transferences)@JoinColumn({name: 'from_account', referencedColumnName: 'account_number'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/transaction.entity.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        accountTo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AccountEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, account => account.incomingTransferences)@JoinColumn({name: 'to_account', referencedColumnName: 'account_number'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/transaction.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'float'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/transaction.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        done_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/transaction.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        failure_reason\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: FailureReason, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/transaction.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        finished_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/transaction.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        from_account\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/transaction.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/transaction.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TransactionStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int', default: 2})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/transaction.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        to_account\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/transaction.entity.ts:23\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { AccountEntity } from './account.entity';\nimport { TransactionStatus } from '../enums/transaction-status.enum';\nimport { FailureReason } from '../enums/failure-reason.enum';\n\n@Entity('tb_transactions')\nexport class TransactionEntity {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  from_account: number;\n\n  @Column()\n  to_account: number;\n\n  @Column({\n    type: 'float',\n  })\n  amount: number;\n\n  @Column({\n    type: 'int',\n    default: 2,\n  })\n  status: TransactionStatus;\n\n  @Column({\n    type: 'enum',\n    enum: FailureReason,\n    nullable: true,\n  })\n  failure_reason: number;\n\n  @CreateDateColumn({\n    type: 'timestamp',\n  })\n  done_at: string;\n\n  @UpdateDateColumn({\n    type: 'timestamp',\n    nullable: true,\n  })\n  finished_at: string;\n\n  @ManyToOne(() => AccountEntity, (account) => account.transferences)\n  @JoinColumn({ name: 'from_account', referencedColumnName: 'account_number' })\n  accountFrom: AccountEntity;\n\n  @ManyToOne(() => AccountEntity, (account) => account.incomingTransferences)\n  @JoinColumn({ name: 'to_account', referencedColumnName: 'account_number' })\n  accountTo: AccountEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TransactionProcessor.html":{"url":"classes/TransactionProcessor.html","title":"class - TransactionProcessor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TransactionProcessor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/business-modules/account/processors/transaction.processor.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                process\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(accountRepository: AccountRepository, transactionRepository: TransactionsRepository)\n                    \n                \n                        \n                            \n                                Defined in src/business-modules/account/processors/transaction.processor.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accountRepository\n                                                  \n                                                        \n                                                                        AccountRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        transactionRepository\n                                                  \n                                                        \n                                                                        TransactionsRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        process\n                        \n                    \n                \n            \n            \n                \n                        \n                    process(job: Job)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Process('transacion-processor')\n                \n            \n\n                    \n                        \n                            Defined in src/business-modules/account/processors/transaction.processor.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                job\n                                            \n                                                            Job\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Process, Processor } from '@nestjs/bull';\nimport { Job } from 'bull';\nimport { AccountRepository } from '../repositories/account.repository';\nimport { TransactionDto } from '../dto/transaction.dto';\nimport { BadRequestException } from '@nestjs/common';\nimport { TransactionsRepository } from '../repositories/transaction.repository';\nimport { TransactionStatus } from 'src/database/enums/transaction-status.enum';\nimport { FailureReason } from 'src/database/enums/failure-reason.enum';\n\n// transaction query creation\n// we create an transaction in the database\n// we update account_from credit\n// we updaten to_account credit\n// we can notify account from and to account sending emails - tell then that the transaction was successfuly done\n/*\n\n  1- entrou na fila a transação já precisa ser criada\n  2 - teve falha de não ter crédito suficiente, registramos o erro e guardamos a transaction\n  3 - no create da transaction ela precisa ter status de processando\n  4 - ao final da transaction ela tem staus de criada e feita\n  5 - enviamos notificações e emails para as partes interessadas(um comprovante em pdf pode ser gerado)\n\n\n  -> se tivermos sucesso ao criar a transaction -> tiramos o dinheiro da conta que enviou e passamos esse valor para a conta que está recebendo\n*/\n\n@Processor('transaction-queue')\nexport class TransactionProcessor {\n  constructor(\n    private readonly accountRepository: AccountRepository,\n    private readonly transactionRepository: TransactionsRepository,\n  ) {}\n  @Process('transacion-processor')\n  async process(job: Job) {\n    const { id, data } = job;\n    const { from_account, to_account, value } = data;\n    try {\n      await job.progress(0);\n      const transaction = await this.transactionRepository.transaction({\n        amount: value,\n        from_account,\n        to_account,\n        status: TransactionStatus.PENDING,\n      });\n\n      if (!transaction) {\n        throw new BadRequestException();\n      }\n\n      const hasEnoughCredit =\n        await this.accountRepository.findByAccountNumber(from_account);\n\n      await job.progress(50);\n\n      if (value > Number(hasEnoughCredit.credit)) {\n        await this.transactionRepository.updateTransactionField(\n          transaction.id,\n          {\n            failure_reason: FailureReason.INSUFFICIENT_FUNDS,\n            finished_at: new Date().toISOString(),\n          },\n        );\n        await job.progress(100);\n        throw new BadRequestException('Sender account has no credit enough');\n      }\n\n      // inicia a transação -> tirar dinheiro de uma conta e passar para outra\n      await job.progress(75);\n      await this.accountRepository.withDrawMoney({\n        account_number: from_account,\n        user_id: transaction.accountFrom.user.id,\n        value,\n      });\n\n      await job.progress(90);\n      await this.accountRepository.deposit({\n        value,\n        accountNumber: to_account,\n        userId: transaction.accountTo.user.id,\n      });\n\n      await job.progress(100);\n      return {\n        id,\n        message: 'Transaction successfully done',\n      };\n    } catch (error) {\n      console.error(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransactionsRepository.html":{"url":"injectables/TransactionsRepository.html","title":"injectable - TransactionsRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TransactionsRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/business-modules/account/repositories/transaction.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                transaction\n                            \n                            \n                                    Async\n                                updateTransactionField\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(transactionDataSource: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/business-modules/account/repositories/transaction.repository.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        transactionDataSource\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        transaction\n                        \n                    \n                \n            \n            \n                \n                        \n                    transaction(transaction: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/business-modules/account/repositories/transaction.repository.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                transaction\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateTransactionField\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateTransactionField(id: string, transaction: DeepPartial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/business-modules/account/repositories/transaction.repository.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                transaction\n                                            \n                                                            DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { TransactionEntity } from 'src/database/entities/transaction.entity';\nimport { DeepPartial, Repository } from 'typeorm';\n\n@Injectable()\nexport class TransactionsRepository {\n  constructor(\n    @InjectRepository(TransactionEntity)\n    private readonly transactionDataSource: Repository,\n  ) {}\n\n  async transaction(transaction: Partial) {\n    const data = this.transactionDataSource.create(transaction);\n    await this.transactionDataSource.save(data);\n    return await this.transactionDataSource.findOne({\n      where: {\n        id: data.id,\n      },\n      relations: {\n        accountFrom: {\n          user: true,\n        },\n        accountTo: {\n          user: true,\n        },\n      },\n\n      select: {\n        accountFrom: true,\n        accountTo: true,\n      },\n    });\n  }\n\n  async updateTransactionField(\n    id: string,\n    transaction: DeepPartial,\n  ) {\n    try {\n      return this.transactionDataSource\n        .createQueryBuilder()\n        .update()\n        .set(transaction)\n        .where('id = :id', { id })\n        .execute();\n    } catch (error) {\n      console.error(error);\n      return error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransformDatePipe.html":{"url":"injectables/TransformDatePipe.html","title":"injectable - TransformDatePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TransformDatePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commons/pipes/transform-date/transform-date.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string, metadata: ArgumentMetadata)\n                \n            \n\n\n                    \n                        \n                            Defined in src/commons/pipes/transform-date/transform-date.pipe.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                metadata\n                                            \n                                                        ArgumentMetadata\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ArgumentMetadata,\n  BadRequestException,\n  Injectable,\n  PipeTransform,\n} from '@nestjs/common';\n\n@Injectable()\nexport class TransformDatePipe implements PipeTransform {\n  transform(value: string, metadata: ArgumentMetadata) {\n    if (metadata.type !== 'body' || !value) {\n      throw new BadRequestException('Bad request exception');\n    }\n\n    if (typeof value !== 'string') {\n      return 'error';\n    }\n\n    const date = value.split('/').map((el) => parseInt(el, 10));\n\n    console.log(date);\n\n    console.log('Month');\n    console.log(new Date(date[2], date[1], date[0]).getDay());\n\n    const dateValue = new Date(date[2], date[1] - 1, date[0]);\n\n    return `${dateValue.getFullYear()}-${dateValue.getMonth() + 1}-${dateValue.getDate()}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnauthorizedExceptionError.html":{"url":"classes/UnauthorizedExceptionError.html","title":"class - UnauthorizedExceptionError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnauthorizedExceptionError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commons/exception-filters/exceptions/unauthorized-error.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(msg: string)\n                    \n                \n                        \n                            \n                                Defined in src/commons/exception-filters/exceptions/unauthorized-error.exception.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        msg\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class UnauthorizedExceptionError extends HttpException {\n  constructor(msg: string) {\n    super(msg || 'Unauthorized', HttpStatus.UNAUTHORIZED);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnauthorizedExceptionFilter.html":{"url":"classes/UnauthorizedExceptionFilter.html","title":"class - UnauthorizedExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnauthorizedExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commons/exception-filters/filters/unauthorized-exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: UnauthorizedExceptionError, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/commons/exception-filters/filters/unauthorized-exception.filter.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                            UnauthorizedExceptionError\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter } from '@nestjs/common';\nimport { UnauthorizedExceptionError } from '../exceptions/unauthorized-error.exception';\nimport { Request, Response } from 'express';\n\n@Catch(UnauthorizedExceptionError)\nexport class UnauthorizedExceptionFilter implements ExceptionFilter {\n  catch(exception: UnauthorizedExceptionError, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n    const status = exception.getStatus();\n\n    response.status(status).json({\n      statusCode: status,\n      message: exception.message,\n      path: request.url,\n      timestamp: new Date().toISOString(),\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/business-modules/user/dto/update-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateUserDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/business-modules/user/entities/user.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            UserEntity\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accounts\n                            \n                            \n                                birth_date\n                            \n                            \n                                cpf\n                            \n                            \n                                created_at\n                            \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accounts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AccountEntity[]\n\n                    \n                \n                    \n                        \n                                Defined in src/business-modules/user/entities/user.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        birth_date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/business-modules/user/entities/user.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cpf\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/business-modules/user/entities/user.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/business-modules/user/entities/user.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/business-modules/user/entities/user.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/business-modules/user/entities/user.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/business-modules/user/entities/user.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/business-modules/user/entities/user.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/business-modules/user/entities/user.entity.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AccountEntity } from 'src/database/entities/account.entity';\nimport { UserEntity } from 'src/database/entities/user.entity';\n\nexport class User implements UserEntity {\n  id: string;\n  name: string; // pode atualizar\n  email: string; // pode atualizar\n  cpf: string;\n  password: string; // pode atualizar\n  birth_date: string; // pode atualizar -> precisa de regra de negódcio para isso!\n  created_at: string;\n  updated_at: string;\n  accounts: AccountEntity[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/business-modules/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(birthDate: string, createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Creates a new user'})@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/business-modules/user/user.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                birthDate\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(offset: number, limit: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'FindAll users', description: 'Design firstly to admins to see all users and manage them, but in the feature I want that all users interact with each other and this will be an important feature'})@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/business-modules/user/user.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                offset\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Find only one user'})@Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/business-modules/user/user.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Delete one user'})@Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/business-modules/user/user.controller.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Update one existent user'})@Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/business-modules/user/user.controller.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Query,\n} from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { ApiOperation } from '@nestjs/swagger';\nimport { TransformDatePipe } from 'src/commons/pipes/transform-date/transform-date.pipe';\n\n@Controller('user')\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n  @ApiOperation({\n    summary: 'Creates a new user',\n  })\n  @Post()\n  create(\n    @Body('birth_date', TransformDatePipe) birthDate: string,\n    @Body() createUserDto: CreateUserDto,\n  ) {\n    createUserDto.birth_date = birthDate;\n    return this.userService.create(createUserDto);\n  }\n\n  @ApiOperation({\n    summary: 'FindAll users',\n    description:\n      'Design firstly to admins to see all users and manage them, but in the feature I want that all users interact with each other and this will be an important feature',\n  })\n  @Get()\n  findAll(@Query('offset') offset: number, @Query('limit') limit: number) {\n    return this.userService.findAll({ offset, limit });\n  }\n\n  @ApiOperation({\n    summary: 'Find only one user',\n  })\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.userService.findOne(id);\n  }\n\n  @ApiOperation({\n    summary: 'Update one existent user',\n  })\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateUserDto: UpdateUserDto) {\n    return this.userService.update(id, updateUserDto);\n  }\n\n  @ApiOperation({\n    summary: 'Delete one user',\n  })\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.userService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/UserEntity.html":{"url":"entities/UserEntity.html","title":"entity - UserEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  UserEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/entities/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                accounts\n                            \n                            \n                                    \n                                birth_date\n                            \n                            \n                                    \n                                cpf\n                            \n                            \n                                    \n                                created_at\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        accounts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AccountEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, ac => ac.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/user.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        birth_date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/user.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        cpf\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', unique: true, name: 'cpf'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/user.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/user.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/user.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/user.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/user.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/user.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/user.entity.ts:51\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  Entity,\n  OneToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { AccountEntity } from './account.entity';\n\n@Entity('tb_users')\nexport class UserEntity {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({\n    type: 'varchar',\n  })\n  name: string;\n\n  @Column({\n    type: 'varchar',\n    unique: true,\n  })\n  email: string;\n\n  @Column({\n    type: 'varchar',\n    unique: true,\n    name: 'cpf',\n  })\n  cpf: string;\n\n  @Column({\n    type: 'varchar',\n  })\n  password: string;\n\n  @Column({\n    type: 'timestamp',\n  })\n  birth_date: string;\n\n  @UpdateDateColumn({\n    type: 'timestamp',\n  })\n  created_at: string;\n\n  @UpdateDateColumn({\n    type: 'timestamp',\n  })\n  updated_at: string;\n\n  @OneToMany(() => AccountEntity, (ac) => ac.user)\n  accounts: AccountEntity[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\ncluster_UserModule_exports\n\n\n\n\nUserRepository \n\nUserRepository \n\n\n\nUserService \n\nUserService \n\n\n\nUserModule\n\nUserModule\n\nUserRepository  -->\n\nUserModule->UserRepository \n\n\n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAccountRepository\n\nAccountRepository\n\nUserModule -->\n\nAccountRepository->UserModule\n\n\n\n\n\nUserRepository\n\nUserRepository\n\nUserModule -->\n\nUserRepository->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/business-modules/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AccountRepository\n                        \n                        \n                            UserRepository\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserRepository\n                        \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { UserController } from './user.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserEntity } from 'src/database/entities/user.entity';\nimport { UserRepository } from './repository/user.repository';\nimport { AccountRepository } from '../account/repositories/account.repository';\nimport { AccountEntity } from 'src/database/entities/account.entity';\nimport { TransactionEntity } from 'src/database/entities/transaction.entity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([UserEntity, AccountEntity, TransactionEntity]),\n  ],\n  controllers: [UserController],\n  providers: [UserService, UserRepository, AccountRepository],\n  exports: [UserService, UserRepository],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserRepository.html":{"url":"injectables/UserRepository.html","title":"injectable - UserRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/business-modules/user/repository/user.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                tb_users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                countUsers\n                            \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                findAllPaginated\n                            \n                            \n                                    Async\n                                findByCpf\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findUserByEmail\n                            \n                            \n                                    Async\n                                RegisterUser\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userDataSource: Repository, accountDataSource: AccountRepository)\n                    \n                \n                        \n                            \n                                Defined in src/business-modules/user/repository/user.repository.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userDataSource\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accountDataSource\n                                                  \n                                                        \n                                                                        AccountRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        countUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    countUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/business-modules/user/repository/user.repository.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteUser(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/business-modules/user/repository/user.repository.ts:106\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllPaginated\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllPaginated(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/business-modules/user/repository/user.repository.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByCpf\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByCpf(cpf: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/business-modules/user/repository/user.repository.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cpf\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(userIdentifier: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/business-modules/user/repository/user.repository.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userIdentifier\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findUserByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findUserByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/business-modules/user/repository/user.repository.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        RegisterUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    RegisterUser(user: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/business-modules/user/repository/user.repository.ts:88\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(user: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/business-modules/user/repository/user.repository.ts:92\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        tb_users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'tb_users'\n                    \n                \n                    \n                        \n                                Defined in src/business-modules/user/repository/user.repository.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from 'src/database/entities/user.entity';\nimport { Repository, UpdateResult } from 'typeorm';\nimport { User } from '../entities/user.entity';\nimport { AccountRepository } from 'src/business-modules/account/repositories/account.repository';\n\n@Injectable()\nexport class UserRepository {\n  private readonly tb_users = 'tb_users';\n\n  constructor(\n    @InjectRepository(UserEntity)\n    private readonly userDataSource: Repository,\n    private readonly accountDataSource: AccountRepository,\n  ) {}\n  // find all users\n  async findAllPaginated({\n    offset,\n    limit,\n  }: {\n    offset: number;\n    limit: number;\n  }): Promise {\n    const query = `\n      SELECT\n      \"name\",\n      \"email\",\n      \"cpf\",\n      TO_CHAR(\"birth_date\", 'DD/MM/YYYY - HH24:MI:SS'),\n      TO_CHAR(\"created_at\", 'DD/MM/YYYY - HH24:MI:SS'),\n      TO_CHAR(\"updated_at\", 'DD/MM/YYYY - HH24:MI:SS')\n      FROM ${this.tb_users}\n      OFFSET $1 LIMIT $2;\n    `;\n    return await this.userDataSource.query(query, [offset, limit]);\n  }\n\n  async countUsers(): Promise {\n    const query = `SELECT COUNT(*) FROM ${this.tb_users}`;\n    const [{ count }] = await this.userDataSource.query(query);\n    return count;\n  }\n\n  async findOne(userIdentifier: string) {\n    try {\n      // verify if identifier is UUID -> if it doesn`t so we use cpf as the unique identifier\n      return await this.userDataSource.findOne({\n        where: {\n          id: userIdentifier,\n        },\n        relations: {\n          accounts: true,\n        },\n      });\n    } catch (error) {\n      console.error(error);\n      return error;\n    }\n  }\n\n  async findByCpf(cpf: string): Promise {\n    try {\n      return await this.userDataSource.findOne({\n        where: {\n          cpf,\n        },\n      });\n    } catch (error) {\n      return error;\n    }\n  }\n\n  async findUserByEmail(email: string) {\n    try {\n      return await this.userDataSource.findOne({\n        where: {\n          email,\n        },\n      });\n    } catch (error) {\n      console.error(error);\n      return error;\n    }\n  }\n\n  // creae an user > user have one account -> one account can make multiple transactions\n  async RegisterUser(user: Partial): Promise {\n    return await this.userDataSource.save(user);\n  }\n\n  async updateUser(user: Partial): Promise {\n    try {\n      return await this.userDataSource\n        .createQueryBuilder()\n        .update(UserEntity)\n        .set(user)\n        .where('id = :id', { id: user.id })\n        .execute();\n    } catch (error) {\n      console.error(error);\n      return error;\n    }\n  }\n\n  async deleteUser(userId: string) {\n    try {\n      await this.userDataSource\n        .createQueryBuilder()\n        .delete()\n        .from(UserEntity)\n        .where('id = :id', { userId })\n        .execute();\n    } catch (error) {\n      console.error(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/business-modules/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findByCpf\n                            \n                            \n                                    Async\n                                findByEmail\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: UserRepository)\n                    \n                \n                        \n                            \n                                Defined in src/business-modules/user/user.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        UserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/business-modules/user/user.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/business-modules/user/user.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByCpf\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByCpf(cpf: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/business-modules/user/user.service.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cpf\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/business-modules/user/user.service.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/business-modules/user/user.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/business-modules/user/user.service.ts:100\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/business-modules/user/user.service.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { UserRepository } from './repository/user.repository';\nimport { UserEntity } from 'src/database/entities/user.entity';\nimport { PaginatedResponse } from 'src/commons/interfaces/PaginatedResponse';\nimport { plainToInstance } from 'class-transformer';\nimport { ResponseUserDto } from './dto/response.user.dto';\nimport { User } from './entities/user.entity';\nimport * as bcrypt from 'bcrypt';\n\n@Injectable()\nexport class UserService {\n  constructor(private readonly userRepository: UserRepository) {}\n  async create(createUserDto: CreateUserDto) {\n    const { cpf, password } = createUserDto;\n    const user = await this.userRepository.findByCpf(cpf);\n    if (user) {\n      throw new BadRequestException(`user with cpf: ${cpf} already exists`);\n    }\n    // TODO: criamos uma conta padrao para o usuario, caso ele queira\n    // TODO: criamos o usuario\n    // hash na password do user\n    const newPassowrd = await bcrypt.hash(password, 16);\n    createUserDto.password = newPassowrd;\n    return await this.userRepository.RegisterUser(createUserDto);\n  }\n\n  async findAll({\n    offset,\n    limit,\n  }: {\n    offset: number;\n    limit: number;\n  }): Promise> {\n    try {\n      const users = await this.userRepository.findAllPaginated({\n        offset,\n        limit,\n      });\n      const countUsers = await this.userRepository.countUsers();\n\n      const responseUser = plainToInstance(ResponseUserDto, users);\n\n      return {\n        current: offset,\n        next: offset !== countUsers ? offset + 1 : null,\n        previous: offset === 0 ? null : offset - 1,\n        totalPages: Math.ceil(limit / countUsers),\n        items: responseUser,\n      };\n    } catch (error) {\n      console.error(error);\n      return error;\n    }\n  }\n\n  async findOne(id: string): Promise {\n    // isUuid\n    // isEmail\n    // isCpf\n    // com essas verificações podemos centralizar esse método como findOne com base na entrada\n    const user = await this.userRepository.findOne(id);\n    if (!user) {\n      throw new BadRequestException('User not found');\n    }\n    return user;\n  }\n\n  async findByEmail(email: string): Promise {\n    const userExists = await this.userRepository.findUserByEmail(email);\n    if (!userExists) {\n      throw new BadRequestException('User not found');\n    }\n\n    return userExists;\n  }\n\n  async findByCpf(cpf: string): Promise {\n    const userExists = await this.userRepository.findByCpf(cpf);\n    if (!userExists) {\n      throw new BadRequestException('User not found');\n    }\n    return userExists;\n  }\n\n  async update(id: string, updateUserDto: UpdateUserDto) {\n    const user = await this.findOne(id);\n    const { cpf } = updateUserDto;\n    if (user.cpf !== cpf) {\n      throw new BadRequestException('User sent a different cpf!');\n    }\n\n    return await this.userRepository.updateUser({\n      id,\n      ...updateUserDto,\n    });\n  }\n\n  async remove(id: string) {\n    try {\n      // TODO: Delete user request\n      // before delete an user we need a serial permission\n      // cpf confirmation\n      // user confirmation\n      // why its being deleted\n      // admin confirmation email with the description\n      // use ques to do that\n      await this.findOne(id);\n\n      return this.userRepository.deleteUser(id);\n    } catch (error) {\n      console.error(error);\n      return error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UtilsService.html":{"url":"classes/UtilsService.html","title":"class - UtilsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UtilsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commons/utils/util.service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                extractHeaderToken\n                            \n                            \n                                    Static\n                                isValidCpf\n                            \n                            \n                                    Static\n                                isValidEmail\n                            \n                            \n                                    Static\n                                isValidUUID\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        extractHeaderToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    extractHeaderToken(req: Request)\n                \n            \n\n\n                    \n                        \n                            Defined in src/commons/utils/util.service.ts:4\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        isValidCpf\n                        \n                    \n                \n            \n            \n                \n                        \n                    isValidCpf(cpf: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/commons/utils/util.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cpf\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        isValidEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    isValidEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/commons/utils/util.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        isValidUUID\n                        \n                    \n                \n            \n            \n                \n                        \n                    isValidUUID(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/commons/utils/util.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Request } from 'express';\n\nexport class UtilsService {\n  static extractHeaderToken(req: Request): string | undefined {\n    const authHeader = req.headers['authorization'];\n\n    if (!authHeader || Array.isArray(authHeader)) {\n      return undefined;\n    }\n\n    const [type, token] = authHeader.split(' ');\n\n    if (type != 'Bearer') {\n      return undefined;\n    }\n\n    return token;\n  }\n\n  static isValidUUID(id: string): boolean {\n    if (typeof id !== 'string') {\n      return false;\n    }\n    const uuidRegex =\n      /^[0-9A-F]{8}-[0-9A-F]{4}-[1-5][0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i;\n\n    return uuidRegex.test(id);\n  }\n\n  static isValidEmail(email: string): boolean {\n    if (!email) {\n      return false;\n    }\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  }\n\n  static isValidCpf(cpf: string): boolean {\n    let soma: number = 0;\n    let resto: number = 0;\n\n    if (cpf == '00000000000') {\n      return false;\n    }\n    for (let i = 1; i \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/business-modules/account/account.controller.ts\n            \n            controller\n            AccountController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/business-modules/account/account.service.ts\n            \n            injectable\n            AccountService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/business-modules/account/dto/create-account.dto.ts\n            \n            class\n            CreateAccountDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/business-modules/account/dto/create-transaction.dto.ts\n            \n            class\n            CreateTransactionDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/business-modules/account/dto/deposit.dto.ts\n            \n            class\n            DepositDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/business-modules/account/dto/transaction.dto.ts\n            \n            class\n            TransactionDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/business-modules/account/etities/account.entity.ts\n            \n            class\n            Account\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/business-modules/account/middlewares/auth.middleware.ts\n            \n            class\n            AuthMiddleware\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/business-modules/account/processors/depoist.processor.ts\n            \n            class\n            DepositProcessor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/business-modules/account/processors/investment.processor.ts\n            \n            class\n            InvestimentProcessor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/business-modules/account/processors/transaction.processor.ts\n            \n            class\n            TransactionProcessor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/business-modules/account/repositories/account.repository.ts\n            \n            injectable\n            AccountRepository\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/business-modules/account/repositories/transaction.repository.ts\n            \n            injectable\n            TransactionsRepository\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/business-modules/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/business-modules/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/business-modules/auth/dto/signIn.dto.ts\n            \n            class\n            SignInDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/business-modules/auth/interface/signed-user.interface.ts\n            \n            interface\n            SignedUser\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/business-modules/auth/middlewares/auth.middleware.ts\n            \n            injectable\n            AuthMiddleware\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/business-modules/user/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/business-modules/user/dto/response.user.dto.ts\n            \n            class\n            ResponseUserDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/business-modules/user/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/business-modules/user/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/business-modules/user/repository/user.repository.ts\n            \n            injectable\n            UserRepository\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/business-modules/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/business-modules/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                        src/commons/decorators/is-valid-cpf/is-valid-cpf.decorator.ts\n            \n            variable\n            IsValidCpf\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/commons/decorators/is-valid-phone-number/is-valid-phone-number.decorator.ts\n            \n            variable\n            IsValidPhoneNumber\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/commons/decorators/roles/roles.decorator.ts\n            \n            variable\n            Roles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/commons/exception-filters/exceptions/unauthorized-error.exception.ts\n            \n            class\n            UnauthorizedExceptionError\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/commons/exception-filters/filters/unauthorized-exception.filter.ts\n            \n            class\n            UnauthorizedExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/commons/interfaces/PaginatedResponse.ts\n            \n            interface\n            PaginatedResponse\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/commons/middlewares/auth-api-key.middleware.ts\n            \n            injectable\n            AuthApiKeyMiddleware\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/commons/pipes/transform-date/transform-date.pipe.ts\n            \n            injectable\n            TransformDatePipe\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/commons/utils/util.service.ts\n            \n            class\n            UtilsService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/database/connection/datasource.provider.ts\n            \n            variable\n            DataSourceProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/database/connection/datasource.ts\n            \n            variable\n            dataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/database/connection/datasource.ts\n            \n            variable\n            dataSourceOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/entities/account.entity.ts\n            \n            entity\n            AccountEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/entities/transaction.entity.ts\n            \n            entity\n            TransactionEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/entities/user.entity.ts\n            \n            entity\n            UserEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/migrations/1752935590369-create-table-users.ts\n            \n            class\n            CreateTableUsers1752935590369\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/database/migrations/1752935606883-create-table-accounts.ts\n            \n            class\n            CreateTableAccounts1752935606883\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/database/migrations/1752935614586-create-table-transaction.ts\n            \n            class\n            CreateTableTransaction1752935614586\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/database/seeds/factories/account.factory.ts\n            \n            function\n            accountFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/database/seeds/factories/user.factory.ts\n            \n            function\n            cpfGenerator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/database/seeds/factories/user.factory.ts\n            \n            function\n            userFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/database/seeds/main.seed.ts\n            \n            function\n            runSeed\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/database/seeds/main.seed.ts\n            \n            variable\n            datasource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @keyv/redis : ^4.6.0\n        \n            @nestjs/bull : ^11.0.3\n        \n            @nestjs/common : ^11.0.1\n        \n            @nestjs/config : ^4.0.2\n        \n            @nestjs/core : ^11.0.1\n        \n            @nestjs/jwt : ^11.0.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/platform-express : ^11.0.1\n        \n            @nestjs/swagger : ^11.2.0\n        \n            @nestjs/typeorm : ^11.0.0\n        \n            bcrypt : ^6.0.0\n        \n            bull : ^4.16.5\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.2\n        \n            ioredis : ^5.6.1\n        \n            pg : ^8.16.3\n        \n            postgres : ^3.4.7\n        \n            reflect-metadata : ^0.2.2\n        \n            rxjs : ^7.8.1\n        \n            typeorm : ^0.3.25\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AccountStatus   (src/.../accountStatus.enum.ts)\n                        \n                        \n                            AccountType   (src/.../accountType.enum.ts)\n                        \n                        \n                            FailureReason   (src/.../failure-reason.enum.ts)\n                        \n                        \n                            TransactionStatus   (src/.../transaction-status.enum.ts)\n                        \n                        \n                            userRole   (src/.../userRole.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/business-modules/account/enums/accountStatus.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        AccountStatus\n                    \n                \n                        \n                            \n                                 ACTIVE\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 DEACTIVATED\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 CREATED\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 CANCELED\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n            \n        \n\n    src/business-modules/account/enums/accountType.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        AccountType\n                    \n                \n                        \n                            \n                                 CHECKING_ACCOUNT\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 SAVINGS_ACCOUNT\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 PAYROLL_ACCOUNT\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n            \n        \n\n    src/database/enums/failure-reason.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        FailureReason\n                    \n                \n                        \n                            \n                                 INSUFFICIENT_FUNDS\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 INVALID_ACCOUNT\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 ACCOUNT_BLOCKED\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 LIMIT_EXCEEDED\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n                        \n                            \n                                 NETWORK_ERROR\n                            \n                        \n                        \n                            \n                                Value : 5\n                            \n                        \n                        \n                            \n                                 DUPLICATE_TRANSACTION\n                            \n                        \n                        \n                            \n                                Value : 6\n                            \n                        \n                        \n                            \n                                 INTERNAL_ERROR\n                            \n                        \n                        \n                            \n                                Value : 7\n                            \n                        \n                        \n                            \n                                 CURRENCY_MISMATCH\n                            \n                        \n                        \n                            \n                                Value : 8\n                            \n                        \n                        \n                            \n                                 TIMEOUT\n                            \n                        \n                        \n                            \n                                Value : 9\n                            \n                        \n                        \n                            \n                                 UNAUTHORIZED\n                            \n                        \n                        \n                            \n                                Value : 10\n                            \n                        \n            \n        \n\n    src/database/enums/transaction-status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        TransactionStatus\n                    \n                \n                        \n                            \n                                 FAILURE\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 COMPLETED\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n            \n        \n\n    src/business-modules/user/enums/userRole.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        userRole\n                    \n                \n                        \n                            \n                                 DEFAULT\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 SUPPORT\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            accountFactory   (src/.../account.factory.ts)\n                        \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            cpfGenerator   (src/.../user.factory.ts)\n                        \n                        \n                            runSeed   (src/.../main.seed.ts)\n                        \n                        \n                            userFactory   (src/.../user.factory.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/database/seeds/factories/account.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        accountFactory\n                        \n                    \n                \n            \n            \n                \naccountFactory()\n                \n            \n\n\n\n\n        \n    \n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/database/seeds/factories/user.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        cpfGenerator\n                        \n                    \n                \n            \n            \n                \ncpfGenerator(dataSource: DataSource)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dataSource\n                                            \n                                                        DataSource\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userFactory\n                        \n                    \n                \n            \n            \n                \nuserFactory(__namedParameters: {datasource: DataSource, quantity: number})\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                datasource\n                                            \n                                                        DataSource\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                quantity\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/database/seeds/main.seed.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        runSeed\n                        \n                    \n                \n            \n            \n                \nrunSeed()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covDeployment\nWhen you're ready to deploy your NestJS application to production, there are some key steps you can take to ensure it runs as efficiently as possible. Check out the deployment documentation for more information.\nIf you are looking for a cloud-based platform to deploy your NestJS application, check out Mau, our official platform for deploying NestJS applications on AWS. Mau makes deployment straightforward and fast, requiring just a few simple steps:\nExample :$ npm install -g @nestjs/mau\n$ mau deployWith Mau, you can deploy your application in just a few clicks, allowing you to focus on building features rather than managing infrastructure.\nResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nDeploy your application to AWS with the help of NestJS Mau in just a few clicks.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AccountModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AccountModule\n\n\n\ncluster_AccountModule_exports\n\n\n\ncluster_AccountModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\n\nAccountService \n\nAccountService \n\n\n\nTransactionsRepository \n\nTransactionsRepository \n\n\n\nAccountModule\n\nAccountModule\n\nAccountService  -->\n\nAccountModule->AccountService \n\n\n\nTransactionsRepository  -->\n\nAccountModule->TransactionsRepository \n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAccountModule->AppModule\n\n\n\n\n\nAccountRepository\n\nAccountRepository\n\nAccountModule -->\n\nAccountRepository->AccountModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nAccountRepository->UserModule\n\n\n\n\n\nAccountService\n\nAccountService\n\nAccountModule -->\n\nAccountService->AccountModule\n\n\n\n\n\nTransactionsRepository\n\nTransactionsRepository\n\nAccountModule -->\n\nTransactionsRepository->AccountModule\n\n\n\n\n\nUserRepository\n\nUserRepository\n\nAccountModule -->\n\nUserRepository->AccountModule\n\n\n\nUserModule -->\n\nUserRepository->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nAccountModule -->\n\nUserService->AccountModule\n\n\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserRepository \n\nUserRepository \n\nUserRepository  -->\n\nUserModule->UserRepository \n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    3 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    10 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    20 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : MIT\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            datasource   (src/.../main.seed.ts)\n                        \n                        \n                            dataSource   (src/.../datasource.ts)\n                        \n                        \n                            dataSourceOptions   (src/.../datasource.ts)\n                        \n                        \n                            DataSourceProvider   (src/.../datasource.provider.ts)\n                        \n                        \n                            IsValidCpf   (src/.../is-valid-cpf.decorator.ts)\n                        \n                        \n                            IsValidPhoneNumber   (src/.../is-valid-phone-number.decorator.ts)\n                        \n                        \n                            Roles   (src/.../roles.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/database/seeds/main.seed.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        datasource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new DataSource(dataSourceOptions)\n                    \n                \n\n\n        \n    \n\n    src/database/connection/datasource.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        dataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new DataSource(dataSourceOptions)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSourceOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DataSourceOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  type: 'postgres',\n  username: process.env.DB_USER,\n  password: process.env.DB_PASSWORD,\n  database: process.env.DB_NAME,\n  host: process.env.DB_HOST,\n  port: Number(process.env.DB_PORT),\n  entities: [`${__dirname}/../entities/**/*.entity.{ts,js}`],\n  migrations: [`${__dirname}/../migrations/**/*.{ts,js}`],\n  synchronize: false,\n}\n                    \n                \n\n\n        \n    \n\n    src/database/connection/datasource.provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DataSourceProvider\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    provide: 'DATA_SOURCE',\n    useFactory: async () => {\n      const datasource = new DataSource(dataSourceOptions);\n\n      await dataSource.initialize();\n\n      return datasource;\n    },\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/commons/decorators/is-valid-cpf/is-valid-cpf.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IsValidCpf\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...args: string[]) => SetMetadata('is-valid-cpf', args)\n                    \n                \n\n\n        \n    \n\n    src/commons/decorators/is-valid-phone-number/is-valid-phone-number.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IsValidPhoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...args: string[]) => SetMetadata('is-valid-phone-number', args)\n                    \n                \n\n\n        \n    \n\n    src/commons/decorators/roles/roles.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Roles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...args: string[]) => SetMetadata('roles', args)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
